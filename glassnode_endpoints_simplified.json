{
  "addresses": [
    {
      "path": "/v1/metrics/addresses/accumulation_count",
      "method": "GET",
      "metric": "accumulation_count",
      "summary": "Accumulation Addresses",
      "description": "The number of unique accumulation addresses. Accumulation addresses are defined as addresses that have at least 2 incoming non-dust transfers and have never spent funds. Exchange addresses and addresses receiving from coinbase transactions (miner addresses) are discarded. To account for lost coins, addresses that were last active more than 7 years ago are omitted as well.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.AccumulationCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/accumulation_balance",
      "method": "GET",
      "metric": "accumulation_balance",
      "summary": "Accumulation Balance",
      "description": "The total amount of funds held in [accumulation addresses](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;addresses.AccumulationCount). Accumulation addresses are defined as addresses that have at least 2 incoming non-dust transfers and have never spent funds. Exchange addresses and addresses receiving from coinbase transactions (miner addresses) are discarded. To account for lost coins, addresses that were last active more than 7 years ago are omitted as well.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.AccumulationBalance?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/active_count",
      "method": "GET",
      "metric": "active_count",
      "summary": "Active Addresses",
      "description": "The number of unique addresses that were active in the network either as a sender or receiver. Only addresses that were active in successful transactions are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.ActiveCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/active_count_with_contracts",
      "method": "GET",
      "metric": "active_count_with_contracts",
      "summary": "Active Addresses (with contracts)",
      "description": "The number of unique addresses that were active in the network either as a sender or receiver or called a smart contract. Only successful transactions are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.ActiveCountWithContracts?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/addresses/activity_retention_rate",
      "method": "GET",
      "metric": "activity_retention_rate",
      "summary": "Activity Retention Rate",
      "description": "This metric measures the percentage of addresses that were active—through sending or receiving transactions—in the previous 30-day period and remained active in the current one. It reflects how consistently participants continue to engage with the asset over time.\n\nFor example, a 70% retention rate means that 7 out of 10 previously active addresses continued transacting in the following period.\n\nHigher retention indicates sustained user participation and provides an indication of the asset’s utility. Assets with frequent, ongoing usage—such as stablecoins—often exhibit higher activity retention rates. Conversely, a drop in retention may reflect reduced on-chain interaction, though it doesn’t necessarily signal waning interest, as users may shift to holding rather than transacting.\n\nBased on: [Glassnode Studio Chart – Activity Retention](https://studio.glassnode.com/charts/addresses.ActivityRetention?a&#x3D;BTC)\n\nFurther reading: [Glassnode Insights – Understanding Retention](https://insights.glassnode.com/on-chain-retention/)\n\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.ActivityRetentionRate?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_distribution_relative",
      "method": "GET",
      "metric": "supply_distribution_relative",
      "summary": "Address Supply Distribution",
      "description": "The relative distribution of the circulating supply held by addresses with specific balance bands.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyDistributionRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/loss_count",
      "method": "GET",
      "metric": "loss_count",
      "summary": "Addresses in Loss",
      "description": "The number of unique addresses whose funds have an average buy price that is higher than the current price. \"Buy price\" is here defined as the price at the time coins were transferred into an address.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.LossCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/profit_count",
      "method": "GET",
      "metric": "profit_count",
      "summary": "Addresses in Profit",
      "description": "The number of unique addresses whose funds have an average buy price that is lower than the current price. \"Buy price\" is here defined as the price at the time coins were transferred into an address.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.ProfitCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_1_usd_count",
      "method": "GET",
      "metric": "min_1_usd_count",
      "summary": "Addresses with Balance ≥ $1",
      "description": "The number of unique addresses holding at least a value of $1 USD.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min1UsdCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_10_usd_count",
      "method": "GET",
      "metric": "min_10_usd_count",
      "summary": "Addresses with Balance ≥ $10",
      "description": "The number of unique addresses holding at least a value of $10 USD.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min10UsdCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_100_usd_count",
      "method": "GET",
      "metric": "min_100_usd_count",
      "summary": "Addresses with Balance ≥ $100",
      "description": "The number of unique addresses holding at least a value of $100 USD.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min100UsdCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_100k_usd_count",
      "method": "GET",
      "metric": "min_100k_usd_count",
      "summary": "Addresses with Balance ≥ $100k",
      "description": "The number of unique addresses holding at least a value of $100k USD.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min100KUsdCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_10k_usd_count",
      "method": "GET",
      "metric": "min_10k_usd_count",
      "summary": "Addresses with Balance ≥ $10k",
      "description": "The number of unique addresses holding at least a value of $10k USD.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min10KUsdCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_1k_usd_count",
      "method": "GET",
      "metric": "min_1k_usd_count",
      "summary": "Addresses with Balance ≥ $1k",
      "description": "The number of unique addresses holding at least a value of $1k USD.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min1KUsdCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_1m_usd_count",
      "method": "GET",
      "metric": "min_1m_usd_count",
      "summary": "Addresses with Balance ≥ $1M",
      "description": "The number of unique addresses holding at least a value of $1M USD.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min1MUsdCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_point_zero_1_count",
      "method": "GET",
      "metric": "min_point_zero_1_count",
      "summary": "Addresses with Balance ≥ 0.01",
      "description": "The number of unique addresses holding at least 0.01 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.MinPointZero1Count?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_point_1_count",
      "method": "GET",
      "metric": "min_point_1_count",
      "summary": "Addresses with Balance ≥ 0.1",
      "description": "The number of unique addresses holding at least 0.1 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.MinPoint1Count?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_1_count",
      "method": "GET",
      "metric": "min_1_count",
      "summary": "Addresses with Balance ≥ 1",
      "description": "The number of unique addresses holding at least 1 coin.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min1Count?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_10_count",
      "method": "GET",
      "metric": "min_10_count",
      "summary": "Addresses with Balance ≥ 10",
      "description": "The number of unique addresses holding at least 10 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min10Count?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_100_count",
      "method": "GET",
      "metric": "min_100_count",
      "summary": "Addresses with Balance ≥ 100",
      "description": "The number of unique addresses holding at least 100 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min100Count?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_10k_count",
      "method": "GET",
      "metric": "min_10k_count",
      "summary": "Addresses with Balance ≥ 10k",
      "description": "The number of unique addresses holding at least 10k coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min10KCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_1k_count",
      "method": "GET",
      "metric": "min_1k_count",
      "summary": "Addresses with Balance ≥ 1k",
      "description": "The number of unique addresses holding at least 1k coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min1KCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/min_32_count",
      "method": "GET",
      "metric": "min_32_count",
      "summary": "Addresses with Balance ≥ 32 ETH",
      "description": "The number of unique addresses holding at least 32 ETH. This is the number of potential validators for ETH 2.0. Only Externally Owned Addresses (EOAs) are counted, contracts are excluded.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Min32Count?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/addresses/non_zero_count",
      "method": "GET",
      "metric": "non_zero_count",
      "summary": "Addresses with Non-Zero Balance",
      "description": "The number of unique addresses holding a positive (non-zero) amount of coins. Note that ERC-20 Assets 1h resolution is being updated every 24 hours.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.NonZeroCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/sending_to_exchanges_count",
      "method": "GET",
      "metric": "sending_to_exchanges_count",
      "summary": "Depositing Addresses",
      "description": "The number of unique addresses that appeared as a sender in a transaction sending funds to exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SendingToExchangesCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/holder_accumulation_ratio",
      "method": "GET",
      "metric": "holder_accumulation_ratio",
      "summary": "Holder Accumulation Ratio",
      "description": "This metric shows the proportion of active holders who are increasing their positions versus those decreasing them, focusing exclusively on holders who changed their balance. It’s calculated by dividing the number of holders who increased their balance by the total number of holders who changed their balance in either direction.\n\nRatios above 50 ratio means that among holders who adjusted their position, 3 out of 4 chose to accumulate more.\n\nIt highlights whether the active holder base is expanding or contracting, and can serve as a proxy for sentiment—where higher ratios may suggest bullish momentum, and lower ratios may indicate distribution or profit-taking.\n\nBased on: [Glassnode Studio Chart – Holder Retention](https://studio.glassnode.com/charts/addresses.HolderRetention?a&#x3D;BTC)\n\nFurther reading: [Glassnode Insights – Understanding Retention](https://insights.glassnode.com/on-chain-retention/)\n\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.HolderAccumulationRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/holder_retention_rate",
      "method": "GET",
      "metric": "holder_retention_rate",
      "summary": "Holder Retention Rate",
      "description": "This metric tracks the percentage of addresses that maintain a balance of the asset across consecutive 30-day periods. It&#x27;s calculated by dividing the number of addresses currently holding a balance (including new holders, resurrected holders, and all retained holder categories) by the total number of addresses that held a balance at any point during the observation period.\n\nHigher retention rates suggest strong holder confidence and long-term commitment. A retention rate of 80% means 8 out of 10 addresses that had a balance continue to hold the asset, while lower rates may indicate selling pressure or loss of confidence.\n\nBased on: [Glassnode Studio Chart – Holder Retention](https://studio.glassnode.com/charts/addresses.HolderRetention?a&#x3D;BTC)\n\nFurther reading: [Glassnode Insights – Understanding Retention](https://insights.glassnode.com/on-chain-retention/)\n\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.HolderRetentionRate?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/activity_retention",
      "method": "GET",
      "metric": "activity_retention",
      "summary": "MoM Activity Retention",
      "description": "This metric shows the number of addresses that interact with the asset, segmented into \"retention cohorts\". The cohorts are defined as follows:\n * &#x60;New&#x60;: Addresses that interacted with the asset for the first time during the last 30 days.\n * &#x60;Retained (Increase)&#x60;: Addresses that were active in both the previous and current 30d period, and increased their activity.\n * &#x60;Retained (Equal)&#x60;: Addresses that were active in both the previous and current 30d period, with the same activity.\n * &#x60;Retained (Decrease)&#x60;: Addresses that were active in both the previous and current 30d period, and reduced their activity.\n * &#x60;Resurrected&#x60;: Addresses that were active in the current, but inactive in the previous 30d period.\n * &#x60;Churned&#x60;: Addresses that were not active within the last 30 days, but were active in the previous 30d period.\n * &#x60;Dead&#x60; (API only): Addresses that were inactive in the current and previous 30d interval, but were active at some point before.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.ActivityRetention?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/holder_retention",
      "method": "GET",
      "metric": "holder_retention",
      "summary": "MoM Holder Retention",
      "description": "This metric shows the number of addresses that hold the selected asset or held it previously, segmented into \"retention cohorts\". The cohorts are defined as follows:\n * &#x60;New&#x60;: Addresses that interacted with the asset for the first time during the last 30 days and have a non-zero balance.\n * &#x60;Retained (Increase)&#x60;: Addresses that had a non-zero balance 30d ago and have increased their holdings since then.\n * &#x60;Retained (Equal)&#x60;: Addresses that have the same non-zero balance now compared to 30 days ago.\n * &#x60;Retained (Decrease)&#x60;: Addresses that had a non-zero balance 30d ago and have reduced their holdings since then, but still have a balance greater than zero.\n * &#x60;Resurrected&#x60;: Addresses with a non-zero balance that didn&#x27;t hold any supply 30 days ago. Note that addresses that appeared for the first time during the last 30 days are not included here and instead captured in the cohort &#x60;New&#x60;.\n * &#x60;Churned&#x60;: Addresses that no longer hold any supply, but had a non-zero balance 30 days ago.\n * &#x60;Resurrected & Churned&#x60;: Addresses that neither hold any supply nor held supply 30d ago, but had a non-zero balance in between. Note that addresses that appeared for the first time during the last 30 days are not included here and instead captured in the cohort &#x60;New & Churned&#x60;.\n * &#x60;New & Churned&#x60;: Addresses that interacted with the asset for the first time during the last 30 days, but no longer hold any supply.\n * &#x60;Dead&#x60; (API only): Addresses that didn&#x27;t hold any supply during the last 30 days, but had a non-zero balance at some point before.\n\nAddresses with a balance below a certain dust threshold are not considered as holders.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.HolderRetention?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/new_non_zero_count",
      "method": "GET",
      "metric": "new_non_zero_count",
      "summary": "New Addresses",
      "description": "The number of unique addresses that appeared for the first time in a transaction of the native coin in the network.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.NewNonZeroCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/profit_relative",
      "method": "GET",
      "metric": "profit_relative",
      "summary": "Percent Addresses in Profit",
      "description": "The percentage of unique addresses whose funds have an average buy price that is lower than the current price. \"Buy price\" is here defined as the price at the time coins were transferred into an address.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.ProfitRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/receiving_count",
      "method": "GET",
      "metric": "receiving_count",
      "summary": "Receiving Addresses",
      "description": "The number of unique addresses that were active as a receiver of funds. Only addresses that were active as a receiver in successful non-zero transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.ReceivingCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/sending_count",
      "method": "GET",
      "metric": "sending_count",
      "summary": "Sending Addresses",
      "description": "The number of unique addresses that were active as a sender of funds. Only addresses that were active as a sender in successful non-zero transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SendingCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_less_0001",
      "method": "GET",
      "metric": "supply_balance_less_0001",
      "summary": "Supply Held by Addresses with Balance < 0.001",
      "description": "The total circulating supply held by addresses with balance lower than 0.001 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalanceLess0001?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_more_100k",
      "method": "GET",
      "metric": "supply_balance_more_100k",
      "summary": "Supply Held by Addresses with Balance > 100k",
      "description": "The total circulating supply held by addresses with balance of at least 100,000 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalanceMore100K?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_0001_001",
      "method": "GET",
      "metric": "supply_balance_0001_001",
      "summary": "Supply Held by Addresses with Balance 0.001 - 0.01",
      "description": "The total circulating supply held by addresses with balance between 0.001 and 0.01 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance0001001?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_001_01",
      "method": "GET",
      "metric": "supply_balance_001_01",
      "summary": "Supply Held by Addresses with Balance 0.01 - 0.1",
      "description": "The total circulating supply held by addresses with balance between 0.01 and 0.1 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance00101?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_01_1",
      "method": "GET",
      "metric": "supply_balance_01_1",
      "summary": "Supply Held by Addresses with Balance 0.1 - 1",
      "description": "The total circulating supply held by addresses with balance between 0.1 and 1 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance011?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_1_10",
      "method": "GET",
      "metric": "supply_balance_1_10",
      "summary": "Supply Held by Addresses with Balance 1 - 10",
      "description": "The total circulating supply held by addresses with balance between 1 and 10 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance110?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_10_100",
      "method": "GET",
      "metric": "supply_balance_10_100",
      "summary": "Supply Held by Addresses with Balance 10 - 100",
      "description": "The total circulating supply held by addresses with balance between 10 and 100 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance10100?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_100_1k",
      "method": "GET",
      "metric": "supply_balance_100_1k",
      "summary": "Supply Held by Addresses with Balance 100 - 1k",
      "description": "The total circulating supply held by addresses with balance between 100 and 1k coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance1001K?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_10k_100k",
      "method": "GET",
      "metric": "supply_balance_10k_100k",
      "summary": "Supply Held by Addresses with Balance 10k - 100k",
      "description": "The total circulating supply held by addresses with balance between 10k and 100k coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance10K100K?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_1k_10k",
      "method": "GET",
      "metric": "supply_balance_1k_10k",
      "summary": "Supply Held by Addresses with Balance 1k - 10k",
      "description": "The total circulating supply held by addresses with balance between 1k and 10k coins.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance1K10K?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_above_10000_ppm",
      "method": "GET",
      "metric": "supply_balance_above_10000_ppm",
      "summary": "Supply in Addresses Holding above 10000 ppm",
      "description": "The total circulating supply held by addresses with balance above 10000 parts per million of the total supply.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalanceAbove10000Ppm?a=USDT)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_01_10_ppm",
      "method": "GET",
      "metric": "supply_balance_01_10_ppm",
      "summary": "Supply in Addresses Holding between 0.01 and 10 ppm",
      "description": "The total circulating supply held by addresses with balance between 0.01 and 10 parts per million of the total supply.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance0110Ppm?a=USDT)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_10_1000_ppm",
      "method": "GET",
      "metric": "supply_balance_10_1000_ppm",
      "summary": "Supply in Addresses Holding between 10 and 1000 ppm",
      "description": "The total circulating supply held by addresses with balance between 10 and 1000 parts per million of the total supply.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance101000Ppm?a=USDT)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_1000_10000_ppm",
      "method": "GET",
      "metric": "supply_balance_1000_10000_ppm",
      "summary": "Supply in Addresses Holding between 1000 and 10000 ppm",
      "description": "The total circulating supply held by addresses with balance between 1000 and 10000 parts per million of the total supply.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalance100010000Ppm?a=USDT)\n"
    },
    {
      "path": "/v1/metrics/addresses/supply_balance_less_01_ppm",
      "method": "GET",
      "metric": "supply_balance_less_01_ppm",
      "summary": "Supply in Addresses Holding less than 0.01 ppm",
      "description": "The total circulating supply held by addresses with balance less than 0.01 parts per million of the total supply.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.SupplyBalanceLess01Ppm?a=USDT)\n"
    },
    {
      "path": "/v1/metrics/addresses/count",
      "method": "GET",
      "metric": "count",
      "summary": "Total Addresses",
      "description": "The total number of unique addresses that ever appeared in a transaction of the native coin in the network.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.Count?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/addresses/receiving_from_exchanges_count",
      "method": "GET",
      "metric": "receiving_from_exchanges_count",
      "summary": "Withdrawing Addresses",
      "description": "The number of unique addresses that appeared as a receiver in a transaction receiving funds from an exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/addresses.ReceivingFromExchangesCount?a=BTC)\n"
    }
  ],
  "blockchain": [
    {
      "path": "/v1/metrics/blockchain/block_height",
      "method": "GET",
      "metric": "block_height",
      "summary": "Block Height",
      "description": "The block height, i.e. the total number of blocks ever created and included in the main blockchain.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.BlockHeight?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/block_interval_mean",
      "method": "GET",
      "metric": "block_interval_mean",
      "summary": "Block Interval (Mean)",
      "description": "The mean time (in seconds) between mined blocks.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.BlockIntervalMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/block_interval_median",
      "method": "GET",
      "metric": "block_interval_median",
      "summary": "Block Interval (Median)",
      "description": "The median time (in seconds) between mined blocks.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.BlockIntervalMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/block_size_mean",
      "method": "GET",
      "metric": "block_size_mean",
      "summary": "Block Size (Mean)",
      "description": "The mean size of all blocks created within the time period (in bytes).\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.BlockSizeMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/block_size_sum",
      "method": "GET",
      "metric": "block_size_sum",
      "summary": "Block Size (Total)",
      "description": "The total size of all blocks created within the time period (in bytes).\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.BlockSizeSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/block_count",
      "method": "GET",
      "metric": "block_count",
      "summary": "Blocks Mined",
      "description": "The number of blocks created and included in the main blockchain in that time period.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.BlockCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_profit_relative",
      "method": "GET",
      "metric": "utxo_profit_relative",
      "summary": "Percent UTXOs in Profit",
      "description": "The percentage of unspent transaction outputs whose price at creation time was lower than the current price. For more information see [this article](https://medium.com/glassnode-insights/dissecting-bitcoins-unrealised-on-chain-profit-loss-73e735020c8d).\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoProfitRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_created_value_mean",
      "method": "GET",
      "metric": "utxo_created_value_mean",
      "summary": "UTXO Value Created (Mean)",
      "description": "The mean amount of coins in newly created UTXOs.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoCreatedValueMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_created_value_median",
      "method": "GET",
      "metric": "utxo_created_value_median",
      "summary": "UTXO Value Created (Median)",
      "description": "The median amount of coins in newly created UTXOs.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoCreatedValueMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_created_value_sum",
      "method": "GET",
      "metric": "utxo_created_value_sum",
      "summary": "UTXO Value Created (Total)",
      "description": "The total amount of coins in newly created UTXOs.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoCreatedValueSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_spent_value_mean",
      "method": "GET",
      "metric": "utxo_spent_value_mean",
      "summary": "UTXO Value Spent (Mean)",
      "description": "The mean amount of coins in spent transaction outputs.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoSpentValueMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_spent_value_median",
      "method": "GET",
      "metric": "utxo_spent_value_median",
      "summary": "UTXO Value Spent (Median)",
      "description": "The median amount of coins in spent transaction outputs.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoSpentValueMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_spent_value_sum",
      "method": "GET",
      "metric": "utxo_spent_value_sum",
      "summary": "UTXO Value Spent (Total)",
      "description": "The total amount of coins in spent transaction outputs.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoSpentValueSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_count",
      "method": "GET",
      "metric": "utxo_count",
      "summary": "UTXOs (Total)",
      "description": "The total number of UTXOs in the network.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_created_count",
      "method": "GET",
      "metric": "utxo_created_count",
      "summary": "UTXOs Created",
      "description": "The number of created unspent transaction outputs.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoCreatedCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_loss_count",
      "method": "GET",
      "metric": "utxo_loss_count",
      "summary": "UTXOs in Loss",
      "description": "The number of unspent transaction outputs whose price at creation time was higher than the current price. For more information see [this article](https://medium.com/glassnode-insights/dissecting-bitcoins-unrealised-on-chain-profit-loss-73e735020c8d).\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoLossCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_profit_count",
      "method": "GET",
      "metric": "utxo_profit_count",
      "summary": "UTXOs in Profit",
      "description": "The number of unspent transaction outputs whose price at creation time was lower than the current price. For more information see [this article](https://medium.com/glassnode-insights/dissecting-bitcoins-unrealised-on-chain-profit-loss-73e735020c8d).\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoProfitCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/blockchain/utxo_spent_count",
      "method": "GET",
      "metric": "utxo_spent_count",
      "summary": "UTXOs Spent",
      "description": "The number of spent transaction outputs.\n\n[View in Studio](https://studio.glassnode.com/charts/blockchain.UtxoSpentCount?a=BTC)\n"
    }
  ],
  "breakdowns": [
    {
      "path": "/v1/metrics/breakdowns/marketcap_usd_by_age",
      "method": "GET",
      "metric": "marketcap_usd_by_age",
      "summary": "Market Cap by Age",
      "description": "Market Capitalization (Market Cap) is a fundamental metric that calculates the total market value of a digital asset at a given time. It is computed by multiplying the current market price by the total supply of the asset. The Market Cap by Age metric further refines this by categorizing digital assets into different age cohorts, providing a detailed view of the total market value of supply of varying ages. This metric is beneficial for understanding value distribution across different age cohorts, from hot supply (newly acquired coins) to cold supply (older, dormant coins). For example, it can help answer questions like, &#x27;Is the majority of the market value held in older or newer coins?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.MarketcapUsdByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/marketcap_usd_by_pnl",
      "method": "GET",
      "metric": "marketcap_usd_by_pnl",
      "summary": "Market Cap by PnL",
      "description": "Market Capitalization (Market Cap) is a fundamental metric that calculates the total market value of a digital asset at a given time, computed by multiplying the current market price by the total supply of the asset. The Market Cap by Profit and Loss metric further categorizes this data based on unrealized profit and loss levels, using Fibonacci retracement levels to provide a detailed view of the market&#x27;s valuation. This metric is particularly useful for understanding the distribution of unrealized gains and losses across the market, offering insights into how much of the market cap is held at a profit versus a loss. For example, it can help answer questions like, &#x27;Is the majority of the market cap currently held in assets that are above or below their acquisition cost?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.MarketcapUsdByPnl?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/marketcap_usd_by_wallet_size",
      "method": "GET",
      "metric": "marketcap_usd_by_wallet_size",
      "summary": "Market Cap by Wallet Size",
      "description": "Market Capitalization (Market Cap) is a fundamental metric that calculates the total market value of a digital asset at a given time. It is computed by multiplying the current market price by the total supply of the asset. The Market Cap by Wallet Size metric takes this a step further by categorizing digital assets according to the size of their wallets, providing a granular view of the total market value held by different investor classes, from whales to retail investors. This metric is particularly useful for identifying potential discrepancies in the investment base and understanding the behavior of different investor classes. For instance, it can help answer questions like, &#x27;Are larger wallets (whales) holding a greater proportion of the market value compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.MarketcapUsdByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/mvrv_by_age",
      "method": "GET",
      "metric": "mvrv_by_age",
      "summary": "MVRV by Age",
      "description": "The MVRV by Age metric is a nuanced version of the Market Value to Realized Value (MVRV) ratio, which compares the market capitalization (the current market value) to the realized capitalization (the value when the coins last moved). The MVRV by Age metric categorizes digital assets into different age cohorts, providing an aggregate assessment of the Unrealized Profit or Loss held across varying age groups. This metric is particularly useful for differentiating the behavior of investors who hold assets for an extended period of time versus those who trade frequently in the short term. For example, it can help answer questions like, &#x27;Are older coins being held at a higher relative valuation than coins that recently changed hands?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.MvrvByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/mvrv_by_pnl",
      "method": "GET",
      "metric": "mvrv_by_pnl",
      "summary": "MVRV by PnL",
      "description": "The Market Value to Realized Value (MVRV) ratio is a key metric that compares the market capitalization (the current market value) to the realized capitalization (the value when the coins last moved). The MVRV by Profit and Loss metric further categorizes this data based on unrealized profit and loss levels, using Fibonacci retracement levels to provide a nuanced view of the market&#x27;s valuation. This metric is particularly useful for understanding the distribution of unrealized gains and losses across the market, helping investors gauge whether the current market price is above or below a \"fair value.\" For example, it can help answer questions like, &#x27;Are most digital assets currently held at a profit or a loss relative to their acquisition cost&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.MvrvByPnl?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/mvrv_by_wallet_size",
      "method": "GET",
      "metric": "mvrv_by_wallet_size",
      "summary": "MVRV by Wallet Size",
      "description": "The MVRV by Wallet Size metric is a more detailed version of the Market Value to Realized Value (MVRV) ratio. The MVRV ratio is a key indicator that compares the market capitalization (the current market value) to the realized capitalization (the value when the coins last moved). By categorizing digital assets according to the size of their wallets, the MVRV by Wallet Size metric provides a granular assessment of the Unrealized Profit or Loss held across different investor classes, from whales to retail investors alike. This metric is particularly useful for identifying potential discrepancies in the investment base and understanding the behavior of different investor classes. For instance, it can help answer questions like, &#x27;Are larger wallets (whales) holding their assets at a higher value compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.MvrvByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/marketcap_realized_usd_by_age",
      "method": "GET",
      "metric": "marketcap_realized_usd_by_age",
      "summary": "Realized Cap by Age",
      "description": "Realized Capitalization (Realized Cap) is a key metric that calculates the total value of a digital asset based on the price at the time each unit last moved. In other words, it reflects the total acquisition cost of all coins in circulation. The Realized Cap by Age metric provides an additional layer of detail by categorizing digital assets into different age cohorts, offering a comprehensive view of the acquisition cost of supply portions of varying ages. This metric is particularly useful for understanding the distribution of network wealth across different age cohorts, from hot supply (coins that recently moved) to cold supply (older, dormant coins). For example, it can help answer questions like, &#x27;Is the majority of the acquisition cost concentrated in older or newer coins?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.MarketcapRealizedUsdByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/marketcap_realized_usd_by_pnl",
      "method": "GET",
      "metric": "marketcap_realized_usd_by_pnl",
      "summary": "Realized Cap by PnL",
      "description": "Realized Capitalization (Realized Cap) is a significant metric that calculates the total acquisition cost of all coins in circulation, based on the price at the time each unit last moved. The Realized Cap by Profit and Loss metric further categorizes this data based on unrealized profit and loss levels, using Fibonacci retracement levels to provide a nuanced view of the network&#x27;s valuation. This metric is particularly useful for understanding the distribution of unrealized gains and losses across the market, offering insights into how much of the realized cap is held at a profit versus a loss. For example, it can help answer questions like, &#x27;Is the majority of the realized cap currently held in assets that are above or below their acquisition cost?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.MarketcapRealizedUsdByPnl?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/marketcap_realized_usd_by_wallet_size",
      "method": "GET",
      "metric": "marketcap_realized_usd_by_wallet_size",
      "summary": "Realized Cap by Wallet Size",
      "description": "The Realized Capitalization (Realized Cap) is a significant metric that calculates the total acquisition cost of all coins in circulation, based on the price at the time each unit last moved. The Realized Cap by Wallet Size metric further refines this by categorizing digital assets according to the size of their wallets, providing a granular view of the network wealth held by different investor classes, from whales to retail investors. This metric is particularly useful for identifying potential discrepancies in the investment base and understanding the behavior of different investor classes. For instance, it can help answer questions like, &#x27;Are larger wallets (whales) holding a greater proportion of the acquisition cost compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.MarketcapRealizedUsdByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/realized_loss_by_age",
      "method": "GET",
      "metric": "realized_loss_by_age",
      "summary": "Realized Loss by Age",
      "description": "Realized Loss is a metric that calculates the total loss of a digital asset based on the difference between the acquisition price and the sale price of all spent coins where the sale price was lower than the acquisition price. The Realized Loss by Age metric further categorizes these losses into different age cohorts, providing a detailed view of the total loss experienced by holders of supply portions of varying ages. This metric is particularly useful for understanding the distribution of losses across different age cohorts, from hot supply (newly acquired coins) to cold supply (older, dormant coins). For example, it can help answer questions like, &#x27;Is the total realized loss greater for hot or cold supply?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.RealizedLossByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/realized_loss_by_pnl",
      "method": "GET",
      "metric": "realized_loss_by_pnl",
      "summary": "Realized Loss by Loss Margin",
      "description": "Realized Loss is a key metric that calculates the total loss of a digital asset based on the difference between the acquisition price and the sale price for all spent coins where the sale price was lower than the acquisition price. The Realized Loss by Loss Margin metric further categorizes these losses based on realized loss levels, using Fibonacci retracement levels to provide a nuanced view of the market&#x27;s loss distribution. This metric is particularly useful for understanding the extent and distribution of realized losses across the market, offering insights into how much of the market&#x27;s realized loss is concentrated at different levels. For example, it can help answer questions like, &#x27;Are most realized losses occurring at specific retracement levels, indicating potential support or resistance zones?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.RealizedLossByPnl?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/realized_loss_by_lth_sth",
      "method": "GET",
      "metric": "realized_loss_by_lth_sth",
      "summary": "Realized Loss by LTH/STH",
      "description": "Realized Loss is a metric that quantifies the total loss of a digital asset, calculated by the difference between the acquisition price and the sale price for all spent coins where the sale price was lower than the acquisition price. The Realized Loss by LTH/STH (Long-Term Holders/Short-Term Holders) metric further enhances this by categorizing digital assets into two cohorts based on the duration of holding. LTH/STH supply is defined with respect to the entity&#x27;s average purchasing date with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days. This provides a more nuanced view of the total loss experienced by both long-term and short-term holders. This metric is particularly useful for understanding the distribution of losses across these two characteristic market participants. For example, it can help answer questions like, &#x27;Are long-term holders experiencing more losses compared to short-term holders?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.RealizedLossByLthSth?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/realized_loss_by_wallet_size",
      "method": "GET",
      "metric": "realized_loss_by_wallet_size",
      "summary": "Realized Loss by Wallet Size",
      "description": "Realized Loss is a key metric that calculates the total loss of a digital asset based on the difference between the acquisition price and the sale price for all spent coins where the sale price was lower than the acquisition price. The Realized Loss by Wallet Size metric further refines this by categorizing digital assets according to the size of their wallets. This offers a granular view of the total loss experienced by different investor classes, from whales to retail investors. This metric is particularly useful for understanding the distribution of losses across different wallet sizes and identifying potential risk concentrations. For example, it can help answer questions like, &#x27;Are larger wallets (whales) experiencing more losses compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.RealizedLossByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/price_realized_usd_by_age",
      "method": "GET",
      "metric": "price_realized_usd_by_age",
      "summary": "Realized Price by Age",
      "description": "Realized Price is a metric that calculates the average acquisition cost of a digital asset based on the price at the time each unit last moved. The Realized Price by Age metric further categorizes digital assets into different age cohorts, providing a detailed view of the average acquisition cost of supply portions of varying ages. This metric is particularly useful for understanding the distribution of acquisition costs across different age cohorts, from hot supply (newly bought coins) to cold supply (older, dormant coins). For example, it can help answer questions like, &#x27;Is the average acquisition cost higher for older or newer coins?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.PriceRealizedUsdByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/price_realized_usd_by_pnl",
      "method": "GET",
      "metric": "price_realized_usd_by_pnl",
      "summary": "Realized Price by PnL",
      "description": "Realized Price is a key metric that calculates the average acquisition cost of a digital asset based on the price at the time each unit last moved. The Realized Price by Profit and Loss metric further categorizes this data based on unrealized profit and loss levels, using Fibonacci retracement levels to provide a detailed view of the average acquisition cost relative to the current market price. This metric is particularly useful for understanding the distribution of unrealized gains and losses across the market, offering insights into whether the average acquisition cost is above or below the current market price. For example, it can help answer questions like, &#x27;Is the average acquisition cost of digital assets currently higher or lower than the market price, indicating potential unrealized profit or loss?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.PriceRealizedUsdByPnl?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/price_realized_usd_by_wallet_size",
      "method": "GET",
      "metric": "price_realized_usd_by_wallet_size",
      "summary": "Realized Price by Wallet Size",
      "description": "Realized Price is a key metric that calculates the average acquisition cost of a digital asset based on the price at the time each unit last moved. The Realized Price by Wallet Size metric provides an additional layer of detail by categorizing digital assets according to the size of their wallets. This offers a granular view of the average acquisition cost held by different investor classes, from whales to retail investors. This metric is particularly useful for understanding the distribution of acquisition costs across different wallet sizes. For example, it can help answer questions like, &#x27;Is the average acquisition cost higher for larger wallets (whales) compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.PriceRealizedUsdByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/realized_profit_by_age",
      "method": "GET",
      "metric": "realized_profit_by_age",
      "summary": "Realized Profit by Age",
      "description": "Realized Profit is a metric that calculates the total profit of a digital asset based on the difference between the acquisition price and the sale price of all spent coins where the sale price was higher than the acquisition price. The Realized Profit by Age metric further categorizes these profits into different age cohorts, providing a detailed view of the total profit experienced by holders of supply portions of varying ages. This metric is particularly useful for understanding the distribution of profits across different age cohorts, from hot supply (recently acquired coins) to cold supply (older coins). For example, it can help answer questions like, &#x27;Is the total realized profit greater for older or newer coins?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.RealizedProfitByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/realized_profit_by_lth_sth",
      "method": "GET",
      "metric": "realized_profit_by_lth_sth",
      "summary": "Realized Profit by LTH/STH",
      "description": "Realized Profit is a metric that quantifies the total profit of a digital asset, calculated by the difference between the sale price and the acquisition price for all spent coins where the sale price was higher than the acquisition price. The Realized Profit by LTH/STH (Long-Term Holders/Short-Term Holders) metric further enhances this by categorizing digital assets into two cohorts based on the duration of holding. LTH/STH supply is defined with respect to the entity&#x27;s average purchasing date with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days. This provides a more nuanced view of the total profit experienced by both long-term and short-term holders. This metric is particularly useful for understanding the distribution of profit-taking across these two characteristic market participants. For example, it can help answer questions like, &#x27;Are long-term holders realizing more profits compared to short-term holders?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.RealizedProfitByLthSth?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/realized_profit_by_pnl",
      "method": "GET",
      "metric": "realized_profit_by_pnl",
      "summary": "Realized Profit by Profit Margin",
      "description": "Realized Profit is a metric that calculates the total profit of a digital asset based on the difference between the acquisition price and the sale price of all spent coins where the sale price was higher than the acquisition price. The Realized Profit by Profit Margin metric further categorizes these profits based on realized profit levels. This metric is particularly useful for understanding the extent and distribution of realized profits across the market, offering insights into how much of the market&#x27;s realized profit is concentrated at different levels. For example, it can help answer questions like, &#x27;Are most realized profits occurring at specific levels, indicating potential zones of profit-taking?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.RealizedProfitByPnl?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/realized_profit_by_wallet_size",
      "method": "GET",
      "metric": "realized_profit_by_wallet_size",
      "summary": "Realized Profit by Wallet Size",
      "description": "Realized Profit is a key metric that calculates the total profit of a digital asset based on the difference between the acquisition price and the sale price for all spent coins where the sale price was higher than the acquisition price. The Realized Profit by Wallet Size metric enhances this by categorizing digital assets according to the size of their wallets. This provides a granular view of the total profit experienced by different investor classes, from whales to retail investors. This metric is particularly useful for understanding the distribution of profits across different wallet sizes and identifying potential profit concentrations. For example, it can help answer questions like, &#x27;Are larger wallets (whales) realizing more profits compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.RealizedProfitByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/supply_by_pnl_relative",
      "method": "GET",
      "metric": "supply_by_pnl_relative",
      "summary": "Relative Supply by PnL",
      "description": "This is the relative version of [Supply by Profit and Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;breakdowns.SupplyByPnl).\n\nThe total supply of a digital asset is a fundamental metric representing the total quantity of that asset in circulation. The Supply by Profit and Loss metric further categorizes this total supply based on unrealized profit and loss levels, using Fibonacci retracement levels to provide a detailed view of the distribution of the total supply across different profit and loss thresholds. This metric is particularly useful for understanding how much of the total supply is held at a profit versus a loss, offering insights into the market&#x27;s overall sentiment and potential support or resistance levels. For example, it can help answer questions like, &#x27;Is the majority of the total supply currently held at a profit or a loss relative to its acquisition cost?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SupplyByPnlRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/sopr_by_age",
      "method": "GET",
      "metric": "sopr_by_age",
      "summary": "SOPR by Age",
      "description": "The Spent Output Profit Ratio (SOPR) is a metric that calculates the profit or loss made by holders of a digital asset when they sell, based on the difference between the sale price and the acquisition price. The SOPR by Age metric further categorizes this data into different age cohorts, providing a detailed view of the profit or loss realized by holders of supply portions of varying ages. This metric is particularly useful for understanding the distribution of profit-making or loss-making sales across different age cohorts, from hot supply (freshly acquired coins) to cold supply (longer-held coins). For example, it can help answer questions like, &#x27;Are older coins being sold at a profit more frequently compared to newer coins?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SoprByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/sopr_by_lth_sth",
      "method": "GET",
      "metric": "sopr_by_lth_sth",
      "summary": "SOPR by LTH/STH",
      "description": "The Spent Output Profit Ratio (SOPR) is a key metric that calculates the profit or loss made by holders of a digital asset when they sell, based on the difference between the sale price and the acquisition price. The SOPR by LTH/STH (Long-Term Holders/Short-Term Holders) metric further refines this by categorizing digital assets into two cohorts based on the duration of holding. LTH/STH supply is defined with respect to the entity&#x27;s average purchasing date with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days. This provides a more nuanced view of the profit or loss realized by both long-term and short-term holders. This metric is particularly useful for understanding the distribution of profit-making or loss-making sales across these two market participants. For example, it can help answer questions like, &#x27;Are long-term holders selling their assets at a profit more frequently compared to short-term holders?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SoprByLthSth?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/sopr_by_pnl",
      "method": "GET",
      "metric": "sopr_by_pnl",
      "summary": "SOPR by PnL",
      "description": "The Spent Output Profit Ratio (SOPR) is a metric that calculates the profit or loss made by holders of a digital asset when they sell, based on the difference between the sale price and the acquisition price. The SOPR by Profit and Loss metric further categorizes this data based on realized profit and loss levels, using Fibonacci retracement levels to provide a nuanced view of the market&#x27;s profit and loss distribution. This metric is particularly useful for understanding the extent and distribution of realized profits and losses across the market, offering insights into how much of the market&#x27;s realized profit or loss is concentrated at different levels. For example, it can help answer questions like, &#x27;Are most sales occurring at a profit or a loss relative to their acquisition cost, and at what levels are these profits or losses concentrated?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SoprByPnl?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/sopr_by_wallet_size",
      "method": "GET",
      "metric": "sopr_by_wallet_size",
      "summary": "SOPR by Wallet Size",
      "description": "The Spent Output Profit Ratio (SOPR) is a critical metric that calculates the profit or loss made by holders of a digital asset when they sell their assets, based on the difference between the sale price and the acquisition price. The SOPR by Wallet Size metric further refines this by categorizing digital assets according to the size of their wallets. This provides a granular view of the profit or loss realized by different investor classes, from whales to retail investors. This metric is particularly useful for understanding the distribution of profit-making or loss-making sales across different wallet sizes. For example, it can help answer questions like, &#x27;Are larger wallets (whales) selling their assets at a profit more frequently compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SoprByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_sum_by_age",
      "method": "GET",
      "metric": "spent_volume_sum_by_age",
      "summary": "Spent Volume by Age",
      "description": "Spent Volume is a metric that calculates the total volume of digital assets sold, providing an insight into the overall market activity. The Spent Volume by Age metric further categorizes this data into different age cohorts, offering a detailed view of the volume of assets sold by holders of supply portions of varying ages. This metric is particularly useful for understanding sales distribution across different age cohorts, from hot supply (newly acquired coins) to cold supply (older, dormant coins). This can help identify periods of increased selling activity among different age cohorts. For example, it can help answer questions like, &#x27;Are older coins being sold more frequently than newer ones?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeSumByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_sum_by_lth_sth",
      "method": "GET",
      "metric": "spent_volume_sum_by_lth_sth",
      "summary": "Spent Volume by LTH/STH",
      "description": "Spent Volume is a key metric that calculates the total volume of digital assets that have been sold, providing a comprehensive view of overall market activity. The Spent Volume by LTH/STH (Long-Term Holders/Short-Term Holders) version of this metric further refines this data by categorizing digital assets into two cohorts based on the duration of holding. LTH/STH supply is defined with respect to the entity&#x27;s average purchasing date with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days. This provides a more nuanced view of the volume of assets sold by both long-term and short-term holders. This metric is particularly useful for understanding sales distribution across these two market participant groups. For example, it can help answer questions like, &#x27;Are long-term holders selling their assets more frequently compared to short-term holders?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeSumByLthSth?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_sum_by_pnl",
      "method": "GET",
      "metric": "spent_volume_sum_by_pnl",
      "summary": "Spent Volume by PnL",
      "description": "Spent Volume is a key metric that calculates the total volume of digital assets that have been sold, providing a comprehensive view of overall market activity. The Spent Volume by Profit and Loss metric further categorizes this data based on realized profit and loss levels, using Fibonacci retracement levels to provide a nuanced view of the market&#x27;s sales distribution. This metric is particularly useful for understanding the extent and distribution of both profit-making and loss-making sales across the market, offering insights into how much of the spent volume is concentrated at different profit or loss levels. For example, it can help answer questions like, &#x27;Are most digital assets being sold at specific profit or loss levels, indicating potential zones of market activity?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeSumByPnl?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_sum_by_wallet_size",
      "method": "GET",
      "metric": "spent_volume_sum_by_wallet_size",
      "summary": "Spent Volume by Wallet Size",
      "description": "Spent Volume is a key metric that calculates the total volume of digital assets that have been sold, providing a comprehensive view of overall market activity. The Spent Volume by Wallet Size metric further refines this data by categorizing digital assets according to the size of their wallets. This offers a detailed view of the volume of assets sold by different investor classes, from whales to retail investors. This metric is particularly useful for understanding the distribution of sales across different wallet sizes and identifying potential market trends. For example, it can help answer questions like, &#x27;Are larger wallets (whales) selling their assets more frequently compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeSumByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_loss_sum_by_age",
      "method": "GET",
      "metric": "spent_volume_loss_sum_by_age",
      "summary": "Spent Volume in Loss by Age",
      "description": "Spent Volume in Loss is a metric that calculates the total volume of digital assets sold at a loss, meaning the sale price was lower than the acquisition price. The Spent Volume in Loss by Age metric further categorizes these volumes into different age cohorts, providing a detailed view of the volume of assets sold at a loss by holders of supply portions of varying ages. This metric is particularly useful for understanding the distribution of loss-making sales across different age cohorts, from hot supply (newly bought coins) to cold supply (older, dormant coins). For example, it can help answer questions like, &#x27;Is the volume of assets sold at a loss greater for older or newer coins?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeLossSumByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_loss_sum_by_lth_sth",
      "method": "GET",
      "metric": "spent_volume_loss_sum_by_lth_sth",
      "summary": "Spent Volume in Loss by LTH/STH",
      "description": "The Spent Volume in Loss is a metric that quantifies the total volume of digital assets sold at a loss, meaning the sale price was lower than the acquisition price. The Spent Volume in Loss by LTH/STH (Long-Term Holders/Short-Term Holders) metric further enhances this by categorizing digital assets into two cohorts based on the duration of holding. LTH/STH supply is defined with respect to the entity&#x27;s average purchasing date with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days. This provides a more nuanced view of the volume of assets sold at a loss by both long-term and short-term holders. This metric is particularly useful for understanding the distribution of loss-making sales across these two market participants. For example, it can help answer questions like, &#x27;Are long-term holders selling their assets at a loss more frequently compared to short-term holders?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeLossSumByLthSth?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_loss_sum_by_wallet_size",
      "method": "GET",
      "metric": "spent_volume_loss_sum_by_wallet_size",
      "summary": "Spent Volume in Loss by Wallet Size",
      "description": "The Spent Volume in Loss is a metric that calculates the total volume of digital assets sold at a loss, meaning the sale price was lower than the acquisition price. The Spent Volume in Loss by Wallet Size metric further refines this by categorizing digital assets according to the size of their wallets. This provides a granular view of the volume of assets sold at a loss by different investor classes, from whales to retail investors. This metric is particularly useful for understanding the distribution of loss-making sales across different wallet sizes and identifying potential risk concentrations. For example, it can help answer questions like, &#x27;Are larger wallets (whales) selling their assets at a loss more frequently compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeLossSumByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_profit_sum_by_age",
      "method": "GET",
      "metric": "spent_volume_profit_sum_by_age",
      "summary": "Spent Volume in Profit by Age",
      "description": "Spent Volume in Profit is a metric that measures the total volume of digital assets sold at a profit, meaning the sale price was higher than the acquisition price. The Spent Volume in Profit by Age metric further categorizes these volumes into different age cohorts, providing a detailed view of the volume of assets sold at a profit by holders of supply portions of varying ages. This metric is particularly useful for understanding the distribution of profit-making sales across different age cohorts, from hot supply (newly bought coins) to cold supply (older, dormant coins). For example, it can help answer questions like, &#x27;Are older coins being sold at a profit more frequently compared to newer coins?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeProfitSumByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_profit_sum_by_lth_sth",
      "method": "GET",
      "metric": "spent_volume_profit_sum_by_lth_sth",
      "summary": "Spent Volume in Profit by LTH/STH",
      "description": "Spent Volume in Profit is a metric that quantifies the total volume of digital assets sold at a profit, meaning the sale price was higher than the acquisition price. The Spent Volume in Profit by LTH/STH (Long-Term Holders/Short-Term Holders) version of this metric further refines this data by categorizing digital assets into two cohorts based on the duration of holding. LTH/STH supply is defined with respect to the entity&#x27;s average purchasing date with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days. This provides a more nuanced view of the volume of assets sold at a profit by both long-term and short-term holders. This metric is particularly useful for understanding the distribution of profit-making sales across these two market participant groups. For example, it can help answer questions like, &#x27;Are long-term holders realizing profits more frequently compared to short-term holders?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeProfitSumByLthSth?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/spent_volume_profit_sum_by_wallet_size",
      "method": "GET",
      "metric": "spent_volume_profit_sum_by_wallet_size",
      "summary": "Spent Volume in Profit by Wallet Size",
      "description": "Spent Volume in Profit is a metric that measures the total volume of digital assets sold at a profit, meaning the sale price was higher than the acquisition price. The Spent Volume in Profit by Wallet Size metric further refines this by categorizing digital assets according to the size of their wallets, offering a detailed view of the volume of assets sold at a profit by different investor classes, from whales to retail investors. This metric is particularly useful for understanding the distribution of profit-making sales across different wallet sizes and identifying potential profit concentrations. For example, it can help answer questions like, &#x27;Are larger wallets (whales) selling their assets at a profit more frequently compared to smaller wallets (retail investors)?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SpentVolumeProfitSumByWalletSize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/supply_by_age",
      "method": "GET",
      "metric": "supply_by_age",
      "summary": "Supply by Age",
      "description": "The total supply of a digital asset is a fundamental metric representing the total quantity of that asset in circulation. The Supply by Age metric further categorizes this total supply into different age cohorts, offering a detailed view of the distribution of the total supply across varying holding periods for these assets, from hot supply (recently moved coins) to cold supply (older, dormant coins). This metric is particularly useful for understanding the age distribution of the total supply, which can provide insights into the maturity and stability of a digital asset&#x27;s market. For example, it can help answer questions like, &#x27;Is the majority of the total supply held in older coins, indicating a mature market, or in newer coins, indicating a growing market?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SupplyByAge?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/supply_by_investor_behavior",
      "method": "GET",
      "metric": "supply_by_investor_behavior",
      "summary": "Supply by Investor Behavior",
      "description": "### Understanding Who’s Behind the Market Moves\n\nThe goal is to classify token supply based on the **behavior of market participants**. The idea is simple but powerful: instead of just looking at supply levels, we look at *who* is buying and *who* is selling. Is it mostly **first-time buyers** entering the market? Are we seeing **conviction buyers** step in while the price drops? Or is the current activity driven by **momentum buyers**, **profit takers**, or **loss sellers**?\n\n#### Cohort Definitions\n\nTo make this work, we created a set of behavior-based cohorts:\n\n- **Conviction Buyers**: Investors who buy despite falling prices. They believe in the long-term and lower their cost basis.\n- **Momentum Buyers**: Investors who buy during uptrends, typically increasing their average cost basis.\n- **First Buy**: First-time buyers entering the market — a clean slate.\n- **Loss Sellers**: Investors exiting at a loss.\n- **Profit Takers**: Investors locking in gains.\n\nThe metric tracks the cumulative token supply held by each cohort over time. To focus solely on investor behavior, we exclude exchanges and smart contracts.\n\nFor Bitcoin, this analysis is conducted at the entity level rather than the address level, grouping addresses that belong to the same user.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SupplyByInvestorBehavior?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/supply_by_pnl",
      "method": "GET",
      "metric": "supply_by_pnl",
      "summary": "Supply by PnL",
      "description": "The total supply of a digital asset is a fundamental metric representing the total quantity of that asset in circulation. The Supply by Profit and Loss metric further categorizes this total supply based on unrealized profit and loss levels, using Fibonacci retracement levels to provide a detailed view of the distribution of the total supply across different profit and loss thresholds. This metric is particularly useful for understanding how much of the total supply is held at a profit versus a loss, offering insights into the market&#x27;s overall sentiment and potential support or resistance levels. For example, it can help answer questions like, &#x27;Is the majority of the total supply currently held at a profit or a loss relative to its acquisition cost?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SupplyByPnl?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/breakdowns/supply_by_wallet_size",
      "method": "GET",
      "metric": "supply_by_wallet_size",
      "summary": "Supply by Wallet Size",
      "description": "The total supply of a digital asset is a fundamental metric representing the total quantity of that asset in circulation. The Supply by Wallet Size metric further refines this by categorizing the total supply according to the size of their wallets, providing a granular view of the distribution of the total supply across different investor classes, from whales to retail investors. This metric is particularly useful for understanding the distribution of the total supply across different wallet sizes, which can provide insights into the diversity and concentration of a digital asset&#x27;s market. For example, it can help answer questions like, &#x27;Is the majority of the total supply held in larger wallets (whales), indicating a concentrated market, or is it more evenly distributed across smaller wallets (retail investors), indicating a diverse market?&#x27;\n\nNote: The breakdown metrics utilize an address-based approach, analyzing transactions and holdings based on individual wallet addresses to facilitate comparability across digital assets and to ensure consistent analysis across various blockchain architectures. This contrasts with the alternative UTXO-based approach for chains like Bitcoin, where unspent transaction outputs are analyzed to categorize asset properties. As such, metrics for UTXO-based assets may show slight deviations if compared across these different computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/breakdowns.SupplyByWalletSize?a=BTC)\n"
    }
  ],
  "bridges": [
    {
      "path": "/v1/metrics/bridges/deposits_by_chain",
      "method": "GET",
      "metric": "deposits_by_chain",
      "summary": "Bridges Deposits By Chain",
      "description": "This metric measures the USD value which is deposited into bridge smart contracts on Ethereum, and is therefore flowing out of the Ethereum blockchain, and into target blockchains. Deposit Volume is computed daily by multiplying the number of tokens deposited into bridges by the latest daily price of each token.\n\nBridges are protocols that enable digital assets to be transferred from one blockchain to another. When an asset is transferred out of Ethereum, it gets deposited and locked into a bridge smart contract. When the asset is transferred back to Ethereum, it is withdrawn and released from the smart contract.\n\nThis metric only includes bridge contracts on the Ethereum side. The bridges included in this metric cover bridge deposits into both L1 and L2 blockchains, providing information on the value transferred to both L1 competitors, and L2 scaling solutions. Each bridge included in this metric represents a single blockchain, except the ones labeled as  multichain. That label is used to represent bridges that allow transferring assets across multiple different chains. \n\n[View in Studio](https://studio.glassnode.com/charts/bridges.DepositsByChain?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/bridges/net_volume_by_chain",
      "method": "GET",
      "metric": "net_volume_by_chain",
      "summary": "Bridges Net Flow By Chain",
      "description": "This metric shows the net USD value flowing into, or out of Ethereum bridge smart contracts, calculated as bridge deposits minus bridge withdrawals. It can also be considered to represent the net USD value flowing in, or out of the Ethereum blockchain via bridges. A positive value means that there is more value being deposited into bridges, which translates into a net value outflow from Ethereum. On the other hand, a negative value means that there is more USD value being withdrawn from bridges, which translates into more USD value flowing back into Ethereum.\n\nBridges are protocols that enable digital assets to be transferred from one blockchain to another. When an asset is transferred out of Ethereum, it gets deposited and locked into a bridge smart contract. When the asset is transferred back to Ethereum, it is withdrawn and released from the smart contract.\n\nThis metric only includes bridge contracts on the Ethereum side. The bridges included in this metric cover bridge deposits into both L1 and L2 blockchains, providing information on the value transferred to both L1 competitors, and L2 scaling solutions. Each bridge included in this metric represents a single blockchain, except the ones labeled as  multichain. That label is used to represent bridges that allow transferring assets across multiple different chains.\n\n[View in Studio](https://studio.glassnode.com/charts/bridges.NetVolumeByChain?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/bridges/total_value_locked_by_chain",
      "method": "GET",
      "metric": "total_value_locked_by_chain",
      "summary": "Bridges TVL",
      "description": "The Total Value Locked (TVL) in bridges measures the total USD value that is locked within the Ethereum side of bridge smart contracts. Locked tokens are not available on the Ethereum chain, but are available on the target blockchains. An increasing TVL means that value is flowing out of Ethereum and into other target blockchains, whilst a decreasing TVL means the value is flowing back into Ethereum. Bridge TVL is computed daily, by multiplying the number of tokens locked within the bridge smart contracts, by the latest daily price for each token.\n\nBridges are protocols that enable digital assets to be transferred from one blockchain to another. When an asset is transferred out of Ethereum, it gets deposited and locked into a bridge smart contract. When the asset is transferred back to Ethereum, it is withdrawn and released from the smart contract.\n\nThis metric only includes bridge contracts on the Ethereum side. The bridges included in this metric cover bridge deposits into both L1 and L2 blockchains, providing information on the value transferred to both L1 competitors, and L2 scaling solutions. Each bridge included in this metric represents a single blockchain, except the ones labeled as  multichain. That label is used to represent bridges that allow transferring assets across multiple different chains.\n\n[View in Studio](https://studio.glassnode.com/charts/bridges.TotalValueLockedByChain?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/bridges/total_value_locked_by_chain_relative",
      "method": "GET",
      "metric": "total_value_locked_by_chain_relative",
      "summary": "Bridges TVL Relative",
      "description": "This metric presents the Relative Total Value Locked (TVL dominance) of each target blockchain bridge compared to the total TVL across all bridges. A rising relative TVL indicates that the target blockchain is growing in USD denominated TVL dominance compared to the others (and vice versa). Bridge TVL is computed daily, by multiplying the number of tokens locked within the bridge smart contract, by the latest daily price of each token. Relative TVL is then computed by dividing the TVL of each bridge by the total TVL across all bridges.\n\nBridges are protocols that enable digital assets to be transferred from one blockchain to another. When an asset is transferred out of Ethereum, it gets deposited and locked into a bridge smart contract. When the asset is transferred back to Ethereum, it is withdrawn and released from the smart contract.\n\nThis metric only includes bridge contracts on the Ethereum side. The bridges included in this metric cover bridge deposits into both L1 and L2 blockchains, providing information on the value transferred to both L1 competitors, and L2 scaling solutions. Each bridge included in this metric represents a single blockchain, except the ones labeled as  multichain. That label is used to represent bridges that allow transferring assets across multiple different chains.\n\n[View in Studio](https://studio.glassnode.com/charts/bridges.TotalValueLockedByChainRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/bridges/withdrawals_by_chain",
      "method": "GET",
      "metric": "withdrawals_by_chain",
      "summary": "Bridges Withdrawals By Chain",
      "description": "This metric measures the USD value which is withdrawn from bridge smart contracts on Ethereum, and is therefore flowing into the Ethereum blockchain, and out of target blockchains. Withdrawal Volume is computed daily by multiplying the number of tokens withdrawn from bridges by the latest daily price of each token.\n\nBridges are protocols that enable digital assets to be transferred from one blockchain to another. When an asset is transferred out of Ethereum, it gets deposited and locked into a bridge smart contract. When the asset is transferred back to Ethereum, it is withdrawn and released from the smart contract.\n\nThis metric only includes bridge contracts on the Ethereum side. The bridges included in this metric cover bridge deposits into both L1 and L2 blockchains, providing information on the value transferred to both L1 competitors, and L2 scaling solutions. Each bridge included in this metric represents a single blockchain, except the ones labeled as  multichain. That label is used to represent bridges that allow transferring assets across multiple different chains.\n\n[View in Studio](https://studio.glassnode.com/charts/bridges.WithdrawalsByChain?a=ETH)\n"
    }
  ],
  "defi": [
    {
      "path": "/v1/metrics/defi/total_value_locked",
      "method": "GET",
      "metric": "total_value_locked",
      "summary": "Total Value Locked in DeFi (TVL)",
      "description": "The total value locked in all of DeFi. Source: DeFi Lama.\n\n[View in Studio](https://studio.glassnode.com/charts/defi.TotalValueLocked?a=ETH)\n"
    }
  ],
  "derivatives": [
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_cash_margin_sum",
      "method": "GET",
      "metric": "futures_open_interest_cash_margin_sum",
      "summary": "Cash-Margined Futures Open Interest",
      "description": "The total amount of futures contracts open interest that is margined in USD or USD-pegged stablecoins. Stablecoins include USDT, USDC and BUSD.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestCashMarginSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_crypto_margin_sum",
      "method": "GET",
      "metric": "futures_open_interest_crypto_margin_sum",
      "summary": "Crypto-Margined Futures Open Interest",
      "description": "The total amount of futures contracts open interest that is margined in the native coin (e.g. BTC) and not in USD or stablecoin. Note that for Ethereum contracts can be margined both in ETH or BTC.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestCryptoMarginSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_annualized_basis_3m",
      "method": "GET",
      "metric": "futures_annualized_basis_3m",
      "summary": "Futures Annualized Rolling Basis (3M)",
      "description": "The 3 Month Futures Annualized Rolling Basis measures the annualized yield (percent return) that can be had by buying a spot asset and simultaneously selling a futures contract on that asset that expires in 3 months. Due to various supply, demand, and liquidity factors, crypto futures contracts will often trade at a price above that of the spot price. When this happens, market participants can do what is referred to commonly as a ‘basis trade’, allowing them to profit the difference in price between spot and a futures contract without taking on any directional exposure.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesAnnualizedBasis3M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_buy_sum",
      "method": "GET",
      "metric": "futures_volume_buy_sum",
      "summary": "Futures Buy Volume",
      "description": "The Futures Buying Volume Intraday metric measures the total trading volume (in USD value) where buyers were the aggressors, focusing on the native asset against USD-related currencies (both fiat and stablecoins) within a specific intraday time frame. This metric encapsulates both perpetual and expiry futures contracts, providing a comprehensive view of short-term market sentiment and immediate buying pressure.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeBuySum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_buy_daily_sum",
      "method": "GET",
      "metric": "futures_volume_buy_daily_sum",
      "summary": "Futures Buy Volume 24h",
      "description": "The Futures Buying Volume metric measures the total trading volume—over a 24-hour rolling window—of all futures contracts, including both expiry and perpetual contracts, in USD value where buyers were the aggressors. It focuses on the native asset traded against USD-related currencies (both fiat and stablecoins). This metric is useful for understanding market sentiment and identifying buying pressure within the most recent 24 hours, determined by your chosen data resolution (e.g., hourly, 10-minute intervals).\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeBuyDailySum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_buy_perpetual_sum",
      "method": "GET",
      "metric": "futures_volume_buy_perpetual_sum",
      "summary": "Futures Buy Volume Perpetual",
      "description": "Perpetual futures contracts are a type of derivative that allows traders to speculate on the price of digital assets without an expiration date. The Futures Buying Volume Intraday Perpetual metric measures the total trading volume (in USD value) where buyers were the aggressors, focusing on the native asset against USD-related currencies (both fiat and stablecoins) within a specific intraday time frame. This metric is useful for understanding short-term market sentiment and identifying immediate buying pressure. For example, you might ask, \"How much buying activity has there been for Ethereum perpetual futures in the last hour?\"\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeBuyPerpetualSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_buy_daily_perpetual_sum",
      "method": "GET",
      "metric": "futures_volume_buy_daily_perpetual_sum",
      "summary": "Futures Buy Volume Perpetual 24h",
      "description": "Perpetual futures contracts are a type of derivative that allows traders to speculate on the price of digital assets without an expiration date. The Futures Buying Volume Perpetual metric measures the total trading volume (in USD value) where buyers were the aggressors, focusing on the native asset against USD-related currencies (both fiat and stablecoins). This metric is useful for understanding market sentiment and identifying buying pressure within a specific time frame, determined by your chosen data resolution (e.g., hourly, 10-minute intervals). For example, you might ask, \"How much buying activity has there been for Bitcoin perpetual futures in the last 24 hours?\"\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeBuyDailyPerpetualSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_estimated_leverage_ratio",
      "method": "GET",
      "metric": "futures_estimated_leverage_ratio",
      "summary": "Futures Estimated Leverage Ratio",
      "description": "The Estimated Leverage Ratio is defined as the ratio of the open interest in futures contracts and the balance of the corresponding exchange.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesEstimatedLeverageRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_liquidated_volume_long_mean",
      "method": "GET",
      "metric": "futures_liquidated_volume_long_mean",
      "summary": "Futures Long Liquidations (Mean)",
      "description": "The mean liquidated volume from long positions in futures contracts.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesLiquidatedVolumeLongMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_liquidated_volume_long_sum",
      "method": "GET",
      "metric": "futures_liquidated_volume_long_sum",
      "summary": "Futures Long Liquidations (Total)",
      "description": "The sum liquidated volume from long positions in futures contracts.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesLiquidatedVolumeLongSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_liquidated_volume_long_relative",
      "method": "GET",
      "metric": "futures_liquidated_volume_long_relative",
      "summary": "Futures Long Liquidations Dominance",
      "description": "The percentage of long liquidations, i.e. long liquidations / (long liquidations + short liquidations). 50 indicate more longs liquidated, values below 50% more short liquidated.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesLiquidatedVolumeLongRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_sum",
      "method": "GET",
      "metric": "futures_open_interest_sum",
      "summary": "Futures Open Interest",
      "description": "The total amount of funds allocated in open futures contracts. Use dropdown above chart to select individual exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_latest",
      "method": "GET",
      "metric": "futures_open_interest_latest",
      "summary": "Futures Open Interest (Current)",
      "description": "The current amount of allocated funds in futures contracts per exchange. Values are updated every 10 min.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestLatest?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_sum_all",
      "method": "GET",
      "metric": "futures_open_interest_sum_all",
      "summary": "Futures Open Interest (Stacked)",
      "description": "The total amount of funds allocated in open futures contracts.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestSumAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_cash_margin_perpetual_sum",
      "method": "GET",
      "metric": "futures_open_interest_cash_margin_perpetual_sum",
      "summary": "Futures Open Interest Cash Margin Perpetual",
      "description": "Perpetual futures contracts are a type of derivative that allows traders to speculate on the price of digital assets without an expiration date. The Futures Open Interest Cash Margin Perpetual metric measures the total amount of funds (in USD value) allocated in open perpetual futures contracts that are collateralized with cash. This metric is useful for assessing the level of market participation and the amount of capital at risk in cash-margined perpetual futures. For example, you might ask, \"What is the total cash-margined open interest for Ethereum perpetual futures across all exchanges?\"\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestCashMarginPerpetualSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_crypto_margin_perpetual_sum",
      "method": "GET",
      "metric": "futures_open_interest_crypto_margin_perpetual_sum",
      "summary": "Futures Open Interest Crypto Margin Perpetual",
      "description": "Perpetual futures contracts are a type of derivative that allows traders to speculate on the price of digital assets without an expiration date. The Futures Open Interest Crypto Margin Perpetual metric measures the total amount of funds (in USD value) allocated in open perpetual futures contracts that are collateralized with digital assets instead of cash. This metric is useful for assessing the level of market participation and the amount of capital at risk in crypto-margined perpetual futures. For example, you might ask, \"What is the total crypto-margined open interest for Bitcoin perpetual futures across all exchanges?\"\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestCryptoMarginPerpetualSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_crypto_margin_relative_perpetual",
      "method": "GET",
      "metric": "futures_open_interest_crypto_margin_relative_perpetual",
      "summary": "Futures Open Interest Crypto Margin Relative Perpetual",
      "description": "Perpetual futures contracts are a type of derivative that allows traders to speculate on the price of digital assets without an expiration date. The Futures Open Interest Crypto Margin Relative Perpetual metric measures the proportion of open perpetual futures contracts that are collateralized with digital assets relative to those collateralized with cash. This metric is useful for understanding the preference of market participants for using digital assets versus cash as collateral, which can provide insights into market confidence and risk tolerance. For example, you might ask, \"What is the relative proportion of crypto-margined versus cash-margined open interest for Ethereum perpetual futures?\"\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestCryptoMarginRelativePerpetual?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_perpetual_sum",
      "method": "GET",
      "metric": "futures_open_interest_perpetual_sum",
      "summary": "Futures Open Interest Perpetual",
      "description": "The total amount of funds allocated in open perpetual (non-expiring) futures contracts.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestPerpetualSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_perpetual_sum_all",
      "method": "GET",
      "metric": "futures_open_interest_perpetual_sum_all",
      "summary": "Futures Open Interest Perpetual (Stacked)",
      "description": "The total amount of funds allocated in open perpetual (non-expiring) futures contracts.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestPerpetualSumAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_funding_rate_perpetual",
      "method": "GET",
      "metric": "futures_funding_rate_perpetual",
      "summary": "Futures Perpetual Funding Rate",
      "description": "The average funding rate (in %) set by exchanges for perpetual futures contracts. When the rate is positive, long positions periodically pay short positions. Conversely, when the rate is negative, short positions periodically pay long positions. For a list of all supported exchanges and earliest available datapoints, please refer to our [futures data documentation](https://docs.glassnode.com/general-info/futures-data).\n\n**Note:** The mean Funding Rate across exchanges is an average of each exchange&#x27;s Funding Rate weighted by the Open Interest of the corresponding exchange.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesFundingRatePerpetual?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_funding_rate_perpetual_all",
      "method": "GET",
      "metric": "futures_funding_rate_perpetual_all",
      "summary": "Futures Perpetual Funding Rate (All)",
      "description": "The average funding rate (in %) set by exchanges for perpetual futures contracts. When the rate is positive, long positions periodically pay short positions. Conversely, when the rate is negative, short positions periodically pay long positions. For a list of all supported exchanges and earliest available datapoints, please refer to our [futures data documentation](https://docs.glassnode.com/general-info/futures-data).\n\n**Note:** The mean Funding Rate across exchanges is an average of each exchange&#x27;s Funding Rate weighted by the Open Interest of the corresponding exchange.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesFundingRatePerpetualAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_sell_sum",
      "method": "GET",
      "metric": "futures_volume_sell_sum",
      "summary": "Futures Sell Volume",
      "description": "The Futures Selling Volume Intraday metric measures the total trading volume (in USD value) where sellers were the aggressors, focusing on the native asset traded against USD-related currencies (both fiat and stablecoins) within a specific intraday time frame. This metric aggregates both expiry and perpetual futures contracts, providing a comprehensive view of immediate selling pressure in the futures market. This metric is useful for understanding short-term market sentiment and identifying immediate selling pressure. By analyzing intraday selling activity, traders can gain insights into potential short-term price movements and make timely decisions based on current market dynamics.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeSellSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_sell_daily_sum",
      "method": "GET",
      "metric": "futures_volume_sell_daily_sum",
      "summary": "Futures Sell Volume 24h",
      "description": "The Futures Selling Volume metric measures the total trading volume (in USD value) where sellers were the aggressors, focusing on the native asset against USD-related currencies (both fiat and stablecoins) over a 24-hour rolling window. This metric aggregates both expiry and perpetual futures contracts, providing a comprehensive view of selling pressure in the futures market. This metric is useful for understanding market sentiment and identifying selling pressure within the most recent 24 hours, determined by your chosen data resolution (e.g., hourly, 10-minute intervals).\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeSellDailySum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_sell_perpetual_sum",
      "method": "GET",
      "metric": "futures_volume_sell_perpetual_sum",
      "summary": "Futures Sell Volume Perpetual",
      "description": "Perpetual futures contracts are a type of derivative that allows traders to speculate on the price of digital assets without an expiration date. The Futures Selling Volume Intraday Perpetual metric measures the total trading volume (in USD value) where sellers were the aggressors, focusing on the native asset against USD-related currencies (both fiat and stablecoins) within a specific intraday time frame. This metric is useful for understanding short-term market sentiment and identifying immediate selling pressure. For example, you might ask, \"How much selling activity has there been for Ethereum perpetual futures in the last hour?\"\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeSellPerpetualSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_sell_daily_perpetual_sum",
      "method": "GET",
      "metric": "futures_volume_sell_daily_perpetual_sum",
      "summary": "Futures Sell Volume Perpetual 24h",
      "description": "Perpetual futures contracts are a type of derivative that allows traders to speculate on the price of digital assets without an expiration date. The Futures Selling Volume Perpetual metric measures the total trading volume (in USD value) where sellers were the aggressors, focusing on the native asset against USD-related currencies (both fiat and stablecoins). This metric is useful for understanding market sentiment and identifying selling pressure within a specific time frame, determined by your chosen data resolution (e.g., hourly, 10-minute intervals). For example, you might ask, \"How much selling activity has there been for Bitcoin perpetual futures in the last 24 hours?\"\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeSellDailyPerpetualSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_liquidated_volume_short_mean",
      "method": "GET",
      "metric": "futures_liquidated_volume_short_mean",
      "summary": "Futures Short Liquidations (Mean)",
      "description": "The mean liquidated volume from short positions in futures contracts.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesLiquidatedVolumeShortMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_liquidated_volume_short_sum",
      "method": "GET",
      "metric": "futures_liquidated_volume_short_sum",
      "summary": "Futures Short Liquidations (Total)",
      "description": "The sum liquidated volume from short positions in futures contracts.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesLiquidatedVolumeShortSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_term_structure",
      "method": "GET",
      "metric": "futures_term_structure",
      "summary": "Futures Term Structure",
      "description": "The Futures Term Structure is a graphical representation of the pricing for futures contracts expiring at increasingly distant dates into the future. The most common state of the graph, an upwards slope, indicates a premium must be paid to purchase exposure, or delivery, of an asset in the future. A downwards slope conversely indicates a discounted rate on delivery of an asset in the future. Trends and dislocations within the graph can paint a picture of supply, demand, and liquidity for futures contracts expiring on different dates.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesTermStructure?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_term_structure_by_exchange",
      "method": "GET",
      "metric": "futures_term_structure_by_exchange",
      "summary": "Futures Term Structure by Exchange",
      "description": "The Futures Term Structure is a graphical representation of the pricing for futures contracts expiring at increasingly distant dates into the future. The most common state of the graph, an upwards slope, indicates a premium must be paid to purchase exposure, or delivery, of an asset in the future. A downwards slope conversely indicates a discounted rate on delivery of an asset in the future. Trends and dislocations within the graph can paint a picture of supply, demand, and liquidity for futures contracts expiring on different dates. Past states of the term structure (1 day, 2 days, 1 week, and 2 weeks ago) can be displayed alongside the latest state, showing recent impulses in the market and the evolution of the structure.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesTermStructureByExchange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_sum",
      "method": "GET",
      "metric": "futures_volume_sum",
      "summary": "Futures Volume",
      "description": "The Futures Volume Intraday metric measures the total trading volume (in USD value) of all futures contracts within a specific intraday time frame, focusing on the native asset against USD-related currencies (both fiat and stablecoins). This metric is useful for assessing short-term market activity and liquidity in the futures market. For example, you might ask, \"What is the total trading volume for Ethereum futures in the last hour?\". Note: Buy and sell volumes do not always sum up to the total volume, as in rare cases, certain transactions cannot be definitively classified as either buys or sells.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_daily_sum",
      "method": "GET",
      "metric": "futures_volume_daily_sum",
      "summary": "Futures Volume 24h",
      "description": "The total volume traded in futures contracts in the last 24 hours. Use dropdown above chart to select individual exchanges. Note: Buy and sell volumes do not always sum up to the total volume, as in rare cases, certain transactions cannot be definitively classified as either buys or sells.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeDailySum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_daily_latest",
      "method": "GET",
      "metric": "futures_volume_daily_latest",
      "summary": "Futures Volume 24h (Latest)",
      "description": "The total volume traded in futures contracts per exchange over the last 24 hours. Values are updated every 10 min.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeDailyLatest?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_daily_sum_all",
      "method": "GET",
      "metric": "futures_volume_daily_sum_all",
      "summary": "Futures Volume 24h (Stacked)",
      "description": "The total volume traded in futures contracts in the last 24 hours. Use dropdown above chart to select individual exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeDailySumAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_vd",
      "method": "GET",
      "metric": "futures_vd",
      "summary": "Futures Volume Delta",
      "description": "Futures Volume Delta (VD) measures the net difference between buying and selling trade volumes, specifically highlighting the difference in volume where the buyer or seller was the aggressor. It includes trades where USD or USD-related currencies serve as the quote currency, encompassing both fiat and stablecoins. The VD is computed within specific intraday time frames, which are determined based on your selected data resolution (e.g., hourly, 10-minute intervals). \\\n\\\nYou can view this metric for individual exchanges or as an aggregate total across exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_vd_perpetual",
      "method": "GET",
      "metric": "futures_vd_perpetual",
      "summary": "Futures Volume Delta Perpetual",
      "description": "Futures Volume Delta (VD) Perpetual measures the net difference between buying and selling trade volumes, specifically highlighting the difference in volume where the buyer or seller was the aggressor. It includes trades where USD or USD-related currencies serve as the quote currency, encompassing both fiat and stablecoins. The VD is computed within specific intraday time frames, which are determined based on your selected data resolution (e.g., hourly, 10-minute intervals). \\\n\\\nYou can view this metric for individual exchanges or as an aggregate total across exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVdPerpetual?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_perpetual_sum",
      "method": "GET",
      "metric": "futures_volume_perpetual_sum",
      "summary": "Futures Volume Perpetual",
      "description": "Perpetual futures contracts are a type of derivative that allows traders to speculate on the price of digital assets without an expiration date. The Futures Volume Intraday Perpetual metric measures the total trading volume (in USD value) of perpetual futures contracts within a specific intraday time frame, focusing on the native asset against USD-related currencies (both fiat and stablecoins). This metric is useful for assessing short-term market activity and liquidity in the perpetual futures market. For example, you might ask, \"What is the total trading volume for Ethereum perpetual futures in the last hour?\". Note: Buy and sell volumes do not always sum up to the total volume, as in rare cases, certain transactions cannot be definitively classified as either buys or sells.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumePerpetualSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_daily_perpetual_sum",
      "method": "GET",
      "metric": "futures_volume_daily_perpetual_sum",
      "summary": "Futures Volume Perpetual 24h",
      "description": "The total volume traded in perpetual (non-expiring) futures contracts in the last 24 hours. Note: Buy and sell volumes do not always sum up to the total volume, as in rare cases, certain transactions cannot be definitively classified as either buys or sells.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeDailyPerpetualSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_volume_daily_perpetual_sum_all",
      "method": "GET",
      "metric": "futures_volume_daily_perpetual_sum_all",
      "summary": "Futures Volume Perpetual 24h (Stacked)",
      "description": "The total volume traded in perpetual (non-expiring) futures contracts in the last 24 hours.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesVolumeDailyPerpetualSumAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/dvol_ohlc",
      "method": "GET",
      "metric": "dvol_ohlc",
      "summary": "Implied Volatility Index (DVOL)",
      "description": "The DVOL Index, developed by Deribit and inspired by the VIX methodology in traditional finance, tracks the 30-day implied volatility of options. It reflects market expectations and pricing of crypto option risk. [More details on the methodology here.](https://insights.deribit.com/exchange-updates/dvol-deribit-implied-volatility-index)\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.DvolOhlc?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_25delta_skew_1_month",
      "method": "GET",
      "metric": "options_25delta_skew_1_month",
      "summary": "Options 25 Delta Skew (1 Month)",
      "description": "Skew is the relative richness of put vs call options, expressed in terms of Implied Volatility (IV). For options with a specific expiry, 25 Delta Skew refers to puts with a delta of -25 to demonstrate this difference in the market’s perception of implied volatility. 25 Delta Skew is calculated as the difference between a 25-delta put’s implied volatility and a 25-delta call’s implied volatility, normalized by the ATM Implied Volatility. This metrics focuses on option contracts expiring in 1 month.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.Options25DeltaSkew1Month?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_25delta_skew_1_week",
      "method": "GET",
      "metric": "options_25delta_skew_1_week",
      "summary": "Options 25 Delta Skew (1 Week)",
      "description": "Skew is the relative richness of put vs call options, expressed in terms of Implied Volatility (IV). For options with a specific expiry, 25 Delta Skew refers to puts with a delta of -25 to demonstrate this difference in the market’s perception of implied volatility. 25 Delta Skew is calculated as the difference between a 25-delta put’s implied volatility and a 25-delta call’s implied volatility, normalized by the ATM Implied Volatility. This metrics focuses on option contracts expiring in 1 week.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.Options25DeltaSkew1Week?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_25delta_skew_3_months",
      "method": "GET",
      "metric": "options_25delta_skew_3_months",
      "summary": "Options 25 Delta Skew (3 Months)",
      "description": "Skew is the relative richness of put vs call options, expressed in terms of Implied Volatility (IV). For options with a specific expiry, 25 Delta Skew refers to puts with a delta of -25 to demonstrate this difference in the market’s perception of implied volatility. 25 Delta Skew is calculated as the difference between a 25-delta put’s implied volatility and a 25-delta call’s implied volatility, normalized by the ATM Implied Volatility. This metrics focuses on option contracts expiring in 3 months.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.Options25DeltaSkew3Months?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_25delta_skew_6_months",
      "method": "GET",
      "metric": "options_25delta_skew_6_months",
      "summary": "Options 25 Delta Skew (6 Months)",
      "description": "Skew is the relative richness of put vs call options, expressed in terms of Implied Volatility (IV). For options with a specific expiry, 25 Delta Skew refers to puts with a delta of -25 to demonstrate this difference in the market’s perception of implied volatility. 25 Delta Skew is calculated as the difference between a 25-delta put’s implied volatility and a 25-delta call’s implied volatility, normalized by the ATM Implied Volatility. This metrics focuses on option contracts expiring in 6 months.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.Options25DeltaSkew6Months?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_25delta_skew_all",
      "method": "GET",
      "metric": "options_25delta_skew_all",
      "summary": "Options 25 Delta Skew (All)",
      "description": "Skew is the relative richness of put vs call options, expressed in terms of Implied Volatility (IV). For options with a specific expiry, 25 Delta Skew refers to puts with a delta of -25 to demonstrate this difference in the market’s perception of implied volatility. 25 Delta Skew is calculated as the difference between a 25-delta put’s implied volatility and a 25-delta call’s implied volatility, normalized by the ATM Implied Volatility. The individual periods refer to option contracts expiring 1 week, 1 month, 3 months, and 6 months from now, respectively.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.Options25DeltaSkewAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_atm_implied_volatility_1_month",
      "method": "GET",
      "metric": "options_atm_implied_volatility_1_month",
      "summary": "Options ATM Implied Volatility (1 Month)",
      "description": "Implied Volatility is the market&#x27;s expectation of volatility. Given the price of an option we can solve for the expected volatility of the underlying asset. Formally, implied volatility (IV) is the one standard deviation range of expected movement of an asset’s price over the course of a year. Viewing At-The-Money (ATM) IV over time gives a normalized view of volatility expectations which will often rise and fall with realized volatility and market sentiment. This metric shows the ATM implied volatility for options contracts that expire 1 month from today.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsAtmImpliedVolatility1Month?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_atm_implied_volatility_1_week",
      "method": "GET",
      "metric": "options_atm_implied_volatility_1_week",
      "summary": "Options ATM Implied Volatility (1 Week)",
      "description": "Implied Volatility is the market&#x27;s expectation of volatility. Given the price of an option we can solve for the expected volatility of the underlying asset. Formally, implied volatility (IV) is the one standard deviation range of expected movement of an asset’s price over the course of a year. Viewing At-The-Money (ATM) IV over time gives a normalized view of volatility expectations which will often rise and fall with realized volatility and market sentiment. This metric shows the ATM implied volatility for options contracts that expire 1 week from today.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsAtmImpliedVolatility1Week?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_atm_implied_volatility_3_months",
      "method": "GET",
      "metric": "options_atm_implied_volatility_3_months",
      "summary": "Options ATM Implied Volatility (3 Months)",
      "description": "Implied Volatility is the market&#x27;s expectation of volatility. Given the price of an option we can solve for the expected volatility of the underlying asset. Formally, implied volatility (IV) is the one standard deviation range of expected movement of an asset’s price over the course of a year. Viewing At-The-Money (ATM) IV over time gives a normalized view of volatility expectations which will often rise and fall with realized volatility and market sentiment. This metric shows the ATM implied volatility for options contracts that expire 3 months from today.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsAtmImpliedVolatility3Months?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_atm_implied_volatility_6_months",
      "method": "GET",
      "metric": "options_atm_implied_volatility_6_months",
      "summary": "Options ATM Implied Volatility (6 Months)",
      "description": "Implied Volatility is the market&#x27;s expectation of volatility. Given the price of an option we can solve for the expected volatility of the underlying asset. Formally, implied volatility (IV) is the one standard deviation range of expected movement of an asset’s price over the course of a year. Viewing At-The-Money (ATM) IV over time gives a normalized view of volatility expectations which will often rise and fall with realized volatility and market sentiment. This metric shows the ATM implied volatility for options contracts that expire 6 months from today.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsAtmImpliedVolatility6Months?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_atm_implied_volatility_all",
      "method": "GET",
      "metric": "options_atm_implied_volatility_all",
      "summary": "Options ATM Implied Volatility (All)",
      "description": "Implied Volatility is the market&#x27;s expectation of volatility. Given the price of an option we can solve for the expected volatility of the underlying asset. Formally, implied volatility (IV) is the one standard deviation range of expected movement of an asset’s price over the course of a year. Viewing At-The-Money (ATM) IV over time gives a normalized view of volatility expectations which will often rise and fall with realized volatility and market sentiment. This metric shows the ATM implied volatility for options contracts expiring 1 week, 1 month, 3 months, and 6 months from today.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsAtmImpliedVolatilityAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_open_interest_distribution",
      "method": "GET",
      "metric": "options_open_interest_distribution",
      "summary": "Options OI by Strike Price",
      "description": "The total open interest of call and put options by strike price for a specific options contract.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsOpenInterestDistribution?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_open_interest_sum",
      "method": "GET",
      "metric": "options_open_interest_sum",
      "summary": "Options Open Interest",
      "description": "The total amount of funds allocated in options contracts. Use dropdown above chart to select individual exchanges. Note that the supported exchanges that are served via our API can differ from those which are available in Studio, because some data is for display purposes only.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsOpenInterestSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_open_interest_put_call_ratio",
      "method": "GET",
      "metric": "options_open_interest_put_call_ratio",
      "summary": "Options Open Interest Put/Call Ratio",
      "description": "The Options Open Interest Put/Call Ratio shows the put volume divided by call volume of all funds currently allocated in options contracts (open interest).\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsOpenInterestPutCallRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_implied_volatility_term_structure",
      "method": "GET",
      "metric": "options_implied_volatility_term_structure",
      "summary": "Options Volatility Term Structure",
      "description": "\nImplied Volatility Term Structure is the At-The-Money (ATM) implied volatility of options expiring on different dates in the future, and shows how the market prices the relation between volatility and time.\n\nOccasionally, implied volatility for options expiring in the near term can top that of options expiring further in the future. This event that is referred to as \"backwardation\", can be an indication of panic and demand in the options markets as investors are willing to price in a greater risk for contracts expiring in the short term compared to those expiring further in the future. While \"backwardation\" is rare, most often the metric will show an upwards slope, the steepness of which can be a sign of complacency in the markets. When things are calm, the implied volatility for options expiring shortly can at times be 50% lower than the implied volatility on longer dated options.\n\nThe legend refers to the state of the term structure at several points in recent history, i.e. latest, 1 day, 2 days, 1 week and 2 weeks ago, respectively.\n\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsImpliedVolatilityTermStructure?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_volume_daily_sum",
      "method": "GET",
      "metric": "options_volume_daily_sum",
      "summary": "Options Volume",
      "description": "The total volume traded in options contracts in the last 24 hours. Use the dropdown above the chart to select individual exchanges. The supported exchanges served via our API can differ from those available in Studio because some data is for display purposes only. (Note that the quote of options contracts is the premium and not the notional value of the option, which refers to the value that the option controls.)\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsVolumeDailySum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_volume_put_call_ratio",
      "method": "GET",
      "metric": "options_volume_put_call_ratio",
      "summary": "Options Volume Put/Call Ratio",
      "description": "The Options Volume Put/Call Ratio shows the put volume divided by call volume traded in options contracts in the last 24 hours.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsVolumePutCallRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/futures_open_interest_crypto_margin_relative",
      "method": "GET",
      "metric": "futures_open_interest_crypto_margin_relative",
      "summary": "Percent Crypto-Margined Futures Open Interest",
      "description": "The percentage of futures contracts open interest that is margined in the native coin (e.g. BTC), and not in USD or a USD-pegged stablecoin.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.FuturesOpenInterestCryptoMarginRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/perpetuals_reference_rate",
      "method": "GET",
      "metric": "perpetuals_reference_rate",
      "summary": "Perpetuals Reference Rate",
      "description": "The Perpetuals Reference Rate is an index for perpetual contracts based on trade data from Deribit, Binance, and OKX. Inspired by the CME CF Bitcoin Reference Rate (BRRNY) methodology, it aggregates trades into 5-minute intervals, determining a volume-weighted median price for each. The final rate is derived from the average of 12 intervals. The daily model is calculated at 4:00 PM ET.\n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.PerpetualsReferenceRate?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/derivatives/options_volatility_smile",
      "method": "GET",
      "metric": "options_volatility_smile",
      "summary": "Volatility Smile",
      "description": "\nVolatility Smile depicts the implied volatilities of options with different strikes for the chosen expiration date. Options further out of the money usually have higher implied volatilities, hence the charts show a typical &#x27;smile&#x27; shape. The steepness and shape of this smile can be used to assess the relative expensiveness of options, and gauge what kind of tail risks the market is pricing in.\n\nThe legend refers to historical overlays and shows the shape of the smile 1 day, 2 days, 1 week, and 2 weeks ago, respectively. For instance, when ATM implied volatility values for extreme strikes is lower today compared to historical overlays could indicate a reduced tail-risk being priced in by the market a probabilities for extreme moves relative to medium moves have come down in the market&#x27;s view.\n          \n\n[View in Studio](https://studio.glassnode.com/charts/derivatives.OptionsVolatilitySmile?a=BTC)\n"
    }
  ],
  "distribution": [
    {
      "path": "/v1/metrics/distribution/balance_bhutan_government",
      "method": "GET",
      "metric": "balance_bhutan_government",
      "summary": "Bhutan Government Balance",
      "description": "The Bhutan Government Balance corresponds to the amount of BTC held in addresses controlled by Druk Holding and Investments (DHI), the investment arm of the Royal Government of Bhutan.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceBhutanGovernment?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_cashapp",
      "method": "GET",
      "metric": "balance_cashapp",
      "summary": "Cash App Balance",
      "description": "The amount of BTC held in addresses controlled by Cash App. Note that this metric is based on address labels that we constantly keep updating. The values shown here provide an estimate and may not necessarily reflect the full balance.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceCashapp?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_donald_trump",
      "method": "GET",
      "metric": "balance_donald_trump",
      "summary": "Donald Trump Balance",
      "description": "The Donald Trump Balance corresponds to the amount of ETH held in addresses controlled by Donald Trump.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceDonaldTrump?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_el_salvador",
      "method": "GET",
      "metric": "balance_el_salvador",
      "summary": "El Salvador Government Balance",
      "description": "This metric provides insights into the on-chain balance of Bitcoin held by El Salvador, as reported by the National Bitcoin Office (ONBTC). For more details, please visit the official government website: https://bitcoin.gob.sv/\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceElSalvador?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_bitwise",
      "method": "GET",
      "metric": "balance_bitwise",
      "summary": "Estimated Bitwise Bitcoin ETF Balance (BITB)",
      "description": "The BITB Balance metric aims to monitor and delineate the Bitcoin balances held within the Bitwise Bitcoin ETF (BITB). This balance estimate is derived from the addresses published on Bitwises&#x27;s website (https://bitbetf.com). \n\nDisclaimer:\nFor the most accurate and current balance information it is advised to explore the official Bitwise BITB ETF website (https://bitbetf.com).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceBitwise?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_blackrock",
      "method": "GET",
      "metric": "balance_blackrock",
      "summary": "Estimated BlackRock Bitcoin ETF Balance (IBIT)",
      "description": "The IBIT Balance metric is designed to dynamically track the estimated Bitcoin balances associated with the BlackRock Bitcoin ETF (IBIT) through on-chain data and Glassnode’s clustering heuristics. It’s important to note that, due to the inherent characteristics of on-chain analysis, this metric may not always precisely align with the officially reported numbers from the ETF issuer shown on the US Bitcoin Spot ETF Balances metric.\n\nDisclaimer:\nFor the most accurate balance information and a comprehensive understanding of IBIT’s historical evolution, we recommend exploring the official BlackRock IBIT ETF website (https://www.ishares.com/us/products/333011/ishares-bitcoin-trust).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceBlackrock?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_franklin_templeton",
      "method": "GET",
      "metric": "balance_franklin_templeton",
      "summary": "Estimated Franklin Templeton Bitcoin ETF Balance (EZBC)",
      "description": "The EZBC Balance metric aims to monitor and delineate the estimated Bitcoin balances held within the Franklin Templeton Bitcoin ETF (EZBC). This balance estimate is derived from a combination of on-chain analysis and Glassnode&#x27;s clustering heuristics.\n\nDisclaimer:\nThe presented balance is an estimate based on on-chain data and clustering methods, and as such may not precisely match the actual EZBC balance. For the most accurate and current balance information, and for a comprehensive understanding of EZBC&#x27;s historical evolution, it is advised to explore the official Franklin Templeton EZBC ETF website (https://www.franklintempleton.com/investments/options/exchange-traded-funds/products/39639/SINGLCLASS/franklin-bitcoin-etf/EZBC).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceFranklinTempleton?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_grayscale_trust",
      "method": "GET",
      "metric": "balance_grayscale_trust",
      "summary": "Estimated Grayscale Bitcoin ETF Balance (GBTC)",
      "description": "The GBTC Balance metric aims to monitor and delineate the estimated Bitcoin balances held within the Grayscale Bitcoin ETF (GBTC) under Coinbase Custody. This balance estimate is derived from a combination of on-chain analysis and Glassnode&#x27;s clustering heuristics.\n\nGrayscale initially operated as a closed end fund, which allowed for both cash or in-kind share creation. The closed end fund had an annual fee of 2, and enabling NAV arbitrage via both share creation and redemption (cash only, not in-kind).\n\nDisclaimer:\nThe presented balance is an estimate based on on-chain data and clustering methods, and as such may not precisely match the actual GBTC balance. For the most accurate and current balance information, and for a comprehensive understanding of GBTC&#x27;s historical evolution, it is advised to explore the official Grayscale GBTC ETF website (https://etfs.grayscale.com/gbtc).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceGrayscaleTrust?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_vaneck",
      "method": "GET",
      "metric": "balance_vaneck",
      "summary": "Estimated VanEck Bitcoin ETF Balance (HODL)",
      "description": "The HODL Balance metric aims to monitor and delineate the estimated Bitcoin balances held within the VanEck Bitcoin ETF (HODL). This balance estimate is derived from a combination of on-chain analysis and Glassnode&#x27;s clustering heuristics.\n\nDisclaimer:\nThe presented balance is an estimate based on on-chain data and clustering methods, and as such may not precisely match the actual HODL balance. For the most accurate and current balance information, and for a comprehensive understanding of HODL&#x27;s historical evolution, it is advised to explore the official VanEck HODL ETF website (https://www.vaneck.com/us/en/investments/bitcoin-trust-hodl/overview/).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceVaneck?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_wisdomtree",
      "method": "GET",
      "metric": "balance_wisdomtree",
      "summary": "Estimated WisdomTree Bitcoin ETF Balance (BTCW)",
      "description": "The BTCW Balance metric aims to monitor and delineate the estimated Bitcoin balances held within the WisdomTree Bitcoin ETF (BTCW). This balance estimate is derived from a combination of on-chain analysis and Glassnode&#x27;s clustering heuristics.\n\nDisclaimer:\nThe presented balance is an estimate based on on-chain data and clustering methods, and as such may not precisely match the actual BTCW balance. For the most accurate and current balance information, and for a comprehensive understanding of BTCW&#x27;s historical evolution, it is advised to explore the official WisdomTree BTCW ETF website (https://www.wisdomtree.com/investments/etfs/crypto/btcw).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceWisdomtree?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/exchange_aggregated_reliance_ratio",
      "method": "GET",
      "metric": "exchange_aggregated_reliance_ratio",
      "summary": "Exchange Aggregated Reliance Ratio",
      "description": "The Exchange Aggregated Reliance Ratio extends the concept of the Exchange Reliance Ratio by providing a USD-volume-weighted average across major assets on a given exchange. Unlike asset-specific Reliance Ratios, this aggregated metric measures the overall dependency of an exchange’s liquidity concentration, reflecting how centralized or diversified the platform’s total asset flows are. Higher values indicate greater liquidity concentration and potential systemic risk, whereas lower values suggest broader liquidity distribution across the exchange..\n\nThis metric was introduced by [CryptoVizArt](https://x.com/CryptoVizArt). For further details, please refer to his [introductory article](https://insights.glassnode.com/the-week-onchain-week-35-2023/).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.ExchangeAggregatedRelianceRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/exchange_aggregated_reshuffling_ratio",
      "method": "GET",
      "metric": "exchange_aggregated_reshuffling_ratio",
      "summary": "Exchange Aggregated Reshuffling Ratio",
      "description": "The Exchange Aggregated Reliance Ratio extends the concept of the Exchange Reliance Ratio by providing a USD-volume-weighted average across major assets on a given exchange. Unlike asset-specific Reshuffling Ratios, this aggregated metric measures the overall internal liquidity movements relative to the exchange’s combined balances, representing platform-wide asset reallocation—not asset-specific flows. Higher readings indicate more intensive, and potentially stressed, internal reallocation of assets, whereas lower readings point to comparatively stable internal flows across the exchange.\n\nThis metric was introduced by [CryptoVizArt](https://x.com/CryptoVizArt). For further details, please refer to his [introductory article](https://insights.glassnode.com/the-week-onchain-week-35-2023/).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.ExchangeAggregatedReshufflingRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_exchanges_relative",
      "method": "GET",
      "metric": "balance_exchanges_relative",
      "summary": "Exchange Balance (Percent)",
      "description": "The percent supply held on exchange addresses. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceExchangesRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_exchanges_all",
      "method": "GET",
      "metric": "balance_exchanges_all",
      "summary": "Exchange Balance (Stacked)",
      "description": "The total amount of coins held on exchange addresses. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceExchangesAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_exchanges",
      "method": "GET",
      "metric": "balance_exchanges",
      "summary": "Exchange Balance (Total)",
      "description": "The total amount of coins held on exchange addresses. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceExchanges?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/exchange_net_position_change",
      "method": "GET",
      "metric": "exchange_net_position_change",
      "summary": "Exchange Net Position Change",
      "description": "The 30d change of the supply held in exchange wallets.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.ExchangeNetPositionChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/exchange_reliance_ratio",
      "method": "GET",
      "metric": "exchange_reliance_ratio",
      "summary": "Exchange Reliance Ratio",
      "description": "The Exchange Reliance Ratio measures the net token flow (inflows minus outflows) relative to an exchange’s total balance, providing insight into how dependent a token’s liquidity is on that specific platform. Elevated values indicate a concentration of liquidity within a single exchange, which can amplify systemic risk if disruptions occur. Conversely, extremely low values may signal a potential risk of insufficient liquidity, particularly if the condition persists over time. A balanced ratio reflects a healthier, more distributed market structure.\n\nThis metric was introduced by [CryptoVizArt](https://x.com/CryptoVizArt). For further details, please refer to his [introductory article](https://insights.glassnode.com/the-week-onchain-week-35-2023/).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.ExchangeRelianceRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/exchange_reshuffling_ratio",
      "method": "GET",
      "metric": "exchange_reshuffling_ratio",
      "summary": "Exchange Reshuffling Ratio",
      "description": "The Reshuffling Ratio quantifies the volume of internal (in-house) token transfers relative to an exchange’s total balance, averaged over a short rolling window. A higher Reshuffling Ratio suggests the exchange is actively reallocating its liquidity internally — a behavior that, if persistent, may warrant further investigation into the exchange&#x27;s liquidity management practices. Conversely, a lower ratio indicates more stable internal flows, reflecting a healthier operational state.\n\nThis metric was introduced by [CryptoVizArt](https://x.com/CryptoVizArt). For further details, please refer to his [introductory article](https://insights.glassnode.com/the-week-onchain-week-35-2023/).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.ExchangeReshufflingRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/exchange_whales_outflow",
      "method": "GET",
      "metric": "exchange_whales_outflow",
      "summary": "Exchange Whales Outflow",
      "description": "The Whales Outflow metric tracks the rolling volume of withdrawals from an exchange to large non-exchange entities, normalized by the exchange’s balance. A higher value reflects increased whale-driven outflows, which may indicate active large-client withdrawal behavior. If such activity is concentrated on a single exchange, it warrants further assessment — under typical circumstances, it could result from internal wallet management operations; however, in extreme cases, it may signal declining client confidence or even a potential security breach.\n\nThis metric was introduced by [CryptoVizArt](https://x.com/CryptoVizArt). For further details, please refer to his [introductory article](https://insights.glassnode.com/the-week-onchain-week-35-2023/).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.ExchangeWhalesOutflow?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_german_government",
      "method": "GET",
      "metric": "balance_german_government",
      "summary": "German Government Balance",
      "description": "The German Government Balance corresponds to the amount of BTC  held in addresses controlled by German authorities. The metric includes seized funds, e.g. from Movie2k that were seized by the German BKA. We constantly keep updating the set of addresses contributing to the total balance.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceGermanGovernment?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/gini",
      "method": "GET",
      "metric": "gini",
      "summary": "Gini Coefficient",
      "description": "The gini coefficient for the distribution of coins over addresses. Exchange addresses, smart contract addresses, and other special asset-specific addresses (e.g. team fund addresses) are excluded for the computation of the gini.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.Gini?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/distribution/herfindahl",
      "method": "GET",
      "metric": "herfindahl",
      "summary": "Herfindahl Index",
      "description": "Originally used as a [measure of competition](https://en.wikipedia.org/wiki/Herfindahl–Hirschman_Index), we adapt the Herfindahl Index as a metric for decentralization. It measures the addresses&#x27; shares of the current supply, and is defined as the sum of weighted address balances in the network. A large score indicates high concentration of supply, whereas a small score is an indicator for more evenly distributed funds across addresses. Exchange addresses, smart contract addresses and other special asset-specific addresses (e.g. team fund addresses) are excluded.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.Herfindahl?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_luna_foundation_guard",
      "method": "GET",
      "metric": "balance_luna_foundation_guard",
      "summary": "Luna Foundation Guard Balance",
      "description": "The Luna Foundation Guard Balance corresponds to the amount of BTC held in addresses of the Luna Foundation Guard (LFG), which controls the bitcoin reserve supporting the TerraUSD (UST) stablecoin.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceLunaFoundationGuard?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_miners_sum",
      "method": "GET",
      "metric": "balance_miners_sum",
      "summary": "Miner Balance",
      "description": "The total supply held in miner addresses.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceMinersSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_miners_all",
      "method": "GET",
      "metric": "balance_miners_all",
      "summary": "Miner Balance (Stacked)",
      "description": "The total supply held in miner addresses.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceMinersAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_miners_change",
      "method": "GET",
      "metric": "balance_miners_change",
      "summary": "Miner Net Position Change",
      "description": "The 30d change of the supply held in miner addresses.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceMinersChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_mtgox_trustee",
      "method": "GET",
      "metric": "balance_mtgox_trustee",
      "summary": "Mt. Gox Balance",
      "description": "The Mt. Gox Trustee Balance corresponds to the amount of BTC held in addresses controlled by Nobuaki Kobayashi, the trustee overseeing the Mt. Gox civil rehabilitation proceedings.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceMtgoxTrustee?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/outflows_mtgox_trustee",
      "method": "GET",
      "metric": "outflows_mtgox_trustee",
      "summary": "Mt. Gox Outflows",
      "description": "This metric traces the movement of BTC from the balances held by Nobuaki Kobayashi, the trustee supervising the civil rehabilitation proceedings of Mt. Gox. It presents a comprehensive timeline of BTC transactions flowing from Mt. Gox to individual exchanges or other recognized entities, helping track the redistribution of these assets over time.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.OutflowsMtgoxTrustee?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_otc_desks",
      "method": "GET",
      "metric": "balance_otc_desks",
      "summary": "OTC Desks Holdings",
      "description": "The cumulative balance of cryptocurrencies stored in addresses associated with Over-The-Counter (OTC) desks is represented in this metric. It encompasses data from three specific OTC desks known to us, thus providing a glimpse into the broader OTC market activity, albeit not its entirety.\n\nPlease note, our OTC balance figures are derived from carefully curated datasets that are regularly updated, alongside advanced data analytics and evolving statistical methodologies. Consequently, while our data is reliable, it is important to acknowledge that the most recent figures may exhibit minor adjustments as new information becomes available and our models are refined.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceOtcDesks?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_paypal",
      "method": "GET",
      "metric": "balance_paypal",
      "summary": "PayPal Balance",
      "description": "The amount of BTC held in addresses controlled by PayPal Holdings, Inc. Note that this metric is based on address labels that we constantly keep updating. The values shown here provide an estimate and may not necessarily reflect the full balance.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalancePaypal?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/proof_of_reserves",
      "method": "GET",
      "metric": "proof_of_reserves",
      "summary": "Proof of Reserves",
      "description": "Proof-of-Reserves refers to the on-chain reserves as officially disclosed by exchanges. This metric denotes the total balance on self-reported exchange addresses. Note that we only incorporate Bitcoin and Ethereum, and Solana addresses, other blockchains/L1s are not included. The proof-of-reserve data differs from our [exchange balance metrics](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;distribution.BalanceExchanges) as they stricly monitor the balance on officially communicated exchange addresses, which are only a subset of all addresses included in our more comprehensive exchange metrics. For more information please see our [article on proof-of-reserve metrics](https://insights.glassnode.com/proof-of-reserves).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.ProofOfReserves?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/proof_of_reserves_all",
      "method": "GET",
      "metric": "proof_of_reserves_all",
      "summary": "Proof of Reserves (All assets)",
      "description": "Proof-of-Reserves refers to the on-chain reserves as officially disclosed by exchanges. This metric denotes the total balance (in USD) of the biggest holdings on self-reported exchange addresses. We explicitly show at most the top 10 assets (by balance) and combine all others into the &#x27;Other&#x27; category. Note that we only incorporate Bitcoin and Ethereum addresses, other blockchains/L1s are not included. Therefore &#x27;Other&#x27; should be considered as a lower bound of additional exchange holdings. The proof-of-reserve data differs from our [exchange balance metrics](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;distribution.BalanceExchanges) as they stricly monitor the balance on officially communicated exchange addresses, which are only a subset of all addresses included in our more comprehensive exchange metrics. For more information please see our [article on proof-of-reserve metrics](https://insights.glassnode.com/proof-of-reserves).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.ProofOfReservesAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/proof_of_reserves_all_latest",
      "method": "GET",
      "metric": "proof_of_reserves_all_latest",
      "summary": "Proof of Reserves (Current)",
      "description": "Proof-of-Reserves refers to the on-chain reserves as officially disclosed by exchanges. This metric denotes the latest balance on self-reported exchange addresses and their corresponding change over the last 24 hours. We explicitly show at most the top 10 assets (by balance) and combine all others into the &#x27;Other&#x27; category. Note that we only incorporate Bitcoin and Ethereum addresses, other blockchains/L1s are not included. Therefore &#x27;Other&#x27; should be considered as a lower bound of additional exchange holdings. The proof-of-reserve data differs from our [exchange balance metrics](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;distribution.BalanceExchanges) as they stricly monitor the balance on officially communicated exchange addresses, which are only a subset of all addresses included in our more comprehensive exchange metrics. For more information please see our [article on proof-of-reserve metrics](https://insights.glassnode.com/proof-of-reserves).\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.ProofOfReservesAllLatest?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_revolut",
      "method": "GET",
      "metric": "balance_revolut",
      "summary": "Revolut Balance",
      "description": "The amount of BTC held in addresses controlled by Revolut Group Holdings Ltd. Note that this metric is based on address labels that we constantly keep updating. The values shown here provide an estimate and may not necessarily reflect the full balance.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceRevolut?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_robinhood",
      "method": "GET",
      "metric": "balance_robinhood",
      "summary": "Robinhood Balance",
      "description": "The amount of BTC held in addresses controlled by Robinhood Markets, Inc. Note that this metric is based on address labels that we constantly keep updating. The values shown here provide an estimate and may not necessarily reflect the full balance.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceRobinhood?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/supply_contracts",
      "method": "GET",
      "metric": "supply_contracts",
      "summary": "Supply in Smart Contracts",
      "description": "The percent of total supply of the token that is held in smart contracts.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.SupplyContracts?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_1pct_holders",
      "method": "GET",
      "metric": "balance_1pct_holders",
      "summary": "Supply of Top 1% Addresses",
      "description": "The percentage of supply held by the top 1% addresses. Exchange addresses, smart contract addresses, and other special asset-specific addresses (e.g. team fund addresses) are excluded.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.Balance1PctHolders?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_tesla",
      "method": "GET",
      "metric": "balance_tesla",
      "summary": "Tesla Balance",
      "description": "The amount of BTC held in addresses controlled by Tesla, Inc. Note that this metric is based on address labels that we constantly keep updating. The values shown here provide an estimate and may not necessarily reflect the full balance.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceTesla?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_tether_treasury",
      "method": "GET",
      "metric": "balance_tether_treasury",
      "summary": "Tether Treasury Balance",
      "description": "The amount of BTC held in addresses controlled by Tether\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceTetherTreasury?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_uk_government",
      "method": "GET",
      "metric": "balance_uk_government",
      "summary": "UK Government Balance",
      "description": "The amount of BTC held in addresses controlled by UK authorities. Note that this metric is based on address labels that we constantly keep updating. The values shown here provide an estimate and may not necessarily reflect the full balance.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceUkGovernment?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_us_government",
      "method": "GET",
      "metric": "balance_us_government",
      "summary": "US Government Balance",
      "description": "The US Government Balance corresponds to the amount of BTC  held in addresses controlled by US authorities. The metric includes seized funds, e.g. from the 2016 Bitfinex Hack or the 2012 Silk Road Hack. We constantly keep updating the set of addresses contributing to the total balance.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceUsGovernment?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/distribution/balance_wbtc",
      "method": "GET",
      "metric": "balance_wbtc",
      "summary": "WBTC Balance",
      "description": "Wrapped Bitcoin (WBTC) is the first ERC20 token backed 1:1 with Bitcoin and designed to act as representation of Bitcoin on the Ethereum blockchain. The WBTC supply listed here corresponds to the amount of Bitcoin held by BitGo, the custodian responsible for minting new WBTC ERC20 tokens and guaranteeing backing of new ERC20 tokens by actual BTC.\n\n[View in Studio](https://studio.glassnode.com/charts/distribution.BalanceWbtc?a=BTC)\n"
    }
  ],
  "entities": [
    {
      "path": "/v1/metrics/entities/active_count",
      "method": "GET",
      "metric": "active_count",
      "summary": "Active Entities",
      "description": "The number of unique entities that were active either as a sender or receiver. Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/bitcoin_holders/).\n\n[View in Studio](https://studio.glassnode.com/charts/entities.ActiveCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/net_growth_count",
      "method": "GET",
      "metric": "net_growth_count",
      "summary": "Entities Net Growth",
      "description": "The net growth of unique entities in the network. This metric is defined as the difference between new entities and \"disappearing\" entities (entities with a zero balance that had a non–zero balance at the previous timestamp). Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/bitcoin_holders/).\n\n**The computation of this metric requires statistical information from several days, and is therefore only available with a lag of one week.**\n\n[View in Studio](https://studio.glassnode.com/charts/entities.NetGrowthCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_distribution_relative",
      "method": "GET",
      "metric": "supply_distribution_relative",
      "summary": "Entities Supply Distribution",
      "description": "Relative distribution of the circulating supply held by entities with specific balance bands.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyDistributionRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/new_count",
      "method": "GET",
      "metric": "new_count",
      "summary": "New Entities",
      "description": "The number of unique entities that appeared for the first time in a transaction of the native coin in the network. Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/bitcoin_holders/).\n\n**The computation of this metric requires statistical information from several days, and is therefore only available with a lag of one week.**\n\n[View in Studio](https://studio.glassnode.com/charts/entities.NewCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/min_1k_count",
      "method": "GET",
      "metric": "min_1k_count",
      "summary": "Number of Whales",
      "description": "The number of unique entities holding at least 1k coins.Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/bitcoin_holders/).\n\n[View in Studio](https://studio.glassnode.com/charts/entities.Min1KCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/profit_relative",
      "method": "GET",
      "metric": "profit_relative",
      "summary": "Percent Entities in Profit",
      "description": "The percentage of entities in the network that are currently in profit, e.g. the entities whose funds where on average bought at prices lower than the current price. \"Buy price\" is here defined as the price at the time coins were transferred into addresses controlled by the entity. Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information this [article](https://insights.glassnode.com/bitcoin_holders/).\n\n[View in Studio](https://studio.glassnode.com/charts/entities.ProfitRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/receiving_count",
      "method": "GET",
      "metric": "receiving_count",
      "summary": "Receiving Entities",
      "description": "The number of unique entities that were active as a receiver. Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/bitcoin_holders/).\n\n[View in Studio](https://studio.glassnode.com/charts/entities.ReceivingCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/sending_count",
      "method": "GET",
      "metric": "sending_count",
      "summary": "Sending Entities",
      "description": "The number of unique entities that were active as a sender. Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/bitcoin_holders/).\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SendingCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_less_0001",
      "method": "GET",
      "metric": "supply_balance_less_0001",
      "summary": "Supply Held by Entities with Balance < 0.001",
      "description": "The total circulating supply held by entities with balance lower than 0.001 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalanceLess0001?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_more_100k",
      "method": "GET",
      "metric": "supply_balance_more_100k",
      "summary": "Supply Held by Entities with Balance > 100k",
      "description": "The total circulating supply held by entities with balance of at least 100,000 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalanceMore100K?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_0001_001",
      "method": "GET",
      "metric": "supply_balance_0001_001",
      "summary": "Supply Held by Entities with Balance 0.001 - 0.01",
      "description": "The total circulating supply held by entities with balance between 0.001 and 0.01 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalance0001001?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_001_01",
      "method": "GET",
      "metric": "supply_balance_001_01",
      "summary": "Supply Held by Entities with Balance 0.01 - 0.1",
      "description": "The total circulating supply held by entities with balance between 0.01 and 0.1 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalance00101?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_01_1",
      "method": "GET",
      "metric": "supply_balance_01_1",
      "summary": "Supply Held by Entities with Balance 0.1 - 1",
      "description": "The total circulating supply held by entities with balance between 0.1 and 1 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalance011?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_1_10",
      "method": "GET",
      "metric": "supply_balance_1_10",
      "summary": "Supply Held by Entities with Balance 1 - 10",
      "description": "The total circulating supply held by entities with balance between 1 and 10 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalance110?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_10_100",
      "method": "GET",
      "metric": "supply_balance_10_100",
      "summary": "Supply Held by Entities with Balance 10 - 100",
      "description": "The total circulating supply held by entities with balance between 10 and 100 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalance10100?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_100_1k",
      "method": "GET",
      "metric": "supply_balance_100_1k",
      "summary": "Supply Held by Entities with Balance 100 - 1k",
      "description": "The total circulating supply held by entities with balance between 100 and 1,000 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalance1001K?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_10k_100k",
      "method": "GET",
      "metric": "supply_balance_10k_100k",
      "summary": "Supply Held by Entities with Balance 10k - 100k",
      "description": "The total circulating supply held by entities with balance between 10,000 and 100,000 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalance10K100K?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/entities/supply_balance_1k_10k",
      "method": "GET",
      "metric": "supply_balance_1k_10k",
      "summary": "Supply Held by Entities with Balance 1k - 10k",
      "description": "The total circulating supply held by entities with balance between 1,000 and 10,000 coins.\n\n[View in Studio](https://studio.glassnode.com/charts/entities.SupplyBalance1K10K?a=BTC)\n"
    }
  ],
  "eth2": [
    {
      "path": "/v1/metrics/eth2/active_validators_count",
      "method": "GET",
      "metric": "active_validators_count",
      "summary": "Active Validators",
      "description": "The count of active validators. Active validators are validators that have completed the activation queue, are not in an exit queue, and have effective balances greater than 32 ETH.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.ActiveValidatorsCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/attestation_count",
      "method": "GET",
      "metric": "attestation_count",
      "summary": "Attestation Count",
      "description": "The number of &#x27;yes&#x27; votes cast by the committee of validators which are attesting to the validity of the produced block in each slot.\n\nEach Epoch, up to 64 committees of at least 128 validators are algorithmically selected per slot for block production and attestation. For each slot, one validator out of the committee is selected to propose a block, whilst the remaining validators are responsible for casting attestation votes.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.AttestationCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/validator_balance_mean",
      "method": "GET",
      "metric": "validator_balance_mean",
      "summary": "Average Validator Balance",
      "description": "The count of active validators. Active validators are validators that have completed the activation queue, are not in an exit queue, and have effective balances greater than 32 ETH.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.ValidatorBalanceMean?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/epoch_height",
      "method": "GET",
      "metric": "epoch_height",
      "summary": "Epoch Height",
      "description": "The epoch height, i.e. the total number of epochs ever included in the main blockchain. Each Epoch contains a set of 32 slots, and an average time interval of 6.4mins.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.EpochHeight?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/estimated_annual_issuance",
      "method": "GET",
      "metric": "estimated_annual_issuance",
      "summary": "Estimated Annual Issuance",
      "description": "The theoretical network ETH issuance curve of the Ethereum Proof-of-Stake network. This chart reflects the estimated total ETH issuance which is determined based on the number of validators participating in consensus.\n\nIt is calculated as Annual ETH Issuance &#x3D; 1024 * sqrt(Validator Count)\n\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.EstimatedAnnualIssuance?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/estimated_annual_issuance_roi_per_validator",
      "method": "GET",
      "metric": "estimated_annual_issuance_roi_per_validator",
      "summary": "Estimated Annual Issuance ROI per validator",
      "description": "The theoretical per validator return curve of the Ethereum Proof-of-Stake network. This chart reflects the ETH denominated annual return (%) on a 32-ETH stake validator, with ETH issuance determined based on the number of validators participating in consensus.\n\nIt is calculated as Annual ROI per validator &#x3D; 32 / sqrt(Validator Count)\n\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.EstimatedAnnualIssuanceRoiPerValidator?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/staking_deposits_count",
      "method": "GET",
      "metric": "staking_deposits_count",
      "summary": "ETH 2.0 New Deposits",
      "description": "The number transactions depositing 32 ETH to the ETH2 deposit contract.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.StakingDepositsCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/staking_validators_count",
      "method": "GET",
      "metric": "staking_validators_count",
      "summary": "ETH 2.0 New Validators",
      "description": "The number of new unique addresses depositing 32 ETH to the ETH2 deposit contract. Note that there is not necessarily always a direct relationship between an individual address and a validator, e.g. a single validator can deposit funds from multiple addresses to the ETH2 contract.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.StakingValidatorsCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/staking_volume_sum",
      "method": "GET",
      "metric": "staking_volume_sum",
      "summary": "ETH 2.0 New Value Staked",
      "description": "The amount of ETH transferred to the ETH2 deposit contract.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.StakingVolumeSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/staking_total_deposits_count",
      "method": "GET",
      "metric": "staking_total_deposits_count",
      "summary": "ETH 2.0 Total Number of Deposits",
      "description": "The total number of transactions to the ETH2 deposit contract.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.StakingTotalDepositsCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/staking_total_validators_count",
      "method": "GET",
      "metric": "staking_total_validators_count",
      "summary": "ETH 2.0 Total Number of Validators",
      "description": "The total number of unique addresses that have deposited 32 ETH to the ETH2 deposit contract. Note that there is not necessarily always a direct relationship between an individual address and a validator, e.g. a single validator can deposit funds from multiple addresses to the ETH2 contract.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.StakingTotalValidatorsCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/staking_total_volume_sum",
      "method": "GET",
      "metric": "staking_total_volume_sum",
      "summary": "ETH 2.0 Total Value Staked",
      "description": "The amount of ETH that has been deposited to the ETH2 deposit contract, the current ETH balance on the ETH2 deposit contract.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.StakingTotalVolumeSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/deposited_by_provider_volume_sum",
      "method": "GET",
      "metric": "deposited_by_provider_volume_sum",
      "summary": "ETH 2.0 Total Value Staked by Provider",
      "description": "The total amount of ETH transferred to the ETH2 deposit contract via staking providers.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.DepositedByProviderVolumeSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/missed_blocks_count",
      "method": "GET",
      "metric": "missed_blocks_count",
      "summary": "Missed Blocks",
      "description": "The total number of slots where a validator failed to produce a block. This can occur if a validator is offline, or opted not to propose a block in their allocated slot.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.MissedBlocksCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/orphaned_blocks_count",
      "method": "GET",
      "metric": "orphaned_blocks_count",
      "summary": "Orphaned Blocks",
      "description": "The total number of orphan blocks which were not selected as the canonical chain. Orphaned blocks are duplicate blocks, produced by different validators, but were not included on the main blockchain. They naturally occur due to network latency, or in instances where two validators produce a block at the same timestamp.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.OrphanedBlocksCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/participation_rate_mean",
      "method": "GET",
      "metric": "participation_rate_mean",
      "summary": "Participation Rate",
      "description": "A measure of network validator responsiveness, tracking the proportion of slots that were missed to the total available. The participation rate is calculated as follows: (Total Slots - Slots Missed) / Total Slots.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.ParticipationRateMean?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/slashings_count",
      "method": "GET",
      "metric": "slashings_count",
      "summary": "Slashing Event Count",
      "description": "Total number of slashing events recorded on the blockchain. Slashing events are automated events which occur due to validator misbehaviour such as proposing invalid blocks, or attesting to an invalid fork of the blockchain.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.SlashingsCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/slot_height",
      "method": "GET",
      "metric": "slot_height",
      "summary": "Slot Height",
      "description": "The slot height, i.e. the total number of slots ever included in the main blockchain. Each slot is an opportunity for the selected validator to propose a block, and have a target interval of 12 seconds.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.SlotHeight?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/stake_effectiveness_mean",
      "method": "GET",
      "metric": "stake_effectiveness_mean",
      "summary": "Stake Effectiveness",
      "description": "Stake Effectiveness is a measure of the propostion of staked ETH which is actively participating in consensus. It is calculated as the ratio between the Total Staked Balance, and the Total Effective Balance of the Proof-of-Stake validator set: Stake Effectiveness &#x3D; Total Effective Balance / Total Staked Balance\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.StakeEffectivenessMean?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/deposits_count",
      "method": "GET",
      "metric": "deposits_count",
      "summary": "Staking Deposits",
      "description": "The number of new 32 ETH stake deposits made into the staking contract.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.DepositsCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/effective_balance_sum",
      "method": "GET",
      "metric": "effective_balance_sum",
      "summary": "Total Effective Balance",
      "description": "The total staked balance which is actively participating in Proof-of-Stake consensus.\n\nThe Effective Balance of an individual validator is always rounded to 1 ETH increments, and has a maximum of 32 ETH. Effective Balance will round down to nearest 1 ETH increment with a minimum buffer of 0.25 ETH. For example:\n- Total Balance of 35 ETH —> Effective Balance of 32 ETH\n- Total Balance of 31.9 ETH —> Effective Balance of 31 ETH\n- Total Balance of 31.25 ETH —>  Effective Balance of 31 ETH\n- Total Balance of 31.24 ETH —>  Effective Balance of 30 ETH\n\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.EffectiveBalanceSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/eth2/voluntary_exit_count",
      "method": "GET",
      "metric": "voluntary_exit_count",
      "summary": "Voluntary Exit Count",
      "description": "The total number of validators that have exited the validator pool voluntarily.\n\n[View in Studio](https://studio.glassnode.com/charts/eth2.VoluntaryExitCount?a=ETH)\n"
    }
  ],
  "fees": [
    {
      "path": "/v1/metrics/fees/exchanges_relative",
      "method": "GET",
      "metric": "exchanges_relative",
      "summary": "Exchange Fee Dominance",
      "description": "The Exchange Fee Dominance metric is defined as the percent amount of total fees paid in transactions related to on-chain exchange activity.\n- Deposits: Transactions that include an exchange address as the receiver of funds.\n- Withdrawals: Transactions that include an exchange address as the sender of funds.\n- In-House: Transactions that include addresses of a single exchange as both the sender and receiver of funds.\n- Inter-Exchange: Transactions that include addresses of (distinct) exchanges as both the sender and receiver of funds.\n\nIf a transaction can be categorized into multiple of these categories (e.g. a transaction that sends funds externally as well as in-house), the fees are split into percentages according to the volume transferred.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.ExchangesRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/fees/exchanges_mean",
      "method": "GET",
      "metric": "exchanges_mean",
      "summary": "Exchange Fees (Mean)",
      "description": "The mean amount of fees paid in transactions related to on-chain exchange activity. Note that the mean is computed over transfers, not transactions.\n- Deposits: Transactions that include an exchange address as the receiver of funds.\n- Withdrawals: Transactions that include an exchange address as the sender of funds.\n- In-House: Transactions that include addresses of a single exchange as both the sender and receiver of funds.\n- Inter-Exchange: Transactions that include addresses of (distinct) exchanges as both the sender and receiver of funds.\n\nIf a transaction can be categorized into multiple of these categories (e.g. a transaction that sends funds externally as well as in-house), the fees are split into percentages according to the volume transferred.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.ExchangesMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/fees/exchanges_sum",
      "method": "GET",
      "metric": "exchanges_sum",
      "summary": "Exchange Fees (Total)",
      "description": "The total amount of fees paid in transactions related to on-chain exchange activity.\n- Deposits: Transactions that include an exchange address as the receiver of funds.\n- Withdrawals: Transactions that include an exchange address as the sender of funds.\n- In-House: Transactions that include addresses of a single exchange as both the sender and receiver of funds.\n- Inter-Exchange: Transactions that include addresses of (distinct) exchanges as both the sender and receiver of funds.\n\nIf a transaction can be categorized into multiple of these categories (e.g. a transaction that sends funds externally as well as in-house), the fees are split into percentages according to the volume transferred.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.ExchangesSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/fees/fee_ratio_multiple",
      "method": "GET",
      "metric": "fee_ratio_multiple",
      "summary": "Fee Ratio Multiple (FRM)",
      "description": "The Fee Ratio Multiple (FRM) is defined as the ratio between the total miner revenue (blocks rewards + transaction fees) and transaction fees. FRM is a measure of a blockchain&#x27;s security and gives an assessment how secure a chain is once block rewards disappear. This metric was first introduced by [Matteo Leibowitz](https://twitter.com/teo_leibowitz). For more information please see his [article](https://medium.com/coinmonks/introducing-fee-ratio-multiple-frm-1eada9ac9bec).\n\n[View in Studio](https://studio.glassnode.com/charts/fees.FeeRatioMultiple?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/fees/volume_mean",
      "method": "GET",
      "metric": "volume_mean",
      "summary": "Fees (Mean)",
      "description": "The mean fee per transaction. Issued (minted) coins are not included.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.VolumeMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/fees/volume_median",
      "method": "GET",
      "metric": "volume_median",
      "summary": "Fees (Median)",
      "description": "The median fee per transaction. Issued (minted) coins are not included.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.VolumeMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/fees/volume_sum",
      "method": "GET",
      "metric": "volume_sum",
      "summary": "Fees (Total)",
      "description": "The total amount of fees paid to miners. Issued (minted) coins are not included.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.VolumeSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_price_mean",
      "method": "GET",
      "metric": "gas_price_mean",
      "summary": "Gas Price (Mean)",
      "description": "The mean gas price paid per transaction.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasPriceMean?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_price_median",
      "method": "GET",
      "metric": "gas_price_median",
      "summary": "Gas Price (Median)",
      "description": "The median gas price paid per transaction.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasPriceMedian?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_bridges",
      "method": "GET",
      "metric": "gas_used_sum_bridges",
      "summary": "Gas Usage by Bridges (Absolute)",
      "description": "The amount of gas consumed by the Ethereum network by contracts that allow transfer of tokens between different blockchains.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumBridges?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_bridges_relative",
      "method": "GET",
      "metric": "gas_used_sum_bridges_relative",
      "summary": "Gas Usage by Bridges (Relative)",
      "description": "The relative amount (share) of gas consumed by the Ethereum network by contracts that allow transfer of tokens between different blockchains.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumBridgesRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_defi",
      "method": "GET",
      "metric": "gas_used_sum_defi",
      "summary": "Gas Usage by DeFi (Absolute)",
      "description": "The amount of gas consumed by the Ethereum network by on-chain financial instruments and protocols implemented as smart contracts, including decentralized exchanges (DEXs).\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumDefi?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_defi_relative",
      "method": "GET",
      "metric": "gas_used_sum_defi_relative",
      "summary": "Gas Usage by DeFi (Relative)",
      "description": "The relative amount (share) of gas consumed by the Ethereum network by on-chain financial instruments and protocols implemented as smart contracts, including decentralized exchanges (DEXs).\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumDefiRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_erc20",
      "method": "GET",
      "metric": "gas_used_sum_erc20",
      "summary": "Gas Usage by ERC-20 Tokens (Absolute)",
      "description": "The amount of gas consumed by the Ethereum network by transactions calling ERC20 contracts. Stablecoins contracts are excluded here.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumErc20?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_erc20_relative",
      "method": "GET",
      "metric": "gas_used_sum_erc20_relative",
      "summary": "Gas Usage by ERC-20 Tokens (Relative)",
      "description": "The relative amount (share) of gas consumed by the Ethereum network by transactions calling ERC20 contracts. Stablecoins contracts are excluded here.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumErc20Relative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_nfts",
      "method": "GET",
      "metric": "gas_used_sum_nfts",
      "summary": "Gas Usage by NFTs (Absolute)",
      "description": "The amount of gas consumed by the Ethereum network by transactions interacting with non-fungible tokens. This category includes of both token contract standards (ERC721, ERC1155), as well as NFT marketplaces (OpenSea, Blur, LooksRare, Rarible, SuperRare) for trading those.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumNfts?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_nfts_relative",
      "method": "GET",
      "metric": "gas_used_sum_nfts_relative",
      "summary": "Gas Usage by NFTs (Relative)",
      "description": "The relative amount (share) of gas consumed by the Ethereum network by transactions interacting with non-fungible tokens. This category includes of both token contract standards (ERC721, ERC1155), as well as NFT marketplaces (OpenSea, Blur, LooksRare, Rarible, SuperRare) for trading those.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumNftsRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_stablecoins",
      "method": "GET",
      "metric": "gas_used_sum_stablecoins",
      "summary": "Gas Usage by Stablecoins (Absolute)",
      "description": "The amount of gas consumed by the Ethereum network by stablecoin transactions. Stablecoin are fungible tokens that have their value pegged to an off-chain asset, either by the issuer or by an algorithm. We include 150+ stablecoins in this category, with USDT, USDC, UST, BUSD, and DAI being the most prominent ones.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumStablecoins?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_stablecoins_relative",
      "method": "GET",
      "metric": "gas_used_sum_stablecoins_relative",
      "summary": "Gas Usage by Stablecoins (Relative)",
      "description": "The relative amount (share) of gas consumed by the Ethereum network by stablecoin transactions. Stablecoin are fungible tokens that have their value pegged to an off-chain asset, either by the issuer or by an algorithm. We include 150+ stablecoins in this category, with USDT, USDC, UST, BUSD, and DAI being the most prominent ones.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumStablecoinsRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/tx_types_breakdown_sum",
      "method": "GET",
      "metric": "tx_types_breakdown_sum",
      "summary": "Gas Usage by Transaction Type (Absolute)",
      "description": "The amount of gas consumed by the Ethereum network by category. Transactions are classified into the following categories:\n\n- *Vanilla:* Pure ETH transfers between Externally Owned Accounts (EOAs), with no contracts being called.\n\n- *ERC20:* All transactions calling ERC20 contracts. Contracts in the Stablecoins category are excluded here.\n\n- *Stablecoins:* Fungible tokens that have their value pegged to an off-chain asset, either by the issuer or by an algorithm. We include 150+ stablecoins in this category, with USDT, USDC, UST, BUSD, and DAI being the most prominent ones.\n\n- *DeFi:* On-chain financial instruments and protocols implemented as smart contracts, including decentralized exchanges (DEXs). We include over 90+ DeFi protocols in this category, such as Uniswap, Etherdelta, 1inch, Sushiswap, Aave, and 0x.\n\n- *Bridges:* Contracts allowing transfer of tokens between different blockchains. We include 50+ bridges in this category, such as Ronin, Polygon, Optimism, and Arbitrum.\n\n- *NFTs:* Transactions interacting with non-fungible tokens. This category includes of both token contract standards (ERC721, ERC1155), as well as NFT marketplaces (OpenSea, Blur, LooksRare, Rarible, SuperRare) for trading those.\n\n- *MEV Bots:* Miner Extractable Value (MEV) bots execute transactions for profit by reordering, inserting, and censoring transactions within blocks.\n\n- *Other:* This category includes all other transactions in the Ethereum network that are not included in categories listed above.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.TxTypesBreakdownSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/tx_types_breakdown_relative",
      "method": "GET",
      "metric": "tx_types_breakdown_relative",
      "summary": "Gas Usage by Transaction Type (Relative)",
      "description": "The relative amount (share) of gas consumed by the Ethereum network by category. Transactions are classified into one of the following categories:\n\n- *Vanilla:* Pure ETH transfers between Externally Owned Accounts (EOAs), with no contracts being called.\n\n- *ERC20:* All transactions calling ERC20 contracts. Contracts in the Stablecoins category are excluded here.\n\n- *Stablecoins:* Fungible tokens that have their value pegged to an off-chain asset, either by the issuer or by an algorithm. We include 150+ stablecoins in this category, with USDT, USDC, UST, BUSD, and DAI being the most prominent ones.\n\n- *DeFi:* On-chain financial instruments and protocols implemented as smart contracts, including decentralized exchanges (DEXs). We include over 90+ DeFi protocols in this category, such as Uniswap, Etherdelta, 1inch, Sushiswap, Aave, and 0x.\n\n- *Bridges:* Contracts allowing transfer of tokens between different blockchains. We include 50+ bridges in this category, such as Ronin, Polygon, Optimism, and Arbitrum.\n\n- *NFTs:* Transactions interacting with non-fungible tokens. This category includes of both token contract standards (ERC721, ERC1155), as well as NFT marketplaces (OpenSea, Blur, LooksRare, Rarible, SuperRare) for trading those.\n\n- *MEV Bots:* Miner Extractable Value (MEV) bots execute transactions for profit by reordering, inserting, and censoring transactions within blocks.\n\n- *Other:* This category includes all other transactions in the Ethereum network that are not included in categories listed above.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.TxTypesBreakdownRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_vanilla",
      "method": "GET",
      "metric": "gas_used_sum_vanilla",
      "summary": "Gas Usage by Vanilla Transactions (Absolute)",
      "description": "The amount of gas consumed by the Ethereum network by vanilla transactions. Vanilla transactions are pure ETH transfers between Externally Owned Accounts (EOAs), with no contracts being called. Note that occasionally the value of the last datapoint can slightly change as some addresses initially transact as \"vanilla\" before their associated smart contract deployment is observed.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumVanilla?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum_vanilla_relative",
      "method": "GET",
      "metric": "gas_used_sum_vanilla_relative",
      "summary": "Gas Usage by Vanilla Transactions (Relative)",
      "description": "The relative amount (share) of gas consumed by the Ethereum network by vanilla transactions. Vanilla transactions are pure ETH transfers between Externally Owned Accounts (EOAs), with no contracts being called. Note that occasionally the value of the last datapoint can slightly change as some addresses initially transact as \"vanilla\" before their associated smart contract deployment is observed.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSumVanillaRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_mean",
      "method": "GET",
      "metric": "gas_used_mean",
      "summary": "Gas Used (Mean)",
      "description": "The mean amount of gas used per transaction.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedMean?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_median",
      "method": "GET",
      "metric": "gas_used_median",
      "summary": "Gas Used (Median)",
      "description": "The median amount of gas used per transaction.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedMedian?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_used_sum",
      "method": "GET",
      "metric": "gas_used_sum",
      "summary": "Gas Used (Total)",
      "description": "The total amount of gas used in all transactions.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasUsedSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_limit_tx_mean",
      "method": "GET",
      "metric": "gas_limit_tx_mean",
      "summary": "Transaction Gas Limit (Mean)",
      "description": "The mean gas limit per transaction.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasLimitTxMean?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/fees/gas_limit_tx_median",
      "method": "GET",
      "metric": "gas_limit_tx_median",
      "summary": "Transaction Gas Limit (Median)",
      "description": "The median gas limit per transaction.\n\n[View in Studio](https://studio.glassnode.com/charts/fees.GasLimitTxMedian?a=ETH)\n"
    }
  ],
  "indicators": [
    {
      "path": "/v1/metrics/indicators/cdd90_age_adjusted",
      "method": "GET",
      "metric": "cdd90_age_adjusted",
      "summary": "90D Coin Days Destroyed (CDD-90)",
      "description": "90D Coin Days Destroyed is the 90 day rolling sum of [Coin Days Destroyed (CDD)](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Cdd) and shows the amount of coin days that have been destroyed over the past year. This version is age-adjusted meaning that we normalize by time in order to account for the increasing baseline as time goes by.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Cdd90AgeAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/accumulation_trend_score",
      "method": "GET",
      "metric": "accumulation_trend_score",
      "summary": "Accumulation Trend Score",
      "description": "The Accumulation Trend Score is an indicator that reflects the relative size of entities that are actively accumulating coins on-chain in terms of their BTC holdings. The scale of the Accumulation Trend Score represents both the size of the entities balance (their participation score), and the amount of new coins they have acquired/sold over the last month (their balance change score). An Accumulation Trend Score of closer to 1 indicates that on aggregate, larger entities (or a big part of the network) are accumulating, and a value closer to 0 indicates they are distributing or not accumulating. This provides insight into the balance size of market participants, and their accumulation behavior over the last month. For more information see the metric description in [Glassnode Academy](https://academy.glassnode.com/indicators/accumulation-trend-score).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.AccumulationTrendScore?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/asol",
      "method": "GET",
      "metric": "asol",
      "summary": "ASOL",
      "description": "Average Spent Output Lifespan (ASOL) is the average age (in days) of spent transaction outputs. Outputs with a lifespan of less than 1h are discarded.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Asol?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sopr_adjusted",
      "method": "GET",
      "metric": "sopr_adjusted",
      "summary": "aSOPR",
      "description": "Adjusted SOPR is SOPR ignoring all outputs with a lifespan of less than 1 hour.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SoprAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/aviv",
      "method": "GET",
      "metric": "aviv",
      "summary": "AVIV",
      "description": "The True Market Mean Price, or the Active-Investor Price, is a representative cost basis model for all coins acquired on secondary markets. We argue that this on-chain cost basis is one of the most accurate models available for on-chain analysts seeking the aggregate average on-chain acquisition price by investors, and thus a likely reference point for mean reversion models.\n\nThe True Market Mean Price is calculated as the ratio between the Investor Cap and Active Supply.\n\nGiven the Active Supply represents the economically active supply region, we can thus deduce a new variant of MVRV, comparing the Active Market Cap to the Investor Cap. We propose this to be the True Market Deviation, or otherwise known as the Active-Value-to-Investor-Value (AVIV) Ratio. To date, the AVIV Ratio has shown a long-term mean and median very close to 1.0, providing a robust argument that the True Market Mean Price reflects a market wide cost basis. \n\n  **Coined By** \n\nThis metric was developed within the Cointime Economics framework for Bitcoin. This project was a joint venture between Glassnode and ARK Invest, with full details available in two formats: an overview primer ([Version I published via ARK](https://ark-invest.com/white-papers/cointime-economics)) and a comprehensive guide for specialists ([Version II published via Glassnode](https://get.glassnode.com/cointime-economics/)).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Aviv?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/balanced_price_usd",
      "method": "GET",
      "metric": "balanced_price_usd",
      "summary": "Balanced Price",
      "description": "Balanced Price is the difference between Realized Price and Transfer Price. Transfer Price is the cumulative sum of Coin Days Destroyed in USD, adjusted by circulating supply and total time since Bitcoin&#x27;s inception. Balanced Price attempts to detect major cycle bottoms. This metric was created by [David Puell](https://twitter.com/kenoshaking). For more information see [this article](https://woobull.com/experiments-on-cumulative-destruction/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.BalancedPriceUsd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cdd_supply_adjusted_binary",
      "method": "GET",
      "metric": "cdd_supply_adjusted_binary",
      "summary": "Binary CDD",
      "description": "Binary Coin Days Destroyed (Binary CDD) is computed by thresholding Adjusted CDD by its average over time, i.e. taking the mean destruction over time and asking whether there were more Adjusted CDDs destroyed today than on average. Binary CDD is used in order to minimize the impact of exchange movements, which do not accurately reflect behavior of the long-term holders. This metric was developed by [Hans Hauge](https://twitter.com/hansthered) and [Ikigai](https://twitter.com/Ikigai_fund). For more information see [this post](https://www.kanaandkatana.com/valuation-depot-contents/2019/5/30/exploration-of-bitcoin-days-destroyed).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CddSupplyAdjustedBinary?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/coin_blocks_created",
      "method": "GET",
      "metric": "coin_blocks_created",
      "summary": "Coin Blocks Created (CBC)",
      "description": "Coin Blocks Created (CBC) is calculated by multiplying the value of each coin that has ever existed by the number of blocks the coin was unspent.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CoinBlocksCreated?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/coin_blocks_destroyed",
      "method": "GET",
      "metric": "coin_blocks_destroyed",
      "summary": "Coin Blocks Destroyed",
      "description": "Coin Blocks Destroyed for any given transaction is calculated by taking the number of coins in a transaction and multiplying it by the number of blocks it has been since those coins were last spent.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CoinBlocksDestroyed?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cdd",
      "method": "GET",
      "metric": "cdd",
      "summary": "Coin Days Destroyed (CDD)",
      "description": "Coin Days Destroyed (CDD) for any given transaction is calculated by taking the number of coins in a transaction and multiplying it by the number of days it has been since those coins were last spent.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Cdd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cyd",
      "method": "GET",
      "metric": "cyd",
      "summary": "Coin Years Destroyed (CYD)",
      "description": "Coin Years Destroyed (CYD) is defined as the 365 day rolling sum of [Coin Days Destroyed (CDD)](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Cdd), and shows the amount of coin days that have been destroyed over the past year. It is indicative of long-term holder behaviour. This metric was first put forward by [ARK Invest](https://twitter.com/ARKInvest).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Cyd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cost_basis_distribution_heatmap",
      "method": "GET",
      "metric": "cost_basis_distribution_heatmap",
      "summary": "Cost Basis Distribution Heatmap",
      "description": "The Cost Basis Distribution (CBD) Heatmap provides a detailed visualization of supply density across price levels over a specified period (e.g., 1 month, 1 year). By selecting a time range, this metric displays a heatmap where the y-axis represents the cost basis on a log scale, set from 1 above the maximum price within the chosen period. Each pixel’s color intensity reflects the concentration of supply at that price level, allowing investors to identify where significant portions of the asset supply were acquired. This visualization enables a clearer understanding of how price levels correlate with accumulated supply density, offering insights into potential support and resistance areas based on historical acquisition levels Note - All CBD metrics utilize an address-based approach, analyzing holdings based on individual wallet addresses for consistency across digital assets and comparability across blockchain architectures. This differs from a UTXO-based approach, as used in metrics like URPD, which categorizes supply based on unspent transaction outputs, typically used for chains like Bitcoin. Therefore, metrics for UTXO-based assets may show slight differences when compared across these distinct computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CostBasisDistributionHeatmap?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cost_basis_distribution_quantiles",
      "method": "GET",
      "metric": "cost_basis_distribution_quantiles",
      "summary": "Cost Basis Distribution Quantiles",
      "description": "The Cost Basis Distribution (CBD) Quantiles metric calculates the distribution of realized prices for unspent digital assets by dividing them into 100 quantiles (percentiles) for each day. This metric provides a granular view of where the total supply was acquired, helping investors observe how supply is distributed across different price levels. By examining the quantile lines, investors can identify the proportion of supply that was acquired below the current market price and is potentially at a loss. Additionally, the metric allows users to detect price levels where a higher concentration of supply accumulated, as indicated by denser clustering of quantile lines over a specified time range. This detailed analysis helps investors understand both the current state of unrealized gains or losses and historical patterns of supply concentration.\n\nNote: All CBD metrics utilize an address-based approach, analyzing holdings based on individual wallet addresses for consistency across digital assets and comparability across blockchain architectures. This differs from a UTXO-based approach, as used in metrics like URPD, which categorizes supply based on unspent transaction outputs, typically used for chains like Bitcoin. Therefore, metrics for UTXO-based assets may show slight differences when compared across these distinct computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CostBasisDistributionQuantiles?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cvdd",
      "method": "GET",
      "metric": "cvdd",
      "summary": "CVDD",
      "description": "Cumulative Value-Days Destroyed (CVDD) is the ratio of the cumulative USD value of [Coin Days Destroyed](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Cdd) and the market age (in days). Historically, CVDD has been an accurate indicator for global Bitcoin market bottoms. This metric was created by [Willy Woo](https://twitter.com/woonomic). For more information see [this article](https://woobull.com/experiments-on-cumulative-destruction/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Cvdd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/difficulty_ribbon",
      "method": "GET",
      "metric": "difficulty_ribbon",
      "summary": "Difficulty Ribbon",
      "description": "The Difficulty Ribbon is an indicator that uses simple moving averages (200d, 128d, 90d, 60d, 40d, 25d, 14d) of the Bitcoin [mining difficulty](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;mining.DifficultyLatest) to create the ribbon. Historically, periods when the ribbon compresses have been good buying opportunities. The Difficulty Ribbon was created by [Willy Woo](https://twitter.com/woonomic). For more information read this [article](https://woobull.com/introducing-the-difficulty-ribbon-the-best-times-to-buy-bitcoin/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.DifficultyRibbon?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/difficulty_ribbon_compression",
      "method": "GET",
      "metric": "difficulty_ribbon_compression",
      "summary": "Difficulty Ribbon Compression",
      "description": "[Difficulty Ribbon Compression](https://twitter.com/n3ocortex/status/1290670685933666305) is a market indicator that uses a normalized standard deviation to quantify compression of the [Difficulty Ribbon](https://studio.glassnode.com/metricsmetrics?a&#x3D;BTC&m&#x3D;indicators.DifficultyRibbon). Historically, zones of high compression (low values) have been good buying opportunities. The compression threshold is set here at 0.05.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.DifficultyRibbonCompression?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/average_dormancy",
      "method": "GET",
      "metric": "average_dormancy",
      "summary": "Dormancy",
      "description": "Dormancy is the average number of days destroyed per coin transacted, and is defined as the ratio of coin days destroyed and total transfer volume. This metric was created by [Reginald Smith](https://twitter.com/SupremeVinegar) and [David Puell](https://twitter.com/kenoshaking). Read more in [this article](https://medium.com/adaptivecapital/bitcoin-average-dormancy-28f88ea4c2ce).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.AverageDormancy?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/dormancy_flow",
      "method": "GET",
      "metric": "dormancy_flow",
      "summary": "Dormancy Flow",
      "description": "Dormancy Flow is the ratio of the current market capitalization and the annualized dormancy value (measured in USD). The metric can be used to time market lows and assess whether the bull market remains in relatively normal conditions. It helps confirm whether an asset is in a bullish or bearish primary trend. This metric was put forward by [David Puell](https://twitter.com/kenoshaking). For more information please read his [introductory article](https://medium.com/@kenoshaking/bitcoin-average-dormancy-28f88ea4c2ce).\n\nBTC: Dormancy Flow is the ratio of the current market capitalization and the annualized dormancy value (measured in USD). The metric can be used to time market lows and assess whether the bull market remains in relatively normal conditions. It helps confirm whether an asset is in a bullish or bearish primary trend. This metric was put forward by [David Puell](https://twitter.com/kenoshaking). For more information please read his [introductory article](https://medium.com/@kenoshaking/bitcoin-average-dormancy-28f88ea4c2ce).\n\nThis version is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted Dormancy Flow therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.DormancyFlow?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cyd_account_based_supply_adjusted",
      "method": "GET",
      "metric": "cyd_account_based_supply_adjusted",
      "summary": "Entity- and Supply-Adjusted CYD",
      "description": "Coin Years Destroyed (CYD) is defined as the 365 day rolling sum of [Coin Days Destroyed (CDD)](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Cdd), and shows the amount of coin days that have been destroyed over the past year. It is indicative of long-term holder behaviour. This version is entity-adjusted, meaning that transactions within addresses controlled by the same network participant are discarded (see [this article](https://insights.glassnode.com/account-based-metrics) for more information), as well as supply-adjusted to account for the increasing baseline of the metric over time. This metric was first put forward by [ARK Invest](https://twitter.com/ARKInvest) and further developed by Glassnode by adjusting for the circulating supply.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CydAccountBasedSupplyAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cdd90_account_based_age_adjusted",
      "method": "GET",
      "metric": "cdd90_account_based_age_adjusted",
      "summary": "Entity-Adjusted 90D Coin Days Destroyed (eCDD-90)",
      "description": "90D Coin Days Destroyed is the 90 day rolling sum of [Coin Days Destroyed (CDD)](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Cdd) and shows the amount of coin days that have been destroyed over the past year. This version is entity-adjusted, meaning that transactions within addresses controlled by the same network participant are discarded (see [this article](https://insights.glassnode.com/account-based-metrics) for more information), as well as age-adjusted meaning that we normalize by time in order to account for the increasing baseline as time goes by.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Cdd90AccountBasedAgeAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/asol_account_based",
      "method": "GET",
      "metric": "asol_account_based",
      "summary": "Entity-Adjusted ASOL",
      "description": "Entity-adjusted ASOL is an improved variant of [ASOL](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Asol) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted ASOL therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.AsolAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cdd_account_based",
      "method": "GET",
      "metric": "cdd_account_based",
      "summary": "Entity-Adjusted CDD",
      "description": "Entity-adjusted CDD is an improved variant of [CDD](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Cdd) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted CDD therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CddAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cyd_account_based",
      "method": "GET",
      "metric": "cyd_account_based",
      "summary": "Entity-Adjusted CYD",
      "description": "Coin Years Destroyed (CYD) is defined as the 365 day rolling sum of [Coin Days Destroyed (CDD)](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Cdd), and shows the amount of coin days that have been destroyed over the past year. It is indicative of long-term holder behaviour. This version is entity-adjusted, meaning that transactions within addresses controlled by the same network participant are discarded (see [this article](https://insights.glassnode.com/account-based-metrics) for more information). This metric was first put forward by [ARK Invest](https://twitter.com/ARKInvest).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CydAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/dormancy_account_based",
      "method": "GET",
      "metric": "dormancy_account_based",
      "summary": "Entity-Adjusted Dormancy",
      "description": "Entity-adjusted Dormancy is an improved variant of [Average Coin Dormancy](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.AverageDormancy) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted Dormancy therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.DormancyAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/liveliness_account_based",
      "method": "GET",
      "metric": "liveliness_account_based",
      "summary": "Entity-Adjusted Liveliness",
      "description": "Entity-adjusted Liveliness is an improved variant of [Liveliness](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Liveliness) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted Liveliness therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.LivelinessAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/asol_lth_account_based",
      "method": "GET",
      "metric": "asol_lth_account_based",
      "summary": "Entity-Adjusted Long-Term Holder ASOL",
      "description": "[Long-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Entity-Adjusted ASOL](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.AsolAccountBased). Average Spent Output Lifespan (ASOL) is the average age (in days) of spent transaction outputs. Transactions between addresses of the same entity (\"in-house\" transactions) are discarded. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.AsolLthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cdd_lth_account_based",
      "method": "GET",
      "metric": "cdd_lth_account_based",
      "summary": "Entity-Adjusted Long-Term Holder CDD",
      "description": "[Long-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Entity-Adjusted CDD](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.CddAccountBased). Coin Days Destroyed (CDD) for any given transaction is calculated by taking the number of coins in a transaction and multiplying it by the number of days it has been since those coins were last spent. Transactions between addresses of the same entity (\"in-house\" transactions) are discarded. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CddLthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/dormancy_lth_account_based",
      "method": "GET",
      "metric": "dormancy_lth_account_based",
      "summary": "Entity-Adjusted Long-Term Holder Dormancy",
      "description": "[Long-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Entity-Adjusted Dormancy](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.DormancyAccountBased). Dormancy is the average number of days destroyed per coin transacted, and is defined as the ratio of coin days destroyed and total transfer volume. Transactions between addresses of the same entity (\"in-house\" transactions) are discarded. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.DormancyLthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_loss_lth_account_based",
      "method": "GET",
      "metric": "realized_loss_lth_account_based",
      "summary": "Entity-Adjusted LTH Realized Loss",
      "description": "Entity-Adjusted variant of [Realized Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedLoss) for [Long-Term Holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/), which denotes the total profit (in USD) of all moved coins whose price at their last movement was lower than the price at the current movement. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nVolume transferred between addresses owned by the same entity cluster is excluded. As such, no value is realized during internal or “in-house” transfers.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedLossLthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_loss_lth_to_exchanges_account_based",
      "method": "GET",
      "metric": "realized_loss_lth_to_exchanges_account_based",
      "summary": "Entity-Adjusted LTH Realized Loss to Exchanges",
      "description": "Entity-Adjusted variant of [Realized Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedLoss) for coins that are sent from [Long-Term Holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) to exchanges. Realized loss denotes the total loss (in USD) of all moved coins whose price at their last movement was higher than the price at the current movement. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedLossLthToExchangesAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit_lth_account_based",
      "method": "GET",
      "metric": "realized_profit_lth_account_based",
      "summary": "Entity-Adjusted LTH Realized Profit",
      "description": "Entity-Adjusted variant of [Realized Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedProfit) for [Long-Term Holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/), which denotes the total profit (in USD) of all moved coins whose price at their last movement was lower than the price at the current movement. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nVolume transferred between addresses owned by the same entity cluster is excluded. As such, no value is realized during internal or “in-house” transfers.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitLthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit_lth_to_exchanges_account_based",
      "method": "GET",
      "metric": "realized_profit_lth_to_exchanges_account_based",
      "summary": "Entity-Adjusted LTH Realized Profit to Exchanges",
      "description": "Entity-Adjusted variant of [Realized Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedProfit) for coins that are sent from [Long-Term Holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) to exchanges. Realized profit denotes the total profit (in USD) of all moved coins whose price at their last movement was lower than the price at the current movement. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitLthToExchangesAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/nupl_more_155_account_based",
      "method": "GET",
      "metric": "nupl_more_155_account_based",
      "summary": "Entity-Adjusted LTH-NUPL",
      "description": "Entity-adjusted LTH-NUPL is an improved variant of [Long-Term Holders Net Unrealized Profit/Loss (LTH-NUPL)](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.NuplMore155) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted LTH NUPL therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics). An entity is considered as a Long-Term Holder if the time since its averaged purchasing date is more than 155 days.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.NuplMore155AccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/msol_account_based",
      "method": "GET",
      "metric": "msol_account_based",
      "summary": "Entity-Adjusted MSOL",
      "description": "Entity-adjusted MSOL is an improved variant of [MSOL](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Msol) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted MSOL therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.MsolAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/mvrv_account_based",
      "method": "GET",
      "metric": "mvrv_account_based",
      "summary": "Entity-Adjusted MVRV",
      "description": "Entity-adjusted MVRV is an improved variant of [MVRV Ratio](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;market.Mvrv) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted MVRV therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.MvrvAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/net_unrealized_profit_loss_account_based",
      "method": "GET",
      "metric": "net_unrealized_profit_loss_account_based",
      "summary": "Entity-Adjusted NUPL",
      "description": "Entity-adjusted NUPL is an improved variant of [Net Unrealized Profit/Loss (NUPL)](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.NetUnrealizedProfitLoss) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted NUPL therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.NetUnrealizedProfitLossAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/nvt_entity_adjusted",
      "method": "GET",
      "metric": "nvt_entity_adjusted",
      "summary": "Entity-Adjusted NVT",
      "description": "The Network Value to Transactions (NVT) Ratio is computed by dividing the market cap by the transferred on-chain volume measured in USD. This entity-adjusted version of the NVT Ratio uses [entity-adjusted on-chain volume](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;transactions.TransfersVolumeEntityAdjustedSum) and is therefore more accurate as it accounts for actual economic throughput.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.NvtEntityAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/rcap_account_based",
      "method": "GET",
      "metric": "rcap_account_based",
      "summary": "Entity-Adjusted Realized Cap",
      "description": "Entity-adjusted Realized Cap is an improved variant of [Realized Cap](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;market.PriceRealizedUsd) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted Realized Cap therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RcapAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_loss_account_based",
      "method": "GET",
      "metric": "realized_loss_account_based",
      "summary": "Entity-Adjusted Realized Loss",
      "description": "Entity-Adjusted variant of [Realized Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedLoss), which denotes the total profit (in USD) of all moved coins whose price at their last movement was lower than the price at the current movement.\n\nVolume transferred between addresses owned by the same entity cluster is excluded. As such, no value is realized during internal or “in-house” transfers.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedLossAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_loss_to_exchanges_account_based",
      "method": "GET",
      "metric": "realized_loss_to_exchanges_account_based",
      "summary": "Entity-Adjusted Realized Loss to Exchanges",
      "description": "Entity-Adjusted variant of [Realized Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedLoss) for coins that are sent to exchanges. Realized loss denotes the total loss (in USD) of all moved coins whose price at their last movement was higher than the price at the current movement.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedLossToExchangesAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit_account_based",
      "method": "GET",
      "metric": "realized_profit_account_based",
      "summary": "Entity-Adjusted Realized Profit",
      "description": "Entity-Adjusted variant of [Realized Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedProfit), which denotes the total profit (in USD) of all moved coins whose price at their last movement was lower than the price at the current movement.\n\nVolume transferred between addresses owned by the same entity cluster is excluded. As such, no value is realized during internal or “in-house” transfers.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit_to_exchanges_account_based",
      "method": "GET",
      "metric": "realized_profit_to_exchanges_account_based",
      "summary": "Entity-Adjusted Realized Profit to Exchanges",
      "description": "Entity-Adjusted variant of [Realized Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedProfit) for coins that are sent to exchanges. Realized profit denotes the total profit (in USD) of all moved coins whose price at their last movement was lower than the price at the current movement.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitToExchangesAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/asol_sth_account_based",
      "method": "GET",
      "metric": "asol_sth_account_based",
      "summary": "Entity-Adjusted Short-Term Holder ASOL",
      "description": "[Short-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Entity-Adjusted ASOL](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.AsolAccountBased). Average Spent Output Lifespan (ASOL) is the average age (in days) of spent transaction outputs. Transactions between addresses of the same entity (\"in-house\" transactions) are discarded. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.AsolSthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cdd_sth_account_based",
      "method": "GET",
      "metric": "cdd_sth_account_based",
      "summary": "Entity-Adjusted Short-Term Holder CDD",
      "description": "[Short-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Entity-Adjusted CDD](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.CddAccountBased). Coin Days Destroyed (CDD) for any given transaction is calculated by taking the number of coins in a transaction and multiplying it by the number of days it has been since those coins were last spent. Transactions between addresses of the same entity (\"in-house\" transactions) are discarded. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CddSthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/dormancy_sth_account_based",
      "method": "GET",
      "metric": "dormancy_sth_account_based",
      "summary": "Entity-Adjusted Short-Term Holder Dormancy",
      "description": "[Short-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Entity-Adjusted Dormancy](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.DormancyAccountBased). Dormancy is the average number of days destroyed per coin transacted, and is defined as the ratio of coin days destroyed and total transfer volume. Transactions between addresses of the same entity (\"in-house\" transactions) are discarded. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.DormancySthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sopr_account_based",
      "method": "GET",
      "metric": "sopr_account_based",
      "summary": "Entity-Adjusted SOPR",
      "description": "Entity-adjusted SOPR is an improved variant of [SOPR](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Sopr) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted SOPR therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SoprAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svab_entity_adjusted",
      "method": "GET",
      "metric": "svab_entity_adjusted",
      "summary": "Entity-Adjusted Spent Volume Age Bands (SVAB)",
      "description": "Spent Volume Age Bands (SVAB) is a separation of the on-chain transfer volume based on the coins&#x27; age. Each band represents the percentage of spent volume that was previously moved within the time period denoted in the legend. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvabEntityAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_24h",
      "method": "GET",
      "metric": "svl_entity_adjusted_24h",
      "summary": "Entity-Adjusted Spent Volume Lifespan < 24h",
      "description": "The total transfer volume of coins younger than 24 hours. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted24H?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_more_10y",
      "method": "GET",
      "metric": "svl_entity_adjusted_more_10y",
      "summary": "Entity-Adjusted Spent Volume Lifespan > 10y",
      "description": "The total transfer volume of coins that were last active more than 10 years ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjustedMore10Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_1d_1w",
      "method": "GET",
      "metric": "svl_entity_adjusted_1d_1w",
      "summary": "Entity-Adjusted Spent Volume Lifespan 1d-1w",
      "description": "The total transfer volume of coins that were last active between 1d and 1w ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted1D1W?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_1m_3m",
      "method": "GET",
      "metric": "svl_entity_adjusted_1m_3m",
      "summary": "Entity-Adjusted Spent Volume Lifespan 1m-3m",
      "description": "The total transfer volume of coins that were last active between 1m and 3m ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted1M3M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_1w_1m",
      "method": "GET",
      "metric": "svl_entity_adjusted_1w_1m",
      "summary": "Entity-Adjusted Spent Volume Lifespan 1w-1m ",
      "description": "The total transfer volume of coins that were last active between 1w and 1m ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted1W1M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_1y_2y",
      "method": "GET",
      "metric": "svl_entity_adjusted_1y_2y",
      "summary": "Entity-Adjusted Spent Volume Lifespan 1y-2y",
      "description": "The total transfer volume of coins that were last active between 1y and 2y ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted1Y2Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_2y_3y",
      "method": "GET",
      "metric": "svl_entity_adjusted_2y_3y",
      "summary": "Entity-Adjusted Spent Volume Lifespan 2y-3y",
      "description": "The total transfer volume of coins that were last active between 2y and 3y ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted2Y3Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_3m_6m",
      "method": "GET",
      "metric": "svl_entity_adjusted_3m_6m",
      "summary": "Entity-Adjusted Spent Volume Lifespan 3m-6m",
      "description": "The total transfer volume of coins that were last active between 3m and 6m ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted3M6M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_3y_5y",
      "method": "GET",
      "metric": "svl_entity_adjusted_3y_5y",
      "summary": "Entity-Adjusted Spent Volume Lifespan 3y-5y",
      "description": "The total transfer volume of coins that were last active between 3y and 5y ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted3Y5Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_5y_7y",
      "method": "GET",
      "metric": "svl_entity_adjusted_5y_7y",
      "summary": "Entity-Adjusted Spent Volume Lifespan 5y-7y",
      "description": "The total transfer volume of coins that were last active between 5y and 7y ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted5Y7Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_6m_12m",
      "method": "GET",
      "metric": "svl_entity_adjusted_6m_12m",
      "summary": "Entity-Adjusted Spent Volume Lifespan 6m-12m ",
      "description": "The total transfer volume of coins that were last active between 6m and 12m ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted6M12M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_entity_adjusted_7y_10y",
      "method": "GET",
      "metric": "svl_entity_adjusted_7y_10y",
      "summary": "Entity-Adjusted Spent Volume Lifespan 7y-10y",
      "description": "The total transfer volume of coins that were last active between 7y and 10y ago. This metric is entity-adjusted and discards transactions between addresses of the same entity (\"in-house\" transactions).\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlEntityAdjusted7Y10Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_loss_sth_account_based",
      "method": "GET",
      "metric": "realized_loss_sth_account_based",
      "summary": "Entity-Adjusted STH Realized Loss",
      "description": "Entity-Adjusted variant of [Realized Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedLoss) for [Short-Term Holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/), which denotes the total profit (in USD) of all moved coins whose price at their last movement was lower than the price at the current movement. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nVolume transferred between addresses owned by the same entity cluster is excluded. As such, no value is realized during internal or “in-house” transfers.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedLossSthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_loss_sth_to_exchanges_account_based",
      "method": "GET",
      "metric": "realized_loss_sth_to_exchanges_account_based",
      "summary": "Entity-Adjusted STH Realized Loss to Exchanges",
      "description": "Entity-Adjusted variant of [Realized Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedLoss) for coins that are sent from [Short-Term Holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) to exchanges. Realized loss denotes the total loss (in USD) of all moved coins whose price at their last movement was higher than the price at the current movement. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedLossSthToExchangesAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit_sth_account_based",
      "method": "GET",
      "metric": "realized_profit_sth_account_based",
      "summary": "Entity-Adjusted STH Realized Profit",
      "description": "Entity-Adjusted variant of [Realized Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedProfit) for [Short-Term Holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/), which denotes the total profit (in USD) of all moved coins whose price at their last movement was lower than the price at the current movement. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nVolume transferred between addresses owned by the same entity cluster is excluded. As such, no value is realized during internal or “in-house” transfers.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitSthAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit_sth_to_exchanges_account_based",
      "method": "GET",
      "metric": "realized_profit_sth_to_exchanges_account_based",
      "summary": "Entity-Adjusted STH Realized Profit to Exchanges",
      "description": "Entity-Adjusted variant of [Realized Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedProfit) for coins that are sent from [Short-Term Holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) to exchanges. Realized profit denotes the total profit (in USD) of all moved coins whose price at their last movement was lower than the price at the current movement. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitSthToExchangesAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/nupl_less_155_account_based",
      "method": "GET",
      "metric": "nupl_less_155_account_based",
      "summary": "Entity-Adjusted STH-NUPL",
      "description": "Entity-adjusted STH-NUPL is an improved variant of [Shot-Term Holders Net Unrealized Profit/Loss (STH-NUPL)](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.NuplLess155) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted STH NUPL therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics). An entity is considered as a Short-Term Holder if the time since its averaged purchasing date is less than 155 days.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.NuplLess155AccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/unrealized_loss_account_based",
      "method": "GET",
      "metric": "unrealized_loss_account_based",
      "summary": "Entity-Adjusted Unrealized Loss",
      "description": "Entity-adjusted Relative Unrealized Loss is an improved variant of [Unrealized Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.UnrealizedLoss) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted Relative Unrealized Loss therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UnrealizedLossAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/unrealized_profit_account_based",
      "method": "GET",
      "metric": "unrealized_profit_account_based",
      "summary": "Entity-Adjusted Unrealized Profit",
      "description": "Entity-adjusted Relative Unrealized Profit is an improved variant of [Unrealized Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.UnrealizedProfit) that discards transactions between addresses of the same entity (\"in-house\" transactions). Entity-adjusted Relative Unrealized Proft therefore accounts for real economic activity only, and provides an improved market signal compared to its raw UTXO-based counterpart. For detailed information read this [article](http://insights.glassnode.com/account-based-metrics).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UnrealizedProfitAccountBased?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/urpd_entity_adjusted",
      "method": "GET",
      "metric": "urpd_entity_adjusted",
      "summary": "Entity-Adjusted URPD",
      "description": "UTXO Realized Price Distribution (URPD) shows at which prices the current set of Bitcoin UTXOs were created, i.e. each bar shows the amount of existing bitcoins that last moved within that specified price bucket. This version is entity-adjusted, meaning that for each entity the average purchasing price is used to sort its full balance into a bucket. In this calculation we discard coin movements between addresses controlled by the same entity, as such transfers do not correspond to real purchasing events and would distort the actual mean purchasing price. Further, we exclude all supply that is on exchanges, because a single averaged price for the funds of millions of users would be misleading and give rise to unwanted artifacts in the data.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UrpdEntityAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/fear_greed",
      "method": "GET",
      "metric": "fear_greed",
      "summary": "Fear & Greed Index",
      "description": "The Crypto Fear & Greed Index is an indicator from Alternative.me that aims at capturing investor sentiment in a single number by incorporating data from multiple sources. The index ranges from 0 to 100, where 0 denotes \"extreme fear\", and therefore times of exaggerated negative investor sentiment. On the other hand, 100 means \"extreme greed\" and and is an indication for maximum FOMO.  For a detailed explanation and description of the metrics please refer to the original source at [alternative.me](https://alternative.me/crypto/fear-and-greed-index/).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.FearGreed?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/hash_ribbon",
      "method": "GET",
      "metric": "hash_ribbon",
      "summary": "Hash Ribbon",
      "description": "The Hash Ribbon is a market indicator that assumes that Bitcoin tends to reach a bottom when miners capitulate, i.e. when Bitcoin becomes too expensive to mine relative to the cost of mining. The Hash Ribbon indicates that the worst of the miner capitulation is over when the 30d MA of the hash rate crosses above the 60d MA (switch from light red to dark red areas). Times when this occurs and the price momentum switches from negative to positive have shown to be good buying opportunities (switch from dark red to white). The Hash Ribbon was created by [Charles Edwards](https://twitter.com/caprioleio). For more information read his [introductory article](https://medium.com/capriole/hash-ribbons-bitcoin-bottoms-60da13095836).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.HashRibbon?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/hodled_lost_coins",
      "method": "GET",
      "metric": "hodled_lost_coins",
      "summary": "Hodled or Lost Coins",
      "description": "Lost or HODLed Bitcoins indicates moves of large and old stashes. It is calculated by substracting [Liveliness](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Liveliness) from 1 and multiplying the result by the circulating supply. This metric was first coined by [Adamant Capital](https://twitter.com/Adamant_Capital). For more information see [this article](https://medium.com/@adamant_capital/a-primer-on-bitcoin-investor-sentiment-and-changes-in-saving-behavior-a5fb70109d32).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.HodledLostCoins?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/hodler_net_position_change",
      "method": "GET",
      "metric": "hodler_net_position_change",
      "summary": "Hodler Net Position Change",
      "description": "Hodler Net Position Change shows the monthly position change of long term investors (HODLers). It indicates when HODLers cash out (negative) and when net new positions are accumulated by HODLers. This metric was first coined by [Adamant Capital](https://twitter.com/Adamant_Capital). For more information see [this article](https://medium.com/@adamant_capital/a-primer-on-bitcoin-investor-sentiment-and-changes-in-saving-behavior-a5fb70109d32).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.HodlerNetPositionChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/investor_capitalization",
      "method": "GET",
      "metric": "investor_capitalization",
      "summary": "Investor Capitalization",
      "description": "Investor Capitalization is the difference of [Realized Cap](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;market.MarketcapRealizedUsd) and [Thermocap](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;mining.Thermocap). It discounts the capital paid to miners from the market’s general cost basis, serving as a bottom indicator in bear cycles. This metric was first put forward by [ARK Invest](https://twitter.com/ARKInvest).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.InvestorCapitalization?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/liveliness",
      "method": "GET",
      "metric": "liveliness",
      "summary": "Liveliness",
      "description": "Liveliness is defined as the ratio of the sum of Coin Days Destroyed and the sum of all coin days ever created. Liveliness increases as long term holder liquidate positions and decreases while they accumulate to HODL. This metric was created by [Tamas Blummer](https://twitter.com/TamasBlummer). For a detailed commentary see [this post](https://medium.com/@tamas.blummer/liveliness-of-bitcoin-174001d016da).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Liveliness?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/asol_lth",
      "method": "GET",
      "metric": "asol_lth",
      "summary": "Long-Term Holder ASOL",
      "description": "[Long-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Average Spent Output Lifespan](https://studio.glassnode.com/metrics?a&#x3D;ETH&m&#x3D;indicators.Asol). Long- and Short-Term Holder supply is defined with respect to the [address&#x27; averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.AsolLth?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/indicators/cdd_lth",
      "method": "GET",
      "metric": "cdd_lth",
      "summary": "Long-Term Holder CDD",
      "description": "[Long-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Coin Days Destroyed](https://studio.glassnode.com/metrics?a&#x3D;ETH&m&#x3D;indicators.Cdd). Long- and Short-Term Holder supply is defined with respect to the [address&#x27; averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days. [View in Studio](https://studio.glassnode.com/charts/indicators.CddLth?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_supply_density_more_155",
      "method": "GET",
      "metric": "realized_supply_density_more_155",
      "summary": "LTH Realized Supply Density",
      "description": "The Long-Term Holder Realized Supply Density metric quantifies the concentration of LTH supply (UTXOs with a lifespan of at least 155 days) located around the current spot price at ±5, and ±15%, respectively.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedSupplyDensityMore155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/unrealized_loss_more_155",
      "method": "GET",
      "metric": "unrealized_loss_more_155",
      "summary": "LTH Relative Unrealized Loss",
      "description": "Long Term Holder (LTH) Relative Unrealized Loss is defined as the total loss in USD of all coins in existence whose price at realisation time was higher than the current price normalized by the market cap. Only UTXOs with a lifespan of at least 155 days are taken into account.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UnrealizedLossMore155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/unrealized_profit_more_155",
      "method": "GET",
      "metric": "unrealized_profit_more_155",
      "summary": "LTH Relative Unrealized Profit",
      "description": "Long Term Holder (LTH) Relative Unrealized Profit is defined as the total profit in USD of all coins in existence whose price at realisation time was lower than the current price normalized by the market cap. Only UTXOs with a lifespan of at least 155 days are taken into account.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UnrealizedProfitMore155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/nupl_more_155",
      "method": "GET",
      "metric": "nupl_more_155",
      "summary": "LTH-NUPL",
      "description": "Long Term Holder NUPL (LTH-NUPL) is Net Unrealized Profit/Loss that takes into account only UTXOs with a lifespan of at least 155 days and serves as an indicator to assess the behaviour of long term investors. For more information see [this article](https://insights.glassnode.com/sth-lth-sopr-mvrv).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.NuplMore155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sopr_more_155",
      "method": "GET",
      "metric": "sopr_more_155",
      "summary": "LTH-SOPR",
      "description": "Long Term Holder SOPR (LTH-SOPR) is SOPR that takes into account only spent outputs with a lifespan of at least 155 days and serves as an indicator to assess the behaviour of long term investors. For more information see [this article](https://insights.glassnode.com/sth-lth-sopr-mvrv).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SoprMore155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/msol",
      "method": "GET",
      "metric": "msol",
      "summary": "MSOL",
      "description": "Median Spent Output Lifespan (MSOL) is the median age (in days) of spent transaction outputs. Outputs with a lifespan of less than 1h are discarded.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Msol?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/net_realized_profit_loss",
      "method": "GET",
      "metric": "net_realized_profit_loss",
      "summary": "Net Realized Profit/Loss",
      "description": "Net Realized Profit/Loss is the net profit or loss of all moved coins, and is defined by the difference of [Realized Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedProfit) - [Realized Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedLoss).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.NetRealizedProfitLoss?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/net_unrealized_profit_loss",
      "method": "GET",
      "metric": "net_unrealized_profit_loss",
      "summary": "Net Unrealized Profit/Loss (NUPL)",
      "description": "Net Unrealized Profit/Loss is the difference between Relative Unrealized Profit and Relative Unrealized Loss. For more information see [this article](https://medium.com/glassnode-insights/dissecting-bitcoins-unrealised-on-chain-profit-loss-73e735020c8d). This metric can also be calculated by subtracting realised cap from market cap, and dividing the result by the market cap as described in [this article](https://medium.com/@adamant_capital/a-primer-on-bitcoin-investor-sentiment-and-changes-in-saving-behavior-a5fb70109d32).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.NetUnrealizedProfitLoss?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/nvt",
      "method": "GET",
      "metric": "nvt",
      "summary": "NVT Ratio",
      "description": "The Network Value to Transactions (NVT) Ratio is computed by dividing the market cap by the transferred on-chain volume measured in USD. The NVT Ratio was created by [Willy Woo](https://twitter.com/woonomic).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Nvt?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/nvts",
      "method": "GET",
      "metric": "nvts",
      "summary": "NVT Signal",
      "description": "The NVT Signal (NVTS) is a modified version of the original NVT Ratio. It uses a 90 day moving average of the daily transaction volume in the denominator instead of the raw daily transaction volume. This moving average improves the ratio to better function as a leading indicator.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Nvts?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/pi_cycle_top",
      "method": "GET",
      "metric": "pi_cycle_top",
      "summary": "Pi Cycle Top Indicator",
      "description": "The Pi Cycle indicators is composed of the 111 day moving average (111SMA) and a 2x multiple of the 350 day moving average (350SMA x 2) of the asset&#x27;s price. This metric shows when an asset becomes significantly overheated (the shorter MA reaches the levels of the larger MA), and has historically been a good indicator for cycle tops. This metric was first put forward by [Philip Swift](https://twitter.com/PositiveCrypto).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.PiCycleTop?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/leverage_position_closures",
      "method": "GET",
      "metric": "leverage_position_closures",
      "summary": "Position Closures",
      "description": "Quantifies the closure of existing long and short futures positions by analyzing trend alignment between 7-day moving averages of price and open interest (OI) percentage changes. See [this article](https://insights.glassnode.com/leverage-position-openings-and-closures/) for insights into this metric and its use cases.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.LeveragePositionClosures?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/leverage_position_closures_scaled",
      "method": "GET",
      "metric": "leverage_position_closures_scaled",
      "summary": "Position Closures Scaled",
      "description": "Quantifies the closure of existing long and short futures positions by analyzing trend alignment between 7-day moving averages of price and open interest (OI) percentage changes, normalized using 90-day z-scores to enable comparison of positioning between the long and short side. See [this article](https://insights.glassnode.com/leverage-position-openings-and-closures/) for insights into this metric and its use cases.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.LeveragePositionClosuresScaled?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/leverage_position_openings",
      "method": "GET",
      "metric": "leverage_position_openings",
      "summary": "Position Openings",
      "description": "Quantifies the opening of new long and short futures positions by analyzing trend alignment between 7-day moving averages of price and open interest (OI) percentage changes. See [this article](https://insights.glassnode.com/leverage-position-openings-and-closures/) for insights into this metric and its use cases.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.LeveragePositionOpenings?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/leverage_position_openings_scaled",
      "method": "GET",
      "metric": "leverage_position_openings_scaled",
      "summary": "Position Openings Scaled",
      "description": "Quantifies the opening of new long and short futures positions by analyzing trend alignment between 7-day moving averages of price and open interest (OI) percentage changes, normalized using 90-day z-scores to enable comparison of positioning between the long and short side. See [this article](https://insights.glassnode.com/leverage-position-openings-and-closures/) for insights into this metric and its use cases.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.LeveragePositionOpeningsScaled?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/power_law",
      "method": "GET",
      "metric": "power_law",
      "summary": "Power-Law Model",
      "description": "The Bitcoin Power-Law Model provides a mathematical description of Bitcoin&#x27;s historical price trends, revealing a power-law distribution on a log-log scale. This analysis suggests a correlation between time and price. However, the model&#x27;s foundation on historical data and the issue of non-independent sequential price points raise questions about its broader applicability. \n\nThe model&#x27;s fit (price &#x3D; exp(5.71*ln(days) -38.16)), using days since Bitcoin&#x27;s inception as the x-axis and price data until March 21, 2024, shows a high coefficient of determination (R2 &#x3D;0.953), reflecting a strong historical correlation. Yet, this retrospective analysis lacks predictive power for future market behavior due to its assumptions and the stochastic nature of financial markets in general. Thus, while offering valuable insights into Bitcoin&#x27;s past growth, the model&#x27;s applicability to forecast future movements is limited and should be approached with caution. This metric was first coined by [@Giovann35084111](https://twitter.com/Giovann35084111).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.PowerLaw?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/puell_multiple",
      "method": "GET",
      "metric": "puell_multiple",
      "summary": "Puell Multiple",
      "description": "The Puell Multiple is calculated by dividing the daily issuance value of bitcoins (in USD) by the 365-day moving average of daily issuance value. This metric was created by [David Puell](https://twitter.com/kenoshaking). For a detailed description see [this article](https://medium.com/unconfiscatable/the-puell-multiple-bed755cfe358) by [@cryptopoiesis](https://twitter.com/cryptopoiesis).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.PuellMultiple?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_loss",
      "method": "GET",
      "metric": "realized_loss",
      "summary": "Realized Loss",
      "description": "Realized Loss denotes the total loss (USD value) of all moved coins whose price at their last movement was higher than the price at the current movement.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedLoss?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit_loss_ratio",
      "method": "GET",
      "metric": "realized_profit_loss_ratio",
      "summary": "Realized P/L Ratio",
      "description": "Realized Profit/Loss Ratio is the ratio between all coins moved at a profit and at a loss, i.e. [Realized Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedProfit) / [Realized Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedLoss).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitLossRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit",
      "method": "GET",
      "metric": "realized_profit",
      "summary": "Realized Profit",
      "description": "Realized Profit denotes the total profit (USD value) of all moved coins whose price at their last movement was lower than the price at the current movement.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfit?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profits_to_value_ratio",
      "method": "GET",
      "metric": "realized_profits_to_value_ratio",
      "summary": "Realized Profits-to-Value (RPV) Ratio",
      "description": "The Realized Profits-to-Value Ratio (RPV) is defined as the ratio of [Realized Profits](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.RealizedProfit) and [Realized Cap](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;market.MarketcapRealizedUsd). This metric compares profit-taking in the market with its overall cost basis on a dollar-to-dollar basis. This metric was first put forward by [ARK Invest](https://twitter.com/ARKInvest).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitsToValueRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_supply_density",
      "method": "GET",
      "metric": "realized_supply_density",
      "summary": "Realized Supply Density",
      "description": "The Realized Supply Density metric quantifies the concentration of supply located around the current spot price at ±5, and ±15%, respectively. A large concentration of supply around the current spot price suggests that fluctuations in price action can drastically affect the profitability of many investors, heightening the likelihood of market volatility. Coined by UkuriaOC.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedSupplyDensity?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_supply_density_dynamic",
      "method": "GET",
      "metric": "realized_supply_density_dynamic",
      "summary": "Realized Supply Density Dynamic",
      "description": "The proportion of Bitcoin supply whose cost basis lies within a dynamic price band, where the width of that band is defined by the cumulative standard deviation of 1-day returns.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedSupplyDensityDynamic?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit_loss_lth_sth_relative",
      "method": "GET",
      "metric": "realized_profit_loss_lth_sth_relative",
      "summary": "Relative LTH/STH Realized Profit/Loss",
      "description": "Relative distribution of the total profit and loss (USD value) of all coins moved by [long- and short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/). Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nVolume transferred between addresses owned by the same entity cluster is excluded. As such, no value is realized during internal or “in-house” transfers.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitLossLthSthRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_profit_loss_lth_sth_to_exchanges_relative",
      "method": "GET",
      "metric": "realized_profit_loss_lth_sth_to_exchanges_relative",
      "summary": "Relative LTH/STH Realized Profit/Loss to Exchanges",
      "description": "Relative distribution of the total profit and loss (USD value) of all coins moved by [long- and short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) to exchanges. Realized profit/loss denotes the total profit/loss (in USD) of all moved coins whose price at their last movement was lower/higher than the price at the current movement. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedProfitLossLthSthToExchangesRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/spent_outputs_by_date_bands_relative",
      "method": "GET",
      "metric": "spent_outputs_by_date_bands_relative",
      "summary": "Relative Outputs by Date Bands",
      "description": "This metric shows a breakdown of the relative spent transaction outputs by date bands. Each date band refers to the date when the UTXO was created. The metric is similar to Spent Output Age Bands (SOAB), however it uses absolute date ranges instead of floating time periods.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SpentOutputsByDateBandsRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/unrealized_loss",
      "method": "GET",
      "metric": "unrealized_loss",
      "summary": "Relative Unrealized Loss",
      "description": "Relative Unrealized Loss is defined as the total loss in USD of all coins in existence whose price at realisation time was higher than the current price normalized by the market cap. For more information see [this article](https://medium.com/glassnode-insights/dissecting-bitcoins-unrealised-on-chain-profit-loss-73e735020c8d).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UnrealizedLoss?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/unrealized_profit",
      "method": "GET",
      "metric": "unrealized_profit",
      "summary": "Relative Unrealized Profit",
      "description": "Relative Unrealized Profit is defined as the total profit in USD of all coins in existence whose price at realisation time was lower than the current price normalized by the market cap. For more information see [this article](https://medium.com/glassnode-insights/dissecting-bitcoins-unrealised-on-chain-profit-loss-73e735020c8d).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UnrealizedProfit?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/spent_volume_by_date_bands_relative",
      "method": "GET",
      "metric": "spent_volume_by_date_bands_relative",
      "summary": "Relative Volume by Date Bands",
      "description": "This metric shows a breakdown of the relative spent volume by date bands. Each date band refers to the date when the UTXO was created. The metric is similar to Spent Volume Age Bands (SVAB), however it uses absolute date ranges instead of floating time periods.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SpentVolumeByDateBandsRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/reserve_risk",
      "method": "GET",
      "metric": "reserve_risk",
      "summary": "Reserve Risk",
      "description": "Reserve Risk is defined as price / HODL Bank. It is used to assess the confidence of long-term holders relative to the price of the native coin at any given point in time. When confidence is high and price is low, there is an attractive risk/reward to invest (Reserve Risk is low). When confidence is low and price is high then risk/reward is unattractive at that time (Reserve Risk is high).\n\nThis metric was created by [@hansthered](https://twitter.com/hansthered). For more information see [this article](https://www.kanaandkatana.com/valuation-depot-contents/2019/5/30/exploration-of-bitcoin-days-destroyed).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.ReserveRisk?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/rhodl_ratio",
      "method": "GET",
      "metric": "rhodl_ratio",
      "summary": "RHODL Ratio",
      "description": "The Realized HODL Ratio is a market indicator that uses a ratio of the [Realized Cap HODL Waves](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;supply.RcapHodlWaves). In particular, the RHODL Ratio takes the ratio between the 1 week and the 1-2 years RCap HODL bands. In addition, it accounts for increased supply by weighting the ratio by the total market age. A high ratio is an indication of an overheated market and can be used to time cycle tops. This metric was created by [Philip Swift](https://twitter.com/PositiveCrypto).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RhodlRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/seller_exhaustion_constant",
      "method": "GET",
      "metric": "seller_exhaustion_constant",
      "summary": "Seller Exhaustion Constant",
      "description": "Seller Exhaustion Constant is defined as the product of the [Percentage Supply in Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;supply.ProfitRelative) and 30-day price volatility. It detects when two factors co-align: low volatility and high losses, or, in other words, low risk bottoms. This metric was first put forth by [ARK Invest](https://twitter.com/ARKInvest).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SellerExhaustionConstant?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/asol_sth",
      "method": "GET",
      "metric": "asol_sth",
      "summary": "Short-Term Holder ASOL",
      "description": "[Short-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Average Spent Output Lifespan](https://studio.glassnode.com/metrics?a&#x3D;ETH&m&#x3D;indicators.Asol). Long- and Short-Term Holder supply is defined with respect to the [address&#x27; averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.AsolSth?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/indicators/cdd_sth",
      "method": "GET",
      "metric": "cdd_sth",
      "summary": "Short-Term Holder CDD",
      "description": "[Short-Term Holder](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) variant of [Coin Days Destroyed](https://studio.glassnode.com/metrics?a&#x3D;ETH&m&#x3D;indicators.Cdd). Long- and Short-Term Holder supply is defined with respect to the [address&#x27; averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CddSth?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/indicators/spent_output_price_distribution_ath",
      "method": "GET",
      "metric": "spent_output_price_distribution_ath",
      "summary": "SOPD (ATH-Partitioned)",
      "description": "The metric Spent Output Price Distribution (SOPD), initially developed for UTXO-based blockchains, shows at which prices UTXOs were spent on a given day. The version presented here is a generalization of this concept, which can be applied to account-based chains as well. For more details see our introduction article [here](https://insights.glassnode.com/account-based-metrics/). Each bar shows the amount of  volume that was moved within that specified price bucket. The price specified on the x-axis refers to the lower bound of that bucket. ATH-partitioned means that the price buckets are defined by dividing the range between 0 and the current ATH in 100 equally-spaced partitions.\n\nBTC: Spent Output Price Distribution (SOPD) shows at which prices Bitcoin UTXOs were spent on a given day, i.e. each bar shows the amount of BTC volume that was moved within that specified price bucket. The price specified on the x-axis refers to the lower bound of that bucket. ATH-partitioned means that the price buckets are defined by dividing the range between 0 and the current ATH in 100 equally-spaced partitions.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SpentOutputPriceDistributionAth?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/spent_output_price_distribution_percent",
      "method": "GET",
      "metric": "spent_output_price_distribution_percent",
      "summary": "SOPD (Percent-Partitioned)",
      "description": "The metric Spent Output Price Distribution (SOPD), initially developed for UTXO-based blockchains, shows at which prices UTXOs were spent on a given day. The version presented here is a generalization of this concept, which can be applied to account-based chains as well. For more details see our introduction article [here](https://insights.glassnode.com/account-based-metrics/). Each bar shows the amount of  volume that was moved within that specified price bucket. The price specified on the x-axis refers to the lower bound of that bucket. .\n\nBTC: Spent Output Price Distribution (SOPD) shows at which prices UTXOs were spent that day, i.e. each bar shows the amount of  volume that was moved within that specified price bucket. The price specified on the x-axis refers to the lower bound of that bucket. .\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SpentOutputPriceDistributionPercent?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sopr",
      "method": "GET",
      "metric": "sopr",
      "summary": "SOPR",
      "description": "The Spent Output Profit Ratio (SOPR) is computed by dividing the realized value (in USD) divided by the value at creation (USD) of a spent output. Or simply: price sold / price paid. This metric was created by [Renato Shirakashi](https://twitter.com/renato_shira). For a detailed commentary see [this post](https://medium.com/unconfiscatable/introducing-sopr-spent-outputs-to-predict-bitcoin-lows-and-tops-ceb4536b3b9)\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sopr?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/soab",
      "method": "GET",
      "metric": "soab",
      "summary": "Spent Output Age Bands",
      "description": "Spent Output Age Bands is a bundle of all spent outputs that were created within a specified age band. Each line represents the percentage of spent outputs that were created within the time period denoted in the legend.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Soab?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_1h",
      "method": "GET",
      "metric": "sol_1h",
      "summary": "Spent Outputs < 1h",
      "description": "The total number of spent outputs that were created within the last hour.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol1H?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_more_10y",
      "method": "GET",
      "metric": "sol_more_10y",
      "summary": "Spent Outputs > 10y",
      "description": "The total number of spent outputs that were created more than 10 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SolMore10Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_1d_1w",
      "method": "GET",
      "metric": "sol_1d_1w",
      "summary": "Spent Outputs 1d-1w",
      "description": "The total number of spent outputs that were created between 1 day and 1 week ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol1D1W?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_1h_24h",
      "method": "GET",
      "metric": "sol_1h_24h",
      "summary": "Spent Outputs 1h-24h",
      "description": "The total number of spent outputs that were created between 1 hour and 24 hours ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol1H24H?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_1m_3m",
      "method": "GET",
      "metric": "sol_1m_3m",
      "summary": "Spent Outputs 1m-3m",
      "description": "The total number of spent outputs that were created between 1 month and 3 months ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol1M3M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_1w_1m",
      "method": "GET",
      "metric": "sol_1w_1m",
      "summary": "Spent Outputs 1w-1m",
      "description": "The total number of spent outputs that were created between 1 week and 1 month ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol1W1M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_1y_2y",
      "method": "GET",
      "metric": "sol_1y_2y",
      "summary": "Spent Outputs 1y-2y",
      "description": "The total number of spent outputs that were created between 1 year and 2 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol1Y2Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_2y_3y",
      "method": "GET",
      "metric": "sol_2y_3y",
      "summary": "Spent Outputs 2y-3y",
      "description": "The total number of spent outputs that were created between 2 years and 3 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol2Y3Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_3m_6m",
      "method": "GET",
      "metric": "sol_3m_6m",
      "summary": "Spent Outputs 3m-6m",
      "description": "The total number of spent outputs that were created between 3 months and 6 months ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol3M6M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_3y_5y",
      "method": "GET",
      "metric": "sol_3y_5y",
      "summary": "Spent Outputs 3y-5y",
      "description": "The total number of spent outputs that were created between 3 years and 5 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol3Y5Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_5y_7y",
      "method": "GET",
      "metric": "sol_5y_7y",
      "summary": "Spent Outputs 5y-7y",
      "description": "The total number of spent outputs that were created between 5 years and 7 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol5Y7Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_6m_12m",
      "method": "GET",
      "metric": "sol_6m_12m",
      "summary": "Spent Outputs 6m-12m",
      "description": "The total number of spent outputs that were created between 6 months and 12 months ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol6M12M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sol_7y_10y",
      "method": "GET",
      "metric": "sol_7y_10y",
      "summary": "Spent Outputs 7y-10y",
      "description": "The total number of spent outputs that were created between 7 years and 10 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Sol7Y10Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/spent_outputs_by_date_bands",
      "method": "GET",
      "metric": "spent_outputs_by_date_bands",
      "summary": "Spent Outputs by Date Bands",
      "description": "This metric shows a breakdown of the spent transaction outputs by date bands. Each date band refers to the date when the UTXO was created. The metric is similar to Spent Output Age Bands (SOAB), however it uses absolute date ranges instead of floating time periods.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SpentOutputsByDateBands?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/spent_supply_distribution_quantiles",
      "method": "GET",
      "metric": "spent_supply_distribution_quantiles",
      "summary": "Spent Supply Distribution Quantiles",
      "description": "The Spent Supply Distribution (SSD) Quantiles metric calculates the distribution of the cost basis for spent supply at a given timestamp, dividing it into 100 quantiles (percentiles). This metric offers a detailed view of the price levels at which digital assets were originally acquired before being spent, helping to illustrate the cost basis distribution of the supply currently moving in the market. By analyzing the quantile lines, investors can observe the typical acquisition prices of assets being sold, identifying price levels with increased activity and providing insights into areas where profit-taking or loss realization may be concentrated. This information aids in understanding the dynamics of supply turnover relative to historical acquisition costs.\n\nNote: All CBD and SSD metrics utilize an address-based approach, analyzing holdings based on individual wallet addresses for consistency across digital assets and comparability across blockchain architectures. This differs from a UTXO-based approach, as used in metrics like URPD, which categorizes supply based on unspent transaction outputs, typically used for chains like Bitcoin. Therefore, metrics for UTXO-based assets may show slight differences when compared across these distinct computational methods.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SpentSupplyDistributionQuantiles?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_1h",
      "method": "GET",
      "metric": "svl_1h",
      "summary": "Spent Volume < 1h",
      "description": "The total transfer volume of coins younger than one hour.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl1H?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_more_10y",
      "method": "GET",
      "metric": "svl_more_10y",
      "summary": "Spent Volume > 10y",
      "description": "The total transfer volume of coins that were last active more than 10 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SvlMore10Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_1d_1w",
      "method": "GET",
      "metric": "svl_1d_1w",
      "summary": "Spent Volume 1d-1w",
      "description": "The total transfer volume of coins that were last active between 1d and 1w ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl1D1W?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_1h_24h",
      "method": "GET",
      "metric": "svl_1h_24h",
      "summary": "Spent Volume 1h-24h",
      "description": "The total transfer volume of coins that were last active between 1h and  24 hours ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl1H24H?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_1m_3m",
      "method": "GET",
      "metric": "svl_1m_3m",
      "summary": "Spent Volume 1m-3m",
      "description": "The total transfer volume of coins that were last active between 1m and 3m ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl1M3M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_1w_1m",
      "method": "GET",
      "metric": "svl_1w_1m",
      "summary": "Spent Volume 1w-1m",
      "description": "The total transfer volume of coins that were last active between 1w and 1m ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl1W1M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_1y_2y",
      "method": "GET",
      "metric": "svl_1y_2y",
      "summary": "Spent Volume 1y-2y",
      "description": "The total transfer volume of coins that were last active between 1y and 2y ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl1Y2Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_2y_3y",
      "method": "GET",
      "metric": "svl_2y_3y",
      "summary": "Spent Volume 2y-3y",
      "description": "The total transfer volume of coins that were last active between 2y and 3y ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl2Y3Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_3m_6m",
      "method": "GET",
      "metric": "svl_3m_6m",
      "summary": "Spent Volume 3m-6m",
      "description": "The total transfer volume of coins that were last active between 3m and 6m ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl3M6M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_3y_5y",
      "method": "GET",
      "metric": "svl_3y_5y",
      "summary": "Spent Volume 3y-5y",
      "description": "The total transfer volume of coins that were last active between 3y and 5y ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl3Y5Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_5y_7y",
      "method": "GET",
      "metric": "svl_5y_7y",
      "summary": "Spent Volume 5y-7y",
      "description": "The total transfer volume of coins that were last active between 5y and 7y ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl5Y7Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_6m_12m",
      "method": "GET",
      "metric": "svl_6m_12m",
      "summary": "Spent Volume 6m-12m",
      "description": "The total transfer volume of coins that were last active between 6m and 12m ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl6M12M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svl_7y_10y",
      "method": "GET",
      "metric": "svl_7y_10y",
      "summary": "Spent Volume 7y-10y",
      "description": "The total transfer volume of coins that were last active between 7y and 10y ago.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svl7Y10Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/svab",
      "method": "GET",
      "metric": "svab",
      "summary": "Spent Volume Age Bands (SVAB)",
      "description": "Spent Volume Age Bands (SVAB) is a separation of the on-chain transfer volume based on the coins&#x27; age. Each band represents the percentage of spent volume that was previously moved within the time period denoted in the legend.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Svab?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/spent_volume_by_date_bands",
      "method": "GET",
      "metric": "spent_volume_by_date_bands",
      "summary": "Spent Volume by Date Bands",
      "description": "This metric shows a breakdown of the spent volume by date bands. Each date band refers to the date when the UTXO was created. The metric is similar to Spent Volume Age Bands (SVAB), however it uses absolute date ranges instead of floating time periods.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SpentVolumeByDateBands?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/ssr",
      "method": "GET",
      "metric": "ssr",
      "summary": "Stablecoin Supply Ratio (SSR)",
      "description": "The Stablecoin Supply Ratio (SSR) is the ratio between Bitcoin supply and the supply of stablecoins denoted in BTC, or: Bitcoin Market cap / Stablecoin Market cap. We use the following stablecoins for the supply: USDT, TUSD, USDC, USDP, GUSD, DAI, SAI, and BUSD. When the SSR is low, the current stablecoin supply has more \"buying power\" to purchase BTC. It serves as a proxy for the supply/demand mechanics between BTC and USD. For more information see [this article](https://medium.com/@glassnode/stablecoins-buying-power-over-bitcoin-3475c0d8779d).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Ssr?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/ssr_oscillator",
      "method": "GET",
      "metric": "ssr_oscillator",
      "summary": "Stablecoin Supply Ratio (SSR) Oscillator",
      "description": "The Stablecoin Oscillator is derived from the [Stablecoin Supply Ratio (SSR)](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;indicators.Ssr), and quantifies how the 200d SMA of the SSR moves within the Bollinger Bands BB(200, 2). This metric was first put forward by [Willy Woo](https://twitter.com/woonomic). For more information on the SSR see [this article](https://medium.com/@glassnode/stablecoins-buying-power-over-bitcoin-3475c0d8779d).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SsrOscillator?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/realized_supply_density_less_155",
      "method": "GET",
      "metric": "realized_supply_density_less_155",
      "summary": "STH Realized Supply Density",
      "description": "The Short-Term Holder Realized Supply Density metric quantifies the concentration of STH supply (UTXOs that are younger than 155 days) located around the current spot price at ±5, and ±15%, respectively.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.RealizedSupplyDensityLess155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/unrealized_loss_less_155",
      "method": "GET",
      "metric": "unrealized_loss_less_155",
      "summary": "STH Relative Unrealized Loss",
      "description": "Short Term Holder (STH) Relative Unrealized Loss is defined as the total loss in USD of all coins in existence whose price at realisation time was higher than the current price normalized by the market cap. Only UTXOs with a lifespan of at most 155 days are taken into account.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UnrealizedLossLess155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/unrealized_profit_less_155",
      "method": "GET",
      "metric": "unrealized_profit_less_155",
      "summary": "STH Relative Unrealized Profit",
      "description": "Short Term Holder (STH) Relative Unrealized Profit is defined as the total profit in USD of all coins in existence whose price at realisation time was lower than the current price normalized by the market cap. Only UTXOs with a lifespan of at most 155 days are taken into account.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UnrealizedProfitLess155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/nupl_less_155",
      "method": "GET",
      "metric": "nupl_less_155",
      "summary": "STH-NUPL",
      "description": "Short Term Holder NUPL (STH-NUPL) is Net Unrealized Profit/Loss that takes into account only UTXOs younger than 155 days and serves as an indicator to assess the behaviour of short term investors. For more information see [this article](https://insights.glassnode.com/sth-lth-sopr-mvrv).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.NuplLess155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/sopr_less_155",
      "method": "GET",
      "metric": "sopr_less_155",
      "summary": "STH-SOPR",
      "description": "Short Term Holder SOPR (STH-SOPR) is SOPR that takes into account only spent outputs younger than 155 days and serves as an indicator to assess the behaviour of short term investors. For more information see [this article](https://insights.glassnode.com/sth-lth-sopr-mvrv).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.SoprLess155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/stock_to_flow_deflection",
      "method": "GET",
      "metric": "stock_to_flow_deflection",
      "summary": "Stock-to-Flow Deflection",
      "description": "The Stock to Flow (S/F) Deflection is the ratio between the current Bitcoin price and the [S/F model](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.StockToFlowRatio). If deflection is ≥ 1 it means that Bitcoin is overvalued according to the S/F model, otherwise undervalued.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.StockToFlowDeflection?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/stock_to_flow_ratio",
      "method": "GET",
      "metric": "stock_to_flow_ratio",
      "summary": "Stock-to-Flow Ratio",
      "description": "The Stock to Flow (S/F) Ratio is a popular model that assumes that scarcity drives value. Stock to Flow is defined as the ratio of the current stock of a commodity (i.e. circulating Bitcoin supply) and the flow of new production (i.e. newly mined bitcoins). Bitcoin&#x27;s price has historically followed the S/F Ratio and therefore it is a model that can be used to predict future Bitcoin valuations. This metric was first coined by [PlanB](https://twitter.com/100trillionUSD). For a detailed description see this [article](https://medium.com/@100trillionUSD/modeling-bitcoins-value-with-scarcity-91fa0fc03e25).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.StockToFlowRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cdd_supply_adjusted",
      "method": "GET",
      "metric": "cdd_supply_adjusted",
      "summary": "Supply-Adjusted CDD",
      "description": "Adjusted Coin Days Destroyed simply divides CDD by the circulating supply (total amount of coins issued). Adjusted CDD more accurately represents the quantity of native coins sold by long-term holders over time.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CddSupplyAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/cyd_supply_adjusted",
      "method": "GET",
      "metric": "cyd_supply_adjusted",
      "summary": "Supply-Adjusted CYD",
      "description": "Coin Years Destroyed (CYD) is defined as the 365 day rolling sum of [Coin Days Destroyed (CDD)](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;indicators.Cdd), and shows the amount of coin days that have been destroyed over the past year. It is indicative of long-term holder behaviour. This version is supply-adjusted to account for the increasing baseline of the metric over time. This metric was first put forward by [ARK Invest](https://twitter.com/ARKInvest) and further developed by Glassnode by adjusting for the circulating supply.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.CydSupplyAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/average_dormancy_supply_adjusted",
      "method": "GET",
      "metric": "average_dormancy_supply_adjusted",
      "summary": "Supply-Adjusted Dormancy",
      "description": "Dormancy is the average number of days destroyed per coin transacted, and is defined as the ratio of coin days destroyed and total transfer volume. This metric was created by [Reginald Smith](https://twitter.com/SupremeVinegar) and [David Puell](https://twitter.com/kenoshaking). Read more in [this article](https://medium.com/adaptivecapital/bitcoin-average-dormancy-28f88ea4c2ce).\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.AverageDormancySupplyAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/utxo_realized_price_distribution_ath",
      "method": "GET",
      "metric": "utxo_realized_price_distribution_ath",
      "summary": "URPD (ATH-Partitioned)",
      "description": "The metric UTXO Realized Price Distribution (URPD), initially developed for UTXO-based blockchains, shows at which prices the current supply was created. The version presented here is a generalization of this concept, which can be applied to account-based chains as well. For more details see our introduction article [here](https://insights.glassnode.com/account-based-metrics/). Each bar shows the amount of supply that was last moved within that specified price bucket. The price specified on the x-axis refers to the lower bound of that bucket. ATH-partitioned means that the price buckets are defined by dividing the range between 0 and the current ATH in 100 equally-spaced partitions.\n\nBTC: UTXO Realized Price Distribution (URPD) shows at which prices the current set of Bitcoin UTXOs were created, i.e. each bar shows the amount of existing bitcoins that last moved within that specified price bucket. The price specified on the x-axis refers to the lower bound of that bucket. ATH-partitioned means that the price buckets are defined by dividing the range between 0 and the current ATH in 100 equally-spaced partitions.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UtxoRealizedPriceDistributionAth?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/utxo_realized_price_distribution_percent",
      "method": "GET",
      "metric": "utxo_realized_price_distribution_percent",
      "summary": "URPD (Percent-Partitioned)",
      "description": "The metric UTXO Realized Price Distribution (URPD), initially developed for UTXO-based blockchains, shows at which prices the current supply was created. The version presented here is a generalization of this concept, which can be applied to account-based chains as well. For more details see our introduction article [here](https://insights.glassnode.com/account-based-metrics/). Each bar shows the amount of supply that was last moved within that specified price bucket. The price specified on the x-axis refers to the lower bound of that bucket. .\n\nBTC: UTXO Realized Price Distribution (URPD) shows at which prices the current set of Bitcoin UTXOs were created, i.e. each bar shows the amount of existing bitcoins that last moved within that specified price bucket. The price specified on the x-axis refers to the lower bound of that bucket. .\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.UtxoRealizedPriceDistributionPercent?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/indicators/velocity",
      "method": "GET",
      "metric": "velocity",
      "summary": "Velocity",
      "description": "Velocity is a measure of how quickly units are circulating in the network and is calculated by dividing the on-chain transaction volume (in USD) by the market cap, i.e. the inverse of the NVT ratio.\n\n[View in Studio](https://studio.glassnode.com/charts/indicators.Velocity?a=BTC)\n"
    }
  ],
  "institutions": [
    {
      "path": "/v1/metrics/institutions/purpose_etf_aum_sum",
      "method": "GET",
      "metric": "purpose_etf_aum_sum",
      "summary": "Purpose Bitcoin ETF AUM",
      "description": "The total AUM of the Purpose Bitcoin ETF fund. Source: Purpose Investments\n\n[View in Studio](https://studio.glassnode.com/charts/institutions.PurposeEtfAumSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/institutions/purpose_etf_flows_sum",
      "method": "GET",
      "metric": "purpose_etf_flows_sum",
      "summary": "Purpose Bitcoin ETF Flows",
      "description": "The number of bitcoin flowing from/to the Purpose Bitcoin ETF. Source: Purpose Investments\n\n[View in Studio](https://studio.glassnode.com/charts/institutions.PurposeEtfFlowsSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/institutions/purpose_etf_holdings_sum",
      "method": "GET",
      "metric": "purpose_etf_holdings_sum",
      "summary": "Purpose Bitcoin ETF Holdings",
      "description": "The number of bitcoin in the Purpose Bitcoin ETF. Source: Purpose Investments\n\n[View in Studio](https://studio.glassnode.com/charts/institutions.PurposeEtfHoldingsSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/institutions/us_spot_etf_balances_all",
      "method": "GET",
      "metric": "us_spot_etf_balances_all",
      "summary": "US Spot ETF Balances",
      "description": "This metric offers the most recent balances of the leading Bitcoin and Ethereum ETFs traded in the U.S., typically reflecting holdings at the end of the previous trading day (T+1). It updates hourly from 00:00 to 18:00 UTC to ensure timely information on the daily reported balances. Unlike the standard convention where updates are provided only after an interval has concluded, this metric also provides preliminary data for weekly and monthly updates once daily at 15:00 UTC.\n\nThe Bitcoin ETFs covered include: \n\n - IBIT by BlackRock\n - GBTC by Grayscale\n - BTC by Grayscale (Mini Trust)\n - FBTC by Fidelity\n - ARKB by Ark/21 Shares\n - BITB by Bitwise\n - HODL by VanEck\n - BRRR by Valkyrie\n - BTCO by Invesco/Galaxy\n - EZBC by Franklin Templeton\n - BTCW by WisdomTree\n\nThe Ethereum ETFs covered include: \n\n - ETHA by BlackRock\n - ETHE by Grayscale\n - ETH by Grayscale (Mini Trust)\n - FETH by Fidelity\n - CETH by 21 Shares\n - ETHW by Bitwise\n - ETHV by VanEck\n - QETH by Invesco/Galaxy\n - EZET by Franklin Templeton\n\nSource: The metric utilizes publicly available information, obtained directly from the respective ETF issuers.\n\n[View in Studio](https://studio.glassnode.com/charts/institutions.UsSpotEtfBalancesAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/institutions/us_spot_etf_balances_latest",
      "method": "GET",
      "metric": "us_spot_etf_balances_latest",
      "summary": "US Spot ETF Balances (Latest 24h)",
      "description": "This metric provides a consolidated overview of both the latest balances and flows of the leading Bitcoin and Ethereum ETFs traded in the U.S. It combines the most recent data points from the &#x27;US Spot ETF Balances&#x27; and &#x27;US Bitcoin ETF Flows&#x27; metrics, offering a snapshot of the current state of these ETFs.  It updates hourly from 00:00 to 18:00 UTC.\n\nThe Bitcoin ETFs covered include: \n\n - IBIT by BlackRock\n - GBTC by Grayscale\n - BTC by Grayscale (Mini Trust)\n - FBTC by Fidelity\n - ARKB by Ark/21 Shares\n - BITB by Bitwise\n - HODL by VanEck\n - BRRR by Valkyrie\n - BTCO by Invesco/Galaxy\n - EZBC by Franklin Templeton\n - BTCW by WisdomTree\n\nThe Ethereum ETFs covered include: \n\n - ETHA by BlackRock\n - ETHE by Grayscale\n - ETH by Grayscale (Mini Trust)\n - FETH by Fidelity\n - CETH by 21 Shares\n - ETHW by Bitwise\n - ETHV by VanEck\n - QETH by Invesco/Galaxy\n - EZET by Franklin Templeton\n\nSource: The metric utilizes publicly available information, obtained directly from the respective ETF issuers.\n\n[View in Studio](https://studio.glassnode.com/charts/institutions.UsSpotEtfBalancesLatest?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/institutions/us_spot_etf_flows_all",
      "method": "GET",
      "metric": "us_spot_etf_flows_all",
      "summary": "US Spot ETF Flows",
      "description": "This metric is an estimate of the daily net flow of funds within the leading Bitcoin and Ethereum ETFs traded in the U.S., reflecting the day-to-day changes in the ETF&#x27;s holdings. The calculation is based on shares outstanding and Basket Crypto Amount when this information is available; otherwise it is based on the difference between today&#x27;s balance data point and the previously available balance data point in native units. Each day&#x27;s native net flow is then converted into USD, leveraging the closing USD exchange rate at 16:00 New York time. It updates hourly from 00:00 to 18:00 UTC to ensure timely information on the daily reported balances. Unlike the standard convention where updates are provided only after an interval has concluded, this metric also provides preliminary data for weekly and monthly updates once daily at 15:00 UTC.\n\nThe Bitcoin ETFs covered include: \n\n - IBIT by BlackRock\n - GBTC by Grayscale\n - BTC by Grayscale (Mini Trust)\n - FBTC by Fidelity\n - ARKB by Ark/21 Shares\n - BITB by Bitwise\n - HODL by VanEck\n - BRRR by Valkyrie\n - BTCO by Invesco/Galaxy\n - EZBC by Franklin Templeton\n - BTCW by WisdomTree\n\nThe Ethereum ETFs covered include: \n\n - ETHA by BlackRock\n - ETHE by Grayscale\n - ETH by Grayscale (Mini Trust)\n - FETH by Fidelity\n - CETH by 21 Shares\n - ETHW by Bitwise\n - ETHV by VanEck\n - QETH by Invesco/Galaxy\n - EZET by Franklin Templeton\n\nSource: The metric utilizes publicly available information, obtained directly from the respective ETF issuers.\n\n[View in Studio](https://studio.glassnode.com/charts/institutions.UsSpotEtfFlowsAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/institutions/us_spot_etf_flows_net",
      "method": "GET",
      "metric": "us_spot_etf_flows_net",
      "summary": "US Spot ETF Net Flows",
      "description": "This metric shows the total net flow of funds of the leading Bitcoin and Ethereum ETFs traded in the U.S., reflecting the day-to-day changes in the ETF&#x27;s holdings. It is calculated as the difference between today&#x27;s balance data point and the previously available balance data point in native units. Each day&#x27;s native net flow is then converted into USD, leveraging the closing USD exchange rate at 16:00 New York time. It updates hourly from 00:00 to 18:00 UTC to ensure timely information on the daily reported balances. Unlike the standard convention where updates are provided only after an interval has concluded, this metric also provides preliminary data for weekly and monthly updates once daily at 15:00 UTC.\n\nThe Bitcoin ETFs covered include: \n\n - IBIT by BlackRock\n - GBTC by Grayscale\n - BTC by Grayscale (Mini Trust)\n - FBTC by Fidelity\n - ARKB by Ark/21 Shares\n - BITB by Bitwise\n - HODL by VanEck\n - BRRR by Valkyrie\n - BTCO by Invesco/Galaxy\n - EZBC by Franklin Templeton\n - BTCW by WisdomTree\n\nThe Ethereum ETFs covered include: \n\n - ETHA by BlackRock\n - ETHE by Grayscale\n - ETH by Grayscale (Mini Trust)\n - FETH by Fidelity\n - CETH by 21 Shares\n - ETHW by Bitwise\n - ETHV by VanEck\n - QETH by Invesco/Galaxy\n - EZET by Franklin Templeton\n\nSource: The metric utilizes publicly available information, obtained directly from the respective ETF issuers.\n\n[View in Studio](https://studio.glassnode.com/charts/institutions.UsSpotEtfFlowsNet?a=BTC)\n"
    }
  ],
  "lightning": [
    {
      "path": "/v1/metrics/lightning/base_fee_median",
      "method": "GET",
      "metric": "base_fee_median",
      "summary": "Lightning Network Base Fee (Median)",
      "description": "The median base fee in the Lightning Network in Satoshi, derived from the channel graph. Base fees are fees that have to be paid for each payment that is routed through the channel. For payments between two peers that share a direct channel connection no fees have to be spent.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.BaseFeeMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/lightning/network_capacity_sum",
      "method": "GET",
      "metric": "network_capacity_sum",
      "summary": "Lightning Network Capacity",
      "description": "The total amount of BTC locked in the Lightning Network. The Bitcoin Lightning Network is a Layer 2 payment protocol built on top of the Bitcoin blockchain. It is designed to provide faster, cheaper, and more scalable transactions than traditional on-chain Bitcoin transactions.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.NetworkCapacitySum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/lightning/channel_size_mean",
      "method": "GET",
      "metric": "channel_size_mean",
      "summary": "Lightning Network Channel Size (Mean)",
      "description": "The mean BTC size of public Lightning Network channels. The Lightning Network works by creating payment channels between two parties, where multiple transactions can be made without the need for each individual transaction to be recorded on the Bitcoin blockchain. These transactions are instead recorded off-chain, which makes them faster and cheaper.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.ChannelSizeMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/lightning/channel_size_median",
      "method": "GET",
      "metric": "channel_size_median",
      "summary": "Lightning Network Channel Size (Median)",
      "description": "The median BTC size of public Lightning Network channels. The Lightning Network works by creating payment channels between two parties, where multiple transactions can be made without the need for each individual transaction to be recorded on the Bitcoin blockchain. These transactions are instead recorded off-chain, which makes them faster and cheaper.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.ChannelSizeMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/lightning/fee_rate_median",
      "method": "GET",
      "metric": "fee_rate_median",
      "summary": "Lightning Network Fee Rate (Median)",
      "description": "The median fee rate in the Lightning Network, derived from the channel graph. On top of a base fee, fees for payments are proportional to the transferred amount. Values here are given in units sat / BTC. E.g., a value of 1000 indicates that a fee of 1000 Satoshi is required to transfer 1 BTC.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.FeeRateMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/lightning/gini_capacity_distribution",
      "method": "GET",
      "metric": "gini_capacity_distribution",
      "summary": "Lightning Network Gini Capacity Distribution",
      "description": "The Gini coefficient of the Lightning network capacity is a statistical measure of the distribution of Bitcoin capacity among the nodes on the Lightning Network. It is calculated by comparing the actual distribution of Bitcoin capacity among the nodes to a hypothetical uniform distribution. It ranges from 0 to 1, with 0 representing perfect equality and 1 representing maximum inequality. A higher Gini coefficient indicates a more unequal distribution of Bitcoin capacity among nodes, while a lower Gini coefficient indicates a more even distribution of Bitcoin capacity. The Gini coefficient of the Lightning network capacity can be used to monitor the degree of centralization and potential risks associated with a highly concentrated distribution of Bitcoin capacity.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.GiniCapacityDistribution?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/lightning/gini_channel_distribution",
      "method": "GET",
      "metric": "gini_channel_distribution",
      "summary": "Lightning Network Gini Channel Distribution",
      "description": "The Gini coefficient of the Lightning network channel distribution is a statistical measure of the distribution of numbers of channels among the nodes on the Lightning Network. It is calculated by comparing the actual distribution of channels among the nodes to a hypothetical uniform distribution. It ranges from 0 to 1, with 0 representing perfect equality and 1 representing maximum inequality. A higher Gini coefficient indicates a more unequal distribution of channel numbers among nodes, while a lower Gini coefficient indicates a more even distribution of channel counts. The Gini coefficient of the Lightning network channel distribution can be used to monitor the degree of centralization and potential risks associated with a highly concentrated influence of network nodes.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.GiniChannelDistribution?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/lightning/node_connectivity",
      "method": "GET",
      "metric": "node_connectivity",
      "summary": "Lightning Network Node Connectivity",
      "description": "The number of nodes in the Lightning Network that are connected via IP, TOR, or both.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.NodeConnectivity?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/lightning/channels_count",
      "method": "GET",
      "metric": "channels_count",
      "summary": "Lightning Network Number of Channels",
      "description": "The number of public Lightning Network channels. The Lightning Network works by creating payment channels between two parties, where multiple transactions can be made without the need for each individual transaction to be recorded on the Bitcoin blockchain. These transactions are instead recorded off-chain, which makes them faster and cheaper.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.ChannelsCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/lightning/nodes_count",
      "method": "GET",
      "metric": "nodes_count",
      "summary": "Lightning Network Number of Nodes",
      "description": "The number of Lightning Network nodes.\n\n[View in Studio](https://studio.glassnode.com/charts/lightning.NodesCount?a=BTC)\n"
    }
  ],
  "market": [
    {
      "path": "/v1/metrics/market/apac_30d_price_change",
      "method": "GET",
      "metric": "apac_30d_price_change",
      "summary": "Asia Month-over-Month Price Change",
      "description": "This metric shows the 30-day change in the regional price set during Asia working hours, i.e. between 8am and 8pm China Standard Time (00:00-12:00 UTC).\n\nRegional prices are constructed in a two-step process: First, price movements are assigned to regions based on working hours in the US, Europe, and Asia. Regional prices are then determined by calculating the cumulative sum of the price changes over time for each region.\n\n[View in Studio](https://studio.glassnode.com/charts/market.Apac30DPriceChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/btc_dominance",
      "method": "GET",
      "metric": "btc_dominance",
      "summary": "BTC Dominance",
      "description": "BTC Dominance, or Bitcoin Dominance, denotes Bitcoin&#x27;s market capitalization as a percentage of the total market cap of all cryptocurrencies. It&#x27;s calculated by dividing Bitcoin&#x27;s market cap by the total cryptocurrency market cap. This metric is updated daily at 10:15 UTC, providing us with the previous day&#x27;s data point at this time.\n\n[View in Studio](https://studio.glassnode.com/charts/market.BtcDominance?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/deltacap_usd",
      "method": "GET",
      "metric": "deltacap_usd",
      "summary": "Delta Cap",
      "description": "Delta Cap is the difference between Realized Cap and Average Cap, where Average Cap is assumed to be the life-to-date moving average of Market Cap. It attempts to detect major market bottoms in Bitcoin cycles. This metric was put forward by [David Puell](twitter.com/kenoshaking). For more information please read his [introductory article](https://medium.com/@kenoshaking/bitcoin-delta-capitalization-1d51a7b256b4).\n\n[View in Studio](https://studio.glassnode.com/charts/market.DeltacapUsd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/emea_30d_price_change",
      "method": "GET",
      "metric": "emea_30d_price_change",
      "summary": "EU Month-over-Month Price Change",
      "description": "This metric shows the 30-day change in the regional price set during EU working hours, i.e. between 8am and 8pm Central European Time (07:00-19:00 UTC), respectively Central European Summer Time (06:00-18:00 UTC).\n\nRegional prices are constructed in a two-step process: First, price movements are assigned to regions based on working hours in the US, Europe, and Asia. Regional prices are then determined by calculating the cumulative sum of the price changes over time for each region.\n\n[View in Studio](https://studio.glassnode.com/charts/market.Emea30DPriceChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/hodl_cave",
      "method": "GET",
      "metric": "hodl_cave",
      "summary": "HODL Cave",
      "description": "The HODL Cave metric analyzes the spread of historical returns for investors who hold a digital asset over various durations and visualizes both the potential gains and risks of holding. The data can be used to understand how the duration of an investor&#x27;s holdings influences returns, highlighting both potential long-term growth and short-term volatility in digital assets.\n\nThe chart shows the holding period in days on the x-axis and on the y-axis the distribution of returns that were historically observed when holding the asset for this amount of time are shown as percentiles. The metric can answer questions like \"What have been the typical returns for holding this asset for three years?\" For example, at a three-year holding duration, if the \"80\" percentile line shows a 5x return, it means 80% of all three-year holding periods achieved at least that return.\n\nNote that the data shown in this metric is not static, since new holding windows (ending with the current timestamp) will contribute to all existing holding periods and in turn modify the observed distribution of returns.\n\nThis metric was first introduced by [Unchained Capital](https://unchained.com/features/hodl-cave).\n\n[View in Studio](https://studio.glassnode.com/charts/market.HodlCave?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/mvrv_more_155",
      "method": "GET",
      "metric": "mvrv_more_155",
      "summary": "LTH-MVRV",
      "description": "Long Term Holder MVRV (LTH-MVRV) is MVRV that takes into account only UTXOs with a lifespan of at least 155 days and serves as an indicator to assess the behaviour of long term investors. For more information see [this article](https://insights.glassnode.com/sth-lth-sopr-mvrv).\n\n[View in Studio](https://studio.glassnode.com/charts/market.MvrvMore155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/marketcap_usd",
      "method": "GET",
      "metric": "marketcap_usd",
      "summary": "Market Cap",
      "description": "The market capitalization (or network value) is defined as the product of the current supply by the current USD price.\n\n[View in Studio](https://studio.glassnode.com/charts/market.MarketcapUsd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/mvrv_median",
      "method": "GET",
      "metric": "mvrv_median",
      "summary": "Median MVRV",
      "description": "The Median MVRV metric represents the ratio of the current market price to the median realized price, providing a nuanced view of market valuation. Unlike the standard MVRV, which compares market cap to realized cap, the Median MVRV focuses on the midpoint acquisition cost, offering insight into how the current price relates to the median acquisition price of the supply. This metric helps indicate whether the traded price is above or below a typical acquisition price, highlighting potential undervaluation or overvaluation relative to the central price level at which the asset’s supply was acquired.\n\n[View in Studio](https://studio.glassnode.com/charts/market.MvrvMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/price_realized_median_usd",
      "method": "GET",
      "metric": "price_realized_median_usd",
      "summary": "Median Realized Price",
      "description": "The Median Realized Price metric represents the median acquisition cost across the total supply of a digital asset, reflecting the price point at which half of the supply was last moved. Unlike average Realized Price, which is based on the Realized Cap divided by current supply, this median calculation provides a view of the central acquisition price by focusing on the midpoint.\n\n[View in Studio](https://studio.glassnode.com/charts/market.PriceRealizedMedianUsd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/mvrv",
      "method": "GET",
      "metric": "mvrv",
      "summary": "MVRV Ratio",
      "description": "Market Value to Realized Value (MVRV) is the ratio between market cap and realised cap. It gives an indication of when the traded price is below a \"fair value\". This metric was created by [David Puell](https://twitter.com/kenoshaking) and [Murad Muhmudov](https://twitter.com/MustStopMurad). For more information see [this post](https://medium.com/adaptivecapital/bitcoin-market-value-to-realized-value-mvrv-ratio-3ebc914dbaee)\n\n[View in Studio](https://studio.glassnode.com/charts/market.Mvrv?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/mvrv_z_score",
      "method": "GET",
      "metric": "mvrv_z_score",
      "summary": "MVRV Z-Score",
      "description": "The MVRV Z-Score evaluates whether  is overvalued or undervalued relative to its \"fair value\". Instead of using a traditional z-score method, the MVRV Z-Score uniquely compares the market value to the realized value. When the market value, measured as network valuation by spot price multiplied by supply, is significantly higher than the realized value, represented by the cumulative capital inflow into the asset, it has typically signaled a market top (red zone). Conversely, a significantly lower market value than the realized value has often indicated market bottoms (green zone).\n\nThe MVRV Z-Score is defined as the ratio between the difference of market cap and realized cap, and the standard deviation of market cap, i.e. (market cap – realized cap) / std(market cap). This formula calculates the standard deviation from the first available data point until the present day, making it a cumulative measure.\n\n[View in Studio](https://studio.glassnode.com/charts/market.MvrvZScore?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/price_usd_close",
      "method": "GET",
      "metric": "price_usd_close",
      "summary": "Price",
      "description": "The asset&#x27;s closing price in USD.\n\n[View in Studio](https://studio.glassnode.com/charts/market.PriceUsdClose?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/price_drawdown_relative",
      "method": "GET",
      "metric": "price_drawdown_relative",
      "summary": "Price Drawdown from ATH",
      "description": "The percent drawdown of the asset&#x27;s price from the previous all-time high.\n\n[View in Studio](https://studio.glassnode.com/charts/market.PriceDrawdownRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/price_usd_ohlc",
      "method": "GET",
      "metric": "price_usd_ohlc",
      "summary": "Price OHLC",
      "description": "OHLC candlestick chart of the asset&#x27;s price in USD.\n\n**Note:** when showing 1 hour resolution the chart will dynamically aggregate data based on zoom level.\n        \n\n[View in Studio](https://studio.glassnode.com/charts/market.PriceUsdOhlc?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/marketcap_realized_usd",
      "method": "GET",
      "metric": "marketcap_realized_usd",
      "summary": "Realized Cap",
      "description": "Realized Cap values different part of the supplies at different prices (instead of using the current daily close). Specifically, it is computed by valuing each UTXO by the price when it was last moved.\n\n[View in Studio](https://studio.glassnode.com/charts/market.MarketcapRealizedUsd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/price_realized_usd",
      "method": "GET",
      "metric": "price_realized_usd",
      "summary": "Realized Price",
      "description": "Realized Price is the Realized Cap divided by the current supply.\n\n[View in Studio](https://studio.glassnode.com/charts/market.PriceRealizedUsd?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/realized_volatility_1_month",
      "method": "GET",
      "metric": "realized_volatility_1_month",
      "summary": "Realized Volatility (1 Month)",
      "description": "Realized volatility is the standard deviation of returns from the mean return of a market. High values in realized volatility indicate a phase of high risk in that market. It is measured on log returns over a fixed time horizon or over a rolling window to obtain a time-dependent observable. While [implied volatility](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;derivatives.OptionsAtmImpliedVolatilityAll) refers to the market’s assessment of future volatility, realized volatility measures what happened in the past. Here, we calculate the realized volatility based on daily returns and multiply it with a factor of sqrt(365) to yield the annualized daily realized volatility over a rolling window of 1 month.\n\n[View in Studio](https://studio.glassnode.com/charts/market.RealizedVolatility1Month?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/realized_volatility_1_week",
      "method": "GET",
      "metric": "realized_volatility_1_week",
      "summary": "Realized Volatility (1 Week)",
      "description": "Realized volatility is the standard deviation of returns from the mean return of a market. High values in realized volatility indicate a phase of high risk in that market. It is measured on log returns over a fixed time horizon or over a rolling window to obtain a time-dependent observable. While [implied volatility](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;derivatives.OptionsAtmImpliedVolatilityAll) refers to the market’s assessment of future volatility, realized volatility measures what happened in the past. Here, we calculate the realized volatility based on daily returns and multiply it with a factor of sqrt(365) to yield the annualized daily realized volatility over a rolling window of 1 week.\n\n[View in Studio](https://studio.glassnode.com/charts/market.RealizedVolatility1Week?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/realized_volatility_1_year",
      "method": "GET",
      "metric": "realized_volatility_1_year",
      "summary": "Realized Volatility (1 Year)",
      "description": "Realized volatility is the standard deviation of returns from the mean return of a market. High values in realized volatility indicate a phase of high risk in that market. It is measured on log returns over a fixed time horizon or over a rolling window to obtain a time-dependent observable. While [implied volatility](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;derivatives.OptionsAtmImpliedVolatilityAll) refers to the market’s assessment of future volatility, realized volatility measures what happened in the past. Here, we calculate the realized volatility based on daily returns and multiply it with a factor of sqrt(365) to yield the annualized daily realized volatility over a rolling window of 365 days.\n\n[View in Studio](https://studio.glassnode.com/charts/market.RealizedVolatility1Year?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/realized_volatility_2_weeks",
      "method": "GET",
      "metric": "realized_volatility_2_weeks",
      "summary": "Realized Volatility (2 Weeks)",
      "description": "Realized volatility is the standard deviation of returns from the mean return of a market. High values in realized volatility indicate a phase of high risk in that market. It is measured on log returns over a fixed time horizon or over a rolling window to obtain a time-dependent observable. While [implied volatility](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;derivatives.OptionsAtmImpliedVolatilityAll) refers to the market’s assessment of future volatility, realized volatility measures what happened in the past. Here, we calculate the realized volatility based on daily returns and multiply it with a factor of sqrt(365) to yield the annualized daily realized volatility over a rolling window of 2 weeks.\n\n[View in Studio](https://studio.glassnode.com/charts/market.RealizedVolatility2Weeks?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/realized_volatility_3_months",
      "method": "GET",
      "metric": "realized_volatility_3_months",
      "summary": "Realized Volatility (3 Months)",
      "description": "Realized volatility is the standard deviation of returns from the mean return of a market. High values in realized volatility indicate a phase of high risk in that market. It is measured on log returns over a fixed time horizon or over a rolling window to obtain a time-dependent observable. While [implied volatility](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;derivatives.OptionsAtmImpliedVolatilityAll) refers to the market’s assessment of future volatility, realized volatility measures what happened in the past. Here, we calculate the realized volatility based on daily returns and multiply it with a factor of sqrt(365) to yield the annualized daily realized volatility over a rolling window of 3 months.\n\n[View in Studio](https://studio.glassnode.com/charts/market.RealizedVolatility3Months?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/realized_volatility_6_months",
      "method": "GET",
      "metric": "realized_volatility_6_months",
      "summary": "Realized Volatility (6 Months)",
      "description": "Realized volatility is the standard deviation of returns from the mean return of a market. High values in realized volatility indicate a phase of high risk in that market. It is measured on log returns over a fixed time horizon or over a rolling window to obtain a time-dependent observable. While [implied volatility](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;derivatives.OptionsAtmImpliedVolatilityAll) refers to the market’s assessment of future volatility, realized volatility measures what happened in the past. Here, we calculate the realized volatility based on daily returns and multiply it with a factor of sqrt(365) to yield the annualized daily realized volatility over a rolling window of 6 months.\n\n[View in Studio](https://studio.glassnode.com/charts/market.RealizedVolatility6Months?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/realized_volatility_all",
      "method": "GET",
      "metric": "realized_volatility_all",
      "summary": "Realized Volatility (All)",
      "description": "Realized volatility is the standard deviation of returns from the mean return of a market. High values in realized volatility indicate a phase of high risk in that market. It is measured on log returns over a fixed time horizon or over a rolling window to obtain a time-dependent observable. While [implied volatility](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;derivatives.OptionsAtmImpliedVolatilityAll) refers to the market’s assessment of future volatility, realized volatility measures what happened in the past. Here, we calculate the realized volatility based on daily returns and multiply it with a factor of sqrt(365) to yield the annualized daily realized volatility over rolling windows of 1 week, 2 weeks, 1 month, 3 months, 6 months, and 1 year, respectively.\n\n[View in Studio](https://studio.glassnode.com/charts/market.RealizedVolatilityAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/spot_buying_volume_sum",
      "method": "GET",
      "metric": "spot_buying_volume_sum",
      "summary": "Spot Buying Volume",
      "description": "Spot Buying Volume Intraday measures the aggregate trading volume in which the buyer was the aggressor, focusing on the native asset against USD-related currencies (both fiat and stablecoins). This volume is calculated within a specific intraday time frame, determined by your chosen data resolution (e.g., hourly, 10-minute intervals). \n\nYou can view this metric for individual exchanges or as an aggregate total across exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/market.SpotBuyingVolumeSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/spot_selling_volume_sum",
      "method": "GET",
      "metric": "spot_selling_volume_sum",
      "summary": "Spot Selling Volume",
      "description": "Spot Selling Volume Intraday measures the aggregate trading volume in which the seller was the aggressor, focusing on the native asset against USD-related currencies (both fiat and stablecoins). This volume is calculated within a specific intraday time frame, determined by your chosen data resolution (e.g., hourly, 10-minute intervals). \n\nYou can view this metric for individual exchanges or as an aggregate total across exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/market.SpotSellingVolumeSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/spot_volume_sum_intraday",
      "method": "GET",
      "metric": "spot_volume_sum_intraday",
      "summary": "Spot Volume",
      "description": "Spot Volume Intraday measures the aggregate trading volume for the native asset against USD-related currencies (both fiat and stablecoins) within a specific intraday time frame. The time frame is determined by the chosen data resolution (e.g., hourly, 10-minute intervals). \n\n This metric can be viewed for individual exchanges or as an aggregate total across exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/market.SpotVolumeSumIntraday?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/spot_volume_daily_sum",
      "method": "GET",
      "metric": "spot_volume_daily_sum",
      "summary": "Spot Volume 24h",
      "description": "Spot Volume represents the total trading volume of the native asset against all USD-related currencies, including both fiat and stablecoins, aggregated over the past 24 hours.\n\n Dropdown menus can be used to select individual exchanges or aggregate values (default). Values are presented according to the selected data resolution.\n\n[View in Studio](https://studio.glassnode.com/charts/market.SpotVolumeDailySum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/spot_volume_daily_latest",
      "method": "GET",
      "metric": "spot_volume_daily_latest",
      "summary": "Spot Volume 24h (Latest)",
      "description": "The total volume traded in spot markets per exchange aggregated over the last 24 hours. These values are updated every 10 minutes to reflect the latest trading dynamics. Alongside the total volume, &#x27;change&#x27; values are also presented, indicating the difference compared to the previous value.\n\n[View in Studio](https://studio.glassnode.com/charts/market.SpotVolumeDailyLatest?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/spot_volume_daily_sum_all",
      "method": "GET",
      "metric": "spot_volume_daily_sum_all",
      "summary": "Spot Volume 24h (Stacked)",
      "description": "Spot Volume (Stacked) displays the cumulative trading volume of the native asset against USD-based currencies, encompassing both fiat and stablecoins, broken down by each exchange. This metric sums up trades over the last 24 hours and is visualized stacked to differentiate volumes by exchange.\n\n[View in Studio](https://studio.glassnode.com/charts/market.SpotVolumeDailySumAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/spot_vd_sum",
      "method": "GET",
      "metric": "spot_vd_sum",
      "summary": "Spot Volume Delta",
      "description": "Spot Volume Delta (VD) measures the net difference between buying and selling trade volumes, specifically highlighting the difference in volume where the buyer or seller was the aggressor. It includes trades where USD or USD-related currencies serve as the quote currency, encompassing both fiat and stablecoins. The CVD is computed within specific intraday time frames, which are determined based on your selected data resolution (e.g., hourly, 10-minute intervals). \\\n\\\nYou can view this metric for individual exchanges or as an aggregate total across exchanges.\n\n[View in Studio](https://studio.glassnode.com/charts/market.SpotVdSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/mvrv_less_155",
      "method": "GET",
      "metric": "mvrv_less_155",
      "summary": "STH-MVRV",
      "description": "Short Term Holder MVRV (STH-MVRV) is MVRV that takes into account only UTXOs younger than 155 days and serves as an indicator to assess the behaviour of short term investors. For more information see [this article](https://insights.glassnode.com/sth-lth-sopr-mvrv).\n\n[View in Studio](https://studio.glassnode.com/charts/market.MvrvLess155?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/market/amer_30d_price_change",
      "method": "GET",
      "metric": "amer_30d_price_change",
      "summary": "US Month-over-Month Price Change",
      "description": "This metric shows the 30-day change in the regional price set during US working hours, i.e. between 8am and 8pm Eastern Time (13:00-01:00 UTC), respectively Eastern Daylight Time (12:00-0:00 UTC).\n\nRegional prices are constructed in a two-step process: First, price movements are assigned to regions based on working hours in the US, Europe, and Asia. Regional prices are then determined by calculating the cumulative sum of the price changes over time for each region.\n\n[View in Studio](https://studio.glassnode.com/charts/market.Amer30DPriceChange?a=BTC)\n"
    }
  ],
  "mempool": [
    {
      "path": "/v1/metrics/mempool/fees_average_relative",
      "method": "GET",
      "metric": "fees_average_relative",
      "summary": "Mempool Average Relative Fee",
      "description": "The mean relative fee of transactions waiting in the mempool. The relative fee is calculated as the total transaction fees divided by the transacion size (in vByte). High relative fees give an indication of transaction urgency as miners do not consider total transaction fee but fee per size, as the total fee they can collect is limited by the block space.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.FeesAverageRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mempool/fees_median_relative",
      "method": "GET",
      "metric": "fees_median_relative",
      "summary": "Mempool Median Relative Fee",
      "description": "The median relative fee of transactions waiting in the mempool. The relative fee is calculated as the total transaction fees divided by the transacion size (in vByte). High relative fees give an indication of transaction urgency as miners do not consider total transaction fee but fee per size, as the total fee they can collect is limited by the block space.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.FeesMedianRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mempool/txs_value_sum",
      "method": "GET",
      "metric": "txs_value_sum",
      "summary": "Mempool Total Amount of Coins",
      "description": "The total amount of coins in transactions waiting in the mempool.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.TxsValueSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mempool/txs_value_distribution",
      "method": "GET",
      "metric": "txs_value_distribution",
      "summary": "Mempool Total Amount of Coins by Relative Fee",
      "description": "The total amount of coins in transactions waiting in the mempool in different relative fee (Sat / vByte) cohorts.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.TxsValueDistribution?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mempool/fees_sum",
      "method": "GET",
      "metric": "fees_sum",
      "summary": "Mempool Total Amount of Fees",
      "description": "The total amount of fees of transactions waiting in the mempool.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.FeesSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mempool/fees_distribution",
      "method": "GET",
      "metric": "fees_distribution",
      "summary": "Mempool Total Amount of Fees by Relative Fee",
      "description": "The total amount of fees of transactions waiting in the mempool in different relative fee (Sat / vByte) cohorts.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.FeesDistribution?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mempool/txs_count_sum",
      "method": "GET",
      "metric": "txs_count_sum",
      "summary": "Mempool Transaction Count",
      "description": "The total number of transactions waiting in the mempool.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.TxsCountSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mempool/txs_count_distribution",
      "method": "GET",
      "metric": "txs_count_distribution",
      "summary": "Mempool Transaction Count by Relative Fee",
      "description": "The total number of transactions waiting in the mempool in different relative fee (Sat / vByte) cohorts.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.TxsCountDistribution?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mempool/txs_size_sum",
      "method": "GET",
      "metric": "txs_size_sum",
      "summary": "Mempool Transactions Size",
      "description": "The total size (denoted in virtual bytes) of all transactions waiting in the mempool.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.TxsSizeSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mempool/txs_size_distribution",
      "method": "GET",
      "metric": "txs_size_distribution",
      "summary": "Mempool Transactions Size by Relative Fee",
      "description": "The size of all transactions (denoted in virtual bytes) waiting in the mempool in different relative fee (Sat / vByte) cohorts.\n\n[View in Studio](https://studio.glassnode.com/charts/mempool.TxsSizeDistribution?a=BTC)\n"
    }
  ],
  "mining": [
    {
      "path": "/v1/metrics/mining/difficulty_latest",
      "method": "GET",
      "metric": "difficulty_latest",
      "summary": "Difficulty",
      "description": "The current estimated number of hashes required to mine a block. Note:  difficulty is often denoted as the relative difficulty with respect to the genesis block, which required approximately 2^32 hashes. For better comparison across blockchains, our values are denoted in raw hashes.\n\n[View in Studio](https://studio.glassnode.com/charts/mining.DifficultyLatest?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mining/hash_rate_mean",
      "method": "GET",
      "metric": "hash_rate_mean",
      "summary": "Hash Rate",
      "description": "The average estimated number of hashes per second produced by the miners in the network.\n\n[View in Studio](https://studio.glassnode.com/charts/mining.HashRateMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mining/marketcap_thermocap_ratio",
      "method": "GET",
      "metric": "marketcap_thermocap_ratio",
      "summary": "Market Cap to Thermocap Ratio",
      "description": "The Market Cap to Thermocap Ratio is simply defined as Market cap / Thermocap, and can be used to assess if the asset&#x27;s price is currently trading at a premium with respect to total security spend by miners. The ratio is adjusted to account for the increasing circulating supply over time.\n\n[View in Studio](https://studio.glassnode.com/charts/mining.MarketcapThermocapRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mining/miners_outflow_multiple",
      "method": "GET",
      "metric": "miners_outflow_multiple",
      "summary": "Miner Outflow Multiple",
      "description": "The Miner Outflow Multiple indicates periods where the amount of bitcoins flowing out of miner addresses is high with respect to its historical average. It is defined as the ratio of the miners&#x27; outflow and its 365 day MA (in USD).\n\n[View in Studio](https://studio.glassnode.com/charts/mining.MinersOutflowMultiple?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mining/volume_mined_sum",
      "method": "GET",
      "metric": "volume_mined_sum",
      "summary": "Miner Revenue (Block Rewards)",
      "description": "The total amount of newly minted coins, i.e. block rewards.\n\n[View in Studio](https://studio.glassnode.com/charts/mining.VolumeMinedSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mining/revenue_from_fees",
      "method": "GET",
      "metric": "revenue_from_fees",
      "summary": "Miner Revenue (Fees)",
      "description": "The percentage of miner revenue derived from fees, i.e. fees divided by fees plus minted coins.\n\n[View in Studio](https://studio.glassnode.com/charts/mining.RevenueFromFees?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mining/revenue_sum",
      "method": "GET",
      "metric": "revenue_sum",
      "summary": "Miner Revenue (Total)",
      "description": "The total miner revenue, i.e. fees plus newly minted coins.\n\n[View in Studio](https://studio.glassnode.com/charts/mining.RevenueSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mining/miners_unspent_supply",
      "method": "GET",
      "metric": "miners_unspent_supply",
      "summary": "Miner Unspent Supply",
      "description": "The total amount of coins in coinbase transactions that have never been moved.\n\n[View in Studio](https://studio.glassnode.com/charts/mining.MinersUnspentSupply?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/mining/thermocap",
      "method": "GET",
      "metric": "thermocap",
      "summary": "Thermocap",
      "description": "Aggregate security spend, or \"Thermocap\", is the aggregated amount of coins paid to miners and serves as a proxy to mining resources spent. It serves as a measure of the true capital flow into the network and is computed as the aggregate coinbase transactions multiplied by the price in USD at the time they were mined. This metric was first put forth by [Nic Carter](https://twitter.com/nic__carter).\n\n[View in Studio](https://studio.glassnode.com/charts/mining.Thermocap?a=BTC)\n"
    }
  ],
  "protocols": [
    {
      "path": "/v1/metrics/protocols/aave_v1_available_liquidity_sum_by_token",
      "method": "GET",
      "metric": "aave_v1_available_liquidity_sum_by_token",
      "summary": "Aave V1: Available Liquidity Volume by Token",
      "description": "This metric shows the total amount of liquidity available for each token on the version 1 of the Aave platform, allowing users to assess the depth of the market and the potential ease of borrowing or supplying assets. Users may not be able to withdraw funds if the liquidity drops too far. This means that they would need to wait until more liquidity is deposited by other users to be able to borrow or withdraw funds.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV1AvailableLiquiditySumByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v1_available_liquidity_perc_by_token",
      "method": "GET",
      "metric": "aave_v1_available_liquidity_perc_by_token",
      "summary": "Aave V1: Available Liquidity Volume Percentage by Token",
      "description": "This metric represents the percentage of available liquidity for each token on the version 1 of the Aave platform relative to the total available liquidity across all tokens. It provides insights into the distribution of liquidity and the prominence of individual tokens within the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV1AvailableLiquidityPercByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v1_collateral_rate_by_token",
      "method": "GET",
      "metric": "aave_v1_collateral_rate_by_token",
      "summary": "Aave V1: Collateral Rate by Token",
      "description": "This metric represents the interest rate paid to users who provide collateral for each token on the version 1 of the Aave platform. It allows users to compare the rates they can earn when supplying different tokens as collateral, enabling them to make informed decisions when participating in the lending market. Aave&#x27;s interest rate algorithm is calibrated to manage liquidity risk and optimise utilisation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV1CollateralRateByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v1_count_by_action",
      "method": "GET",
      "metric": "aave_v1_count_by_action",
      "summary": "Aave V1: Count by Action Type",
      "description": "The total cumulative count of all activities performed within the version 1 of the Aave protocol. This includes the count of deposits, withdrawals, stable borrows, variable borrows, repays, liquidations, flash loans, rebalance stable borrow rate, swaps to stable rate mode and swaps to variable rate mode.\nStacked Count represents the overall frequency of the financial transactions that have taken place within the Aave protocol and can provide insight into the overall usage and popularity of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV1CountByAction?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v1_stable_borrow_rate_by_token",
      "method": "GET",
      "metric": "aave_v1_stable_borrow_rate_by_token",
      "summary": "Aave V1: Fixed Borrow Rate by Token",
      "description": "This metric displays the stable borrow rate for each token on the  version 1 of the Aave platform. The stable borrow rate is a fixed interest rate that users can choose when borrowing assets, offering predictable repayment costs over the loan&#x27;s duration. Aave&#x27;s interest rate algorithm is calibrated to manage liquidity risk and optimise utilisation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV1StableBorrowRateByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v1_variable_borrow_rate_by_token",
      "method": "GET",
      "metric": "aave_v1_variable_borrow_rate_by_token",
      "summary": "Aave V1: Variable Borrow Rate by Token",
      "description": "This metric displays the variable borrow rate for each token on the version 1 of the Aave platform. The variable borrow rate is an interest rate that changes with market conditions, providing users with potentially lower borrowing costs but increased risk due to rate fluctuations. Aave&#x27;s interest rate algorithm is calibrated to manage liquidity risk and optimise utilisation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV1VariableBorrowRateByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v1_volume_sum_by_action",
      "method": "GET",
      "metric": "aave_v1_volume_sum_by_action",
      "summary": "Aave V1: Volume by Action Type",
      "description": "The total cumulative volume of all activities performed within the version 1 of the Aave protocol. This includes the volume of deposits, withdrawals, stable borrows, variable borrows, repays, debt liquidations, collateral liquidations (receiving the underlying token or the aToken) and flash loans.\nStacked Volume represents the overall magnitude of the financial transactions that have taken place within the Aave protocol and can provide insight into the overall growth and usage of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV1VolumeSumByAction?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_total_value_locked_sum",
      "method": "GET",
      "metric": "aave_v2_total_value_locked_sum",
      "summary": "Aave V2: Activity-Based Total Value Locked (TVL)",
      "description": "This metric indicates the total value of assets locked on the version 2 of the Aave platform, broken down into available liquidity, stable borrows, and variable borrows. This representation allows for visualization of the amounts of these components within the total value locked, addressing the fact that borrows might not always be considered when computing the total value locked. It reflects the overall usage and popularity of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2TotalValueLockedSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_total_value_locked_perc",
      "method": "GET",
      "metric": "aave_v2_total_value_locked_perc",
      "summary": "Aave V2: Activity-Based Total Value Locked (TVL) Percentage Share",
      "description": "This metric displays the proportion of the total value locked in the version 2 of the Aave platform, broken down into available liquidity, stable borrows, and variable borrows. This representation allows for visualization of the proportions of these components within the total value locked, addressing the fact that borrows might not always be considered when computing the total value locked. It reflects the overall usage and popularity of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2TotalValueLockedPerc?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_available_liquidity_perc_by_token",
      "method": "GET",
      "metric": "aave_v2_available_liquidity_perc_by_token",
      "summary": "Aave V2: Available Liquidity Percentage Share by Token",
      "description": "This metric represents the percentage of available liquidity for each token on the version 2 of the Aave platform relative to the total available liquidity across all tokens. It provides insights into the distribution of liquidity and the prominence of individual tokens within the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2AvailableLiquidityPercByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_available_liquidity_sum_by_token",
      "method": "GET",
      "metric": "aave_v2_available_liquidity_sum_by_token",
      "summary": "Aave V2: Available Liquidity Volume by Token",
      "description": "This metric shows the total amount of liquidity available for each token on the version 2 of the Aave platform, allowing users to assess the depth of the market and the potential ease of borrowing or supplying assets. Users may not be able to withdraw funds if the liquidity drops too far. This means that they would need to wait until more liquidity is deposited by other users to be able to borrow or withdraw funds.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2AvailableLiquiditySumByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_borrows_sum_by_token",
      "method": "GET",
      "metric": "aave_v2_borrows_sum_by_token",
      "summary": "Aave V2: Borrow Volume by Token",
      "description": "This metric displays the total amount of assets borrowed for each token on the version 2 of the Aave platform, providing insights into the borrowing demand for individual tokens and the overall usage of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2BorrowsSumByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_borrows_perc_by_token",
      "method": "GET",
      "metric": "aave_v2_borrows_perc_by_token",
      "summary": "Aave V2: Borrow Volume Share Percentage by Token",
      "description": "This metric shows the percentage of borrowed assets for each token on the version 2 of the Aave platform relative to the total borrowed assets across all tokens. It offers insights into the borrowing demand distribution and the relative popularity of individual tokens within the borrowing market on the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2BorrowsPercByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_collateral_rate_by_token",
      "method": "GET",
      "metric": "aave_v2_collateral_rate_by_token",
      "summary": "Aave V2: Collateral Rate by Token",
      "description": "This metric represents the interest rate paid to users who provide collateral for each token on the version 2 of the Aave platform. It allows users to compare the rates they can earn when supplying different tokens as collateral, enabling them to make informed decisions when participating in the lending market.. Aave&#x27;s interest rate algorithm is calibrated to manage liquidity risk and optimise utilisation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2CollateralRateByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_count_by_action",
      "method": "GET",
      "metric": "aave_v2_count_by_action",
      "summary": "Aave V2: Count by Action Type",
      "description": "The total cumulative count of all activities performed within the version 2 of the Aave protocol. This includes the count of deposits, withdrawals, stable borrows, variable borrows, repays, liquidations, flash loans, rebalance stable borrow rate, swaps to stable rate mode and swaps to variable rate mode.\n          Stacked Count represents the overall frequency of the financial transactions that have taken place within the Aave protocol and can provide insight into the overall usage and popularity of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2CountByAction?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_stable_borrow_rate_by_token",
      "method": "GET",
      "metric": "aave_v2_stable_borrow_rate_by_token",
      "summary": "Aave V2: Fixed Borrow Rate by Token",
      "description": "This metric displays the stable borrow rate for each token on the  version 2 of the Aave platform. The stable borrow rate is a fixed interest rate that users can choose when borrowing assets, offering predictable repayment costs over the loan&#x27;s duration. Aave&#x27;s interest rate algorithm is calibrated to manage liquidity risk and optimise utilisation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2StableBorrowRateByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_variable_borrow_rate_by_token",
      "method": "GET",
      "metric": "aave_v2_variable_borrow_rate_by_token",
      "summary": "Aave V2: Variable Borrow Rate by Token",
      "description": "This metric displays the variable borrow rate for each token on the version 2 of the Aave platform. The variable borrow rate is an interest rate that changes with market conditions, providing users with potentially lower borrowing costs but increased risk due to rate fluctuations. Aave&#x27;s interest rate algorithm is calibrated to manage liquidity risk and optimise utilisation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2VariableBorrowRateByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v2_volume_sum_by_action",
      "method": "GET",
      "metric": "aave_v2_volume_sum_by_action",
      "summary": "Aave V2: Volume by Action Type",
      "description": "The total cumulative volume of all activities performed within the version 2 of the Aave protocol. This includes the volume of deposits, withdrawals, stable borrows, variable borrows, repays, debt liquidations, collateral liquidations (receiving the underlying token or the aToken) and flash loans. Stacked Volume represents the overall magnitude of the financial transactions that have taken place within the Aave protocol and can provide insight into the overall growth and usage of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV2VolumeSumByAction?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_total_value_locked_sum",
      "method": "GET",
      "metric": "aave_v3_total_value_locked_sum",
      "summary": "Aave V3: Activity-Based Total Value Locked (TVL)",
      "description": "This metric shows the total amount of liquidity available for each token on the version 3 of the Aave platform, allowing users to assess the depth of the market and the potential ease of borrowing or supplying assets. Users may not be able to withdraw funds if the liquidity drops too far. This means that they would need to wait until more liquidity is deposited by other users to be able to borrow or withdraw funds.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3TotalValueLockedSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_total_value_locked_perc",
      "method": "GET",
      "metric": "aave_v3_total_value_locked_perc",
      "summary": "Aave V3: Activity-Based Total Value Locked (TVL) Percentage Share",
      "description": "This metric represents the percentage of available liquidity for each token on the version 3 of the Aave platform relative to the total available liquidity across all tokens. It provides insights into the distribution of liquidity and the prominence of individual tokens within the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3TotalValueLockedPerc?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_available_liquidity_perc_by_token",
      "method": "GET",
      "metric": "aave_v3_available_liquidity_perc_by_token",
      "summary": "Aave V3: Available Liquidity Percentage Share by Token",
      "description": "This metric shows the percentage of borrowed assets for each token on the version 3 of the Aave platform relative to the total borrowed assets across all tokens. It offers insights into the borrowing demand distribution and the relative popularity of individual tokens within the borrowing market on the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3AvailableLiquidityPercByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_available_liquidity_sum_by_token",
      "method": "GET",
      "metric": "aave_v3_available_liquidity_sum_by_token",
      "summary": "Aave V3: Available Liquidity Volume by Token",
      "description": "This metric displays the total amount of assets borrowed for each token on the version 3 of the Aave platform, providing insights into the borrowing demand for individual tokens and the overall usage of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3AvailableLiquiditySumByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_borrows_sum_by_token",
      "method": "GET",
      "metric": "aave_v3_borrows_sum_by_token",
      "summary": "Aave V3: Borrow Volume by Token",
      "description": "This metric indicates the total value of assets locked on the version 3 of the Aave platform, broken down into available liquidity, stable borrows, and variable borrows. This representation allows for visualization of the amounts of these components within the total value locked, addressing the fact that borrows might not always be considered when computing the total value locked. It reflects the overall usage and popularity of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3BorrowsSumByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_borrows_perc_by_token",
      "method": "GET",
      "metric": "aave_v3_borrows_perc_by_token",
      "summary": "Aave V3: Borrow Volume Share Percentage by Token",
      "description": "This metric displays the proportion of the total value locked in the version 3 of the Aave platform, broken down into available liquidity, stable borrows, and variable borrows. This representation allows for visualization of the proportions of these components within the total value locked, addressing the fact that borrows might not always be considered when computing the total value locked. It reflects the overall usage and popularity of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3BorrowsPercByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_collateral_rate_by_token",
      "method": "GET",
      "metric": "aave_v3_collateral_rate_by_token",
      "summary": "Aave V3: Collateral Rate by Token",
      "description": "This metric represents the interest rate paid to users who provide collateral for each token on the version 3 of the Aave platform. It allows users to compare the rates they can earn when supplying different tokens as collateral, enabling them to make informed decisions when participating in the lending market. Aave&#x27;s interest rate algorithm is calibrated to manage liquidity risk and optimise utilisation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3CollateralRateByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_count_by_action",
      "method": "GET",
      "metric": "aave_v3_count_by_action",
      "summary": "Aave V3: Count by Action Type",
      "description": "The total cumulative count of all activities performed within the version 3 of the Aave protocol. This includes the count of deposits, withdrawals, stable borrows, variable borrows, repays, liquidations, flash loans, rebalance stable borrow rate, swaps to stable rate mode and swaps to variable rate mode. Stacked Count represents the overall frequency of the financial transactions that have taken place within the Aave protocol and can provide insight into the overall usage and popularity of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3CountByAction?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_stable_borrow_rate_by_token",
      "method": "GET",
      "metric": "aave_v3_stable_borrow_rate_by_token",
      "summary": "Aave V3: Stable Borrow Rate by Token",
      "description": "This metric displays the stable borrow rate for each token on the version 3 of the Aave platform. The stable borrow rate is a fixed interest rate that users can choose when borrowing assets, offering predictable repayment costs over the loan&#x27;s duration. Aave&#x27;s interest rate algorithm is calibrated to manage liquidity risk and optimise utilisation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3StableBorrowRateByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_variable_borrow_rate_by_token",
      "method": "GET",
      "metric": "aave_v3_variable_borrow_rate_by_token",
      "summary": "Aave V3: Variable Borrow Rate by Token",
      "description": "This metric displays the variable borrow rate for each token on the version 3 of the Aave platform. The variable borrow rate is an interest rate that changes with market conditions, providing users with potentially lower borrowing costs but increased risk due to rate fluctuations. Aave&#x27;s interest rate algorithm is calibrated to manage liquidity risk and optimise utilisation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3VariableBorrowRateByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/aave_v3_volume_sum_by_action",
      "method": "GET",
      "metric": "aave_v3_volume_sum_by_action",
      "summary": "Aave V3: Volume by Action Type",
      "description": "The total cumulative volume of all activities performed within the version 3 of the Aave protocol. This includes the volume of deposits, withdrawals, stable borrows, variable borrows, repays, debt liquidations, collateral liquidations (receiving the underlying token or the aToken) and flash loans. Stacked Volume represents the overall magnitude of the financial transactions that have taken place within the Aave protocol and can provide insight into the overall growth and usage of the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.AaveV3VolumeSumByAction?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/compound_deposit_flow",
      "method": "GET",
      "metric": "compound_deposit_flow",
      "summary": "Compound: Deposit Inflows and Outflows",
      "description": "This metric reflects the inflows and outflows of deposits in USD on the Compound protocol, aggregated by token. This provides a comprehensive view of the deposit behavior on the platform and indicates periods of depositing growth or contraction.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.CompoundDepositFlow?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/compound_loan_flow",
      "method": "GET",
      "metric": "compound_loan_flow",
      "summary": "Compound: Loan Inflows and Outflows",
      "description": "This metric shows the inflows and outflows of loans in USD on the Compound protocol, aggregated by token. This provides a comprehensive view of the borrowing behavior on the platform and indicates periods of borrowing growth or contraction.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.CompoundLoanFlow?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/compound_total_value_locked",
      "method": "GET",
      "metric": "compound_total_value_locked",
      "summary": "Compound: Total Value Locked",
      "description": "This metric illustrates the total value in USD of all tokens accepted in the Compound protocol over its history, differentiating between deposits (discounting withdrawals) and loans (discounting repays). It provides a comprehensive view of the total assets secured in the protocol.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.CompoundTotalValueLocked?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/compound_count_by_action",
      "method": "GET",
      "metric": "compound_count_by_action",
      "summary": "Compound: User Interaction Count by Action Type",
      "description": "This metric counts the number of interactions users have with the Compound protocol, broken down by action type, including deposits, withdrawals, borrows, repays, and liquidations. It provides insights into the overall activity and user engagement with the platform, showing which actions are most prevalent.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.CompoundCountByAction?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/compound_volume_by_action",
      "method": "GET",
      "metric": "compound_volume_by_action",
      "summary": "Compound: User Interaction Volume by Action Type",
      "description": "This metric illustrates the volume in USD of user interactions with the Compound protocol, segregated by action type. By quantifying the financial magnitude of each action, it offers insights into the economic significance of user behaviors, indicating which actions drive the most financial activity on the platform.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.CompoundVolumeByAction?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/compound_utilization_ratio",
      "method": "GET",
      "metric": "compound_utilization_ratio",
      "summary": "Compound: Utilization Ratio",
      "description": "This metric reflects the proportion of borrowed funds to available deposits in the Compound protocol. It measures capital efficiency by dividing the total borrowed by the total deposits. A high ratio indicates strong borrowing demand and active lending, while a low ratio points to excess liquidity. This ratio is key for understanding market health and influences the interest rates for lenders and borrowers within the protocol.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.CompoundUtilizationRatio?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/lido_deposits_volume_sum",
      "method": "GET",
      "metric": "lido_deposits_volume_sum",
      "summary": "Lido Deposits Volume",
      "description": "The total amount of ETH that users have deposited into the Lido protocol within a specified timeframe. This metric can help gauge user adoption and trust in the system.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.LidoDepositsVolumeSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/lido_volume_net",
      "method": "GET",
      "metric": "lido_volume_net",
      "summary": "Lido Net Volume",
      "description": "The net inflow (or outflow) of assets in the Lido protocol. A positive value indicates a net deposit, suggesting growing user participation, while a negative value suggests more assets were withdrawn than deposited.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.LidoVolumeNet?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/lido_total_value_locked",
      "method": "GET",
      "metric": "lido_total_value_locked",
      "summary": "Lido Total Value Locked",
      "description": "The total value of all ETH currently staked or locked in the Lido protocol. It&#x27;s a key metric in the DeFi space as it indicates the size and relative importance of a protocol within the ecosystem. A rising TVL can suggest growing trust and usage of the protocol.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.LidoTotalValueLocked?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/lido_withdrawn_volume_sum",
      "method": "GET",
      "metric": "lido_withdrawn_volume_sum",
      "summary": "Lido Withdrawn Volume",
      "description": "The total amount of ETH that users have withdrawn from the Lido protocol within a given period. A high value can indicate users reclaiming their staked assets, either due to rewards or changing trust in the system.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.LidoWithdrawnVolumeSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/maker_event_count_by_type",
      "method": "GET",
      "metric": "maker_event_count_by_type",
      "summary": "Maker: Event Count by Type",
      "description": "This metric tallies the daily occurrences of the different event types within the Maker protocol: Deposits, Withdrawals, Borrows, Repays and Liquidations. By tracking the frequency of these events, stakeholders can gauge user engagement and the protocol&#x27;s operational dynamics, making it a reflection of the protocol&#x27;s health and activity.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.MakerEventCountByType?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/maker_event_volume_usd_by_type",
      "method": "GET",
      "metric": "maker_event_volume_usd_by_type",
      "summary": "Maker: Event Volume (USD) by Type",
      "description": "The Event Volume (USD) by Type metric encapsulates the total USD value associated with the different event types within the Maker protocol: Deposits, Withdrawals, Borrows, Repays, Collateral Liquidations, and Debt Liquidations. This metric provides a monetary perspective on the protocol&#x27;s daily operations, shedding light on the financial implications of user actions and the economic activity generated within the Maker ecosystem.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.MakerEventVolumeUsdByType?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/maker_new_vaults_created_count",
      "method": "GET",
      "metric": "maker_new_vaults_created_count",
      "summary": "Maker: Number of New Vaults Created",
      "description": "A vault is a smart contract on the Ethereum blockchain that holds collateral in the form of Ethereum tokens that is used to generate the DAI stablecoin. This metric shows the count of new vaults (collateralized debt positions) created in the MakerDAO ecosystem. It reflects user engagement, credit creation, and overall growth of the protocol. A rising number of new vaults suggests increased activity and interest in the platform, while a decline may indicate reduced demand for borrowing or shifts in user preferences.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.MakerNewVaultsCreatedCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/maker_psm_balance_sum",
      "method": "GET",
      "metric": "maker_psm_balance_sum",
      "summary": "Maker: Peg Stability Module (PSM) Balance",
      "description": "The Peg Stability Module (PSM) balance indicates the amount of stablecoins (USDC, GUSD and PAX) held in the peg stability module, a component of the MakerDAO protocol designed to help maintain the DAI stablecoin&#x27;s peg to the US dollar by facilitating arbitrage opportunities. A higher PSM balance implies better support for the DAI peg and a lower likelihood of deviations from its intended value.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.MakerPsmBalanceSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/maker_total_value_locked_sum",
      "method": "GET",
      "metric": "maker_total_value_locked_sum",
      "summary": "Maker: Total Value Locked (TVL)",
      "description": "The Total Value Locked (TVL) metric represents the combined value of all assets locked in MakerDAO&#x27;s smart contracts, denominated in USD. It serves as an indicator of the protocol&#x27;s popularity, usage, and trust within the DeFi ecosystem. A higher TVL implies greater adoption and more liquidity in the protocol, making it an important reference for investors and users.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.MakerTotalValueLockedSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/maker_total_value_locked_sum_by_token",
      "method": "GET",
      "metric": "maker_total_value_locked_sum_by_token",
      "summary": "Maker: Total Value Locked (TVL) by Token",
      "description": "This metric measures the value of assets locked in the Maker protocol, broken down by individual token types. It helps to understand the distribution of collateral, the protocol&#x27;s reliance on specific assets, and the diversity of the collateral portfolio. This information can be crucial to assess the risk exposure of the protocol and its resilience to market fluctuations.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.MakerTotalValueLockedSumByToken?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/maker_total_vaults_created_cum",
      "method": "GET",
      "metric": "maker_total_vaults_created_cum",
      "summary": "Maker: Total Vaults Created",
      "description": "This metric represents the cumulative count of all vaults created within the MakerDAO ecosystem over time. A vault, in this context, is a type of smart contract on the Ethereum blockchain designed to hold collateral in the form of Ethereum tokens, which is utilized to mint the DAI stablecoin. By tracking the total number of vaults that have been established since the inception of MakerDAO, this metric offers insights into the historical growth and adoption rate of the platform. It encapsulates the long-term user engagement, sustained credit creation, and the enduring expansion of the protocol.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.MakerTotalVaultsCreatedCum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_fees_sum",
      "method": "GET",
      "metric": "uniswap_fees_sum",
      "summary": "Uniswap Fees",
      "description": "This metric represents the cumulative value of transaction fees generated on the entire protocol as well as both Uniswap v2 and Uniswap v3, expressed in US Dollars.  Fees are collected from traders as a percentage of the trade value. They are used to reward liquidity providers for contributing assets to the liquidity pools. \n\n This metric serves as an indicator of the platform&#x27;s overall trading activity and the potential returns for liquidity providers. A higher fee value reflects increased trading volume and engagement on the platform, signaling a more active and robust ecosystem. \n\n To improve its accuracy, adjustments have been made by eliminating token reserves that showed signs of token price manipulation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapFeesSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_v3_fees_sum_by_fee_tier",
      "method": "GET",
      "metric": "uniswap_v3_fees_sum_by_fee_tier",
      "summary": "Uniswap Fees per Fee Tier",
      "description": "The Uniswap Fees per Fee Tier metric represents the cumulative value of transaction fees generated for Uniswap v3 on the Ethereum blockchain, expressed in USD.  Fees are collected from traders during token swaps as a small percentage of the trade value. They are used to reward liquidity providers for contributing assets to the liquidity pools. \n\n This metric serves as an indicator of the platform&#x27;s overall trading activity and the potential returns for liquidity providers. A higher fee value reflects increased trading volume and engagement on the platform, signaling a more active and robust ecosystem.  For each traded token-pair Uniswap allows for pools with four different trading fee tiers: 0.01, 0.3. This metric presents the total value of fees generated for a given fee tier on Uniswap V3. \n\n To improve its accuracy, adjustments have been made by eliminating token reserves that showed signs of token price manipulation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapV3FeesSumByFeeTier?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_v3_avl_mean",
      "method": "GET",
      "metric": "uniswap_v3_avl_mean",
      "summary": "Uniswap Mean AVL",
      "description": "The Active Value Locked (AVL) describes the share of the Uniswap liquiidty that is being actively used to facilitate trades. It helps measure capital efficiency on Uniswap. The mean AVL is determined by aggregating the amount of liquidity within price ticks of a specific pool that fall within the designated price range. \n\n This metric presents the total of the AVL for Uniswap V3 pools. \n\n To improve its accuracy, adjustments have been made by eliminating token reserves that showed signs of token price manipulation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapV3AvlMean?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_v3_avl_by_fee_tier_mean",
      "method": "GET",
      "metric": "uniswap_v3_avl_by_fee_tier_mean",
      "summary": "Uniswap Mean AVL per Fee Tier",
      "description": "The Active Value Locked (AVL) describes the share of the Uniswap liquiidty that is being actively used to facilitate trades. It helps measure capital efficiency on Uniswap. \n\n The mean AVL is determined by aggregating the amount of liquidity within the price ticks of a specific pool that fall within the designated price range. \n\n This metric presents the total of the AVL for a given fee tier on Uniswap V3.  For each traded token-pair Uniswap allows for pools with four different trading fees: 0.01, 0.3. \n\n  To improve its accuracy, adjustments have been made by eliminating token reserves that showed signs of token price manipulation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapV3AvlByFeeTierMean?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_pools_created_count",
      "method": "GET",
      "metric": "uniswap_pools_created_count",
      "summary": "Uniswap Pools Created",
      "description": "The total amount of pools created for the entire protocol as well as for Uniswap&#x27;s version 2 and version 3. \n\n To improve its accuracy, adjustments have been made by eliminating token reserves that showed signs of token price manipulation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapPoolsCreatedCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_v3_pools_created_by_fee_tier_count",
      "method": "GET",
      "metric": "uniswap_v3_pools_created_by_fee_tier_count",
      "summary": "Uniswap Pools Created per Fee Tier",
      "description": "This metric represents total amount of pools created per fee tier on Uniswap v3. \n\n  For each traded token-pair Uniswap allows for pools with four different trading fee tier: 0.01, 0.3.  \n\n To improve its accuracy, adjustments have been made by eliminating token reserves that showed signs of token price manipulation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapV3PoolsCreatedByFeeTierCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_trades_count",
      "method": "GET",
      "metric": "uniswap_trades_count",
      "summary": "Uniswap Trade Count",
      "description": "The total number of trades for the entire protocol as well as for the two Uniswap&#x27;s version 2 and 3. \n\n To improve its accuracy, adjustments have been made by eliminating token reserves that showed signs of token price manipulation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapTradesCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_volume_traded_sum",
      "method": "GET",
      "metric": "uniswap_volume_traded_sum",
      "summary": "Uniswap Trade Volume",
      "description": "Trade volume refers to the total value of all tokens traded on Uniswap, expressed in US Dollars. It accounts for the inflow volume into the protocol, representing trading activities for both the entire protocol and Uniswap&#x27;s version 2 and version 3.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapVolumeTradedSum?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_volume_by_token_type",
      "method": "GET",
      "metric": "uniswap_volume_by_token_type",
      "summary": "Uniswap Trade Volume per Token Type",
      "description": "Trade volume refers to the total value of all tokens traded on Uniswap, expressed in US Dollars. It accounts for the inflow volume into the protocol. This metric presents the trade volume per token type. Tokens are categorized into three groups: Bluechips (WBTC & WETH), Stablecoins and Altcoins.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapVolumeByTokenType?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_volume_by_size_cohort",
      "method": "GET",
      "metric": "uniswap_volume_by_size_cohort",
      "summary": "Uniswap Trade Volume per Trade Size",
      "description": "Trade volume refers to the total value of all tokens traded on Uniswap, expressed in US dollars. It accounts for the inflow volume into the protocol. \n\n This metrics represents the total trade volume for a given trade size.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapVolumeBySizeCohort?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_total_value_locked_by_fee_tier",
      "method": "GET",
      "metric": "uniswap_total_value_locked_by_fee_tier",
      "summary": "Uniswap TVL per Fee Tier",
      "description": "The Total Value Locked (TVL) quantifies the value of all assets used as liquidity on Uniswap, it is denominated in US dollars.  It is calculated by summing the token amounts multiplied by their respective prices at each timestamp. \n\n This metric presents the total of the TVL for a given fee tier on Uniswap V3. For each traded token-pair Uniswap allows for pools with four different trading fees: 0.01, 0.3.  \n\n To improve its accuracy, adjustments have been made by eliminating token reserves that showed signs of token price manipulation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapTotalValueLockedByFeeTier?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/protocols/uniswap_total_value_locked",
      "method": "GET",
      "metric": "uniswap_total_value_locked",
      "summary": "Uniswap: Total Value Locked",
      "description": "The Total Value Locked (TVL) quantifies the value of all assets used as liquidity on Uniswap, it is denominated in US dollars. TVL is often used to assess the health and strength of a DeFi protocol. The TVL is calculated by summing the token amounts multiplied by their respective prices at each timestamp. \n\n This metric shows the Total Value Locked (TVL) for the entire protocol, as well as seperatly for Uniswap&#x27;s version 2 and version 3.\n\nTo improve its accuracy, adjustments have been made by eliminating token reserves that showed signs of token price manipulation.\n\n[View in Studio](https://studio.glassnode.com/charts/protocols.UniswapTotalValueLocked?a=ETH)\n"
    }
  ],
  "signals": [
    {
      "path": "/v1/metrics/signals/altcoin_index",
      "method": "GET",
      "metric": "altcoin_index",
      "summary": "Altcoin Cycle Signal",
      "description": "The Altcoin Cycle Signal measures whether the market favors bitcoin versus all altcoins. During Bitcoin Season, bitcoin is likely to outperform the basket of all altcoins and during Altcoin Season this dynamic inverts. The signal is meant to be largely agnostic to which altcoins in particular an investor holds. The Altcoin Cycle Signal is based on price data of the top 250 altcoins by market capitalization (excluding stablecoins). This metric is updated daily at 10:15 UTC, providing us with the previous day&#x27;s data point at this time.\n\nFor more information on its interpretation and methodology see [this dashboard](https://studio.glassnode.com/dashboards/signals).\n\n\n[View in Studio](https://studio.glassnode.com/charts/signals.AltcoinIndex?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_risk_index",
      "method": "GET",
      "metric": "btc_risk_index",
      "summary": "Bitcoin Risk Signal",
      "description": "The Bitcoin Risk Signal gauges the amount of risk of a major drawdown in bitcoin price. It is based on a set of proprietary indicators, including bitcoin price data, on-chain data, and a selection of other trading metrics.\n\nFor more information on its interpretation and methodology see [this dashboard](https://studio.glassnode.com/dashboards/signals).\n\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcRiskIndex?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_sharpe_signal",
      "method": "GET",
      "metric": "btc_sharpe_signal",
      "summary": "Bitcoin Sharpe Signal",
      "description": "The Glassnode Bitcoin Sharpe signal uses a unique ML-based approach with on-chain data to strategically minimize downside risks and capture rising trends in Bitcoin. In the context of enhancing risk-adjusted returns, the model&#x27;s confidence is visually represented, with green for the highest confidence and orange to red for reduced confidence. A surge beyond the 0.5 mark has historically been associated with improved risk-adjusted performance in Bitcoin.\nFor more information on its interpretation and methodology see this [dashboard](https://studio.glassnode.com/dashboards/3d214767-ef64-4443-7855-c06aee5a7a70).\n\nThe signal is refreshed daily at 04:00 AM UTC effectively finalizing the previous day&#x27;s timestamp. Please note that the standard version of the signal includes a 1-day lag.\n\nFor Enterprise clients interested in looking to trade with same-day data, learn more about the signal&#x27;s full potential, or understand the methodology that underpins it, we encourage you to contact our [Institutional team](https://get.glassnode.com/bitcoin-sharpe-signal-showcase/).\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcSharpeSignal?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_bss_indicator_1",
      "method": "GET",
      "metric": "btc_bss_indicator_1",
      "summary": "Bitcoin Sharpe Signal - Indicator I",
      "description": "Derived directly from entities&#x27; profit, this indicator offers a nuanced view of entities profit momentum. This indicator is used as one of the main features of the [BSS model](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;signals.BtcSharpeSignal).\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcBssIndicator1?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_bss_indicator_2",
      "method": "GET",
      "metric": "btc_bss_indicator_2",
      "summary": "Bitcoin Sharpe Signal - Indicator II",
      "description": "This refined version of the MVRV ratio employs statistical techniques to amplify its predictive power, highlighting periods of potential overvaluation or undervaluation. This indicator is used as one of the main feature of the [BSS model](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;signals.BtcSharpeSignal)\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcBssIndicator2?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_bss_indicator_3",
      "method": "GET",
      "metric": "btc_bss_indicator_3",
      "summary": "Bitcoin Sharpe Signal - Indicator III",
      "description": "Drawing from recent STH_SOPR data, this indicator offers insights into the market&#x27;s short-term holder steadiness. This indicator is used as one of the main feature of the [BSS model](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;signals.BtcSharpeSignal).\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcBssIndicator3?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_bss_indicator_4",
      "method": "GET",
      "metric": "btc_bss_indicator_4",
      "summary": "Bitcoin Sharpe Signal - Indicator IV",
      "description": "This indicator assesses the momentum in the percentage of circulating supply in profit, subtly highlighting trends by applying a transformation on the base metric. This indicator is used as one of the main feature of the [BSS model](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;signals.BtcSharpeSignal).\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcBssIndicator4?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_bss_short",
      "method": "GET",
      "metric": "btc_bss_short",
      "summary": "Bitcoin Sharpe Signal Short",
      "description": "The Bitcoin Sharpe Signal Short is a machine-learning-based strategy designed to anticipate market turmoil using on-chain data. The signal can help identify potential opportunities to short Bitcoin with reduced downside risk. The model&#x27;s confidence is visually represented, with red for the highest confidence in market sell-off and yellow to green for reduced confidence. When the indicator surges beyond the 0.5 mark, it has historically been associated with imminent market downturns.\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcBssShort?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_bss_goldilocks_short",
      "method": "GET",
      "metric": "btc_bss_goldilocks_short",
      "summary": "BSS Goldilocks Short Signal",
      "description": "Signal decision extracted from the Goldilocks Zone. Prime area to be short on Bitcoin according to the Bitcoin Sharpe Signal Short.\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcBssGoldilocksShort?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_bss_goldilocks",
      "method": "GET",
      "metric": "btc_bss_goldilocks",
      "summary": "BSS Goldilocks Signal",
      "description": "The BSS Goldilocks Signal is derived from the heuristics of the ML model used to construct the [Bitcoin Sharpe Signal](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;signals.BtcSharpeSignal). It activates when the conditions of the Goldilocks zone are met, identifying prime opportunities to enhance the risk-adjusted return on Bitcoin.\nConditions of Goldilocks Zone: when [BSS Indicator I](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;signals.BtcBssIndicator1) is between 52 and 65 and when [BSS Indicator III](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;signals.BtcBssIndicator3) is below 4%.\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcBssGoldilocks?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/ecosystem_momentum_index",
      "method": "GET",
      "metric": "ecosystem_momentum_index",
      "summary": "Ecosystem Momentum Signal",
      "description": "The L1 Momentum Signal evaluates the propensity of a Layer 1 ecosystem to move into an exponential trend that can be either positive or negative. It can be used to evaluate the likelihood of a short-term exponential price momentum continuing and intensifying. The Signal is based on a proprietary statistical method that identifies whether the underlying distribution of an asset&#x27;s returns has departed from its usual structure.\n\nFor more information on its interpretation and methodology see [this dashboard](https://studio.glassnode.com/dashboards/signals).\n\nNote: Data for 1 hour resolution is updated every 6 hours due to a data source limitation for this metric.\n\n\n[View in Studio](https://studio.glassnode.com/charts/signals.EcosystemMomentumIndex?a=ATOM)\n"
    },
    {
      "path": "/v1/metrics/signals/btc_bss_v2",
      "method": "GET",
      "metric": "btc_bss_v2",
      "summary": "Intraday Bitcoin Sharpe Signal",
      "description": "The Glassnode Intraday Bitcoin Sharpe enhances the [BSS](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;signals.BtcSharpeSignal) by providing intraday insights into the positioning of the Bitcoin Sharpe signal, thus improving response capabilities for Pro ML package subscribers against market movements.\n\nThe signal uses a unique ML-based approach with on-chain data to strategically minimize downside risks and capture rising trends in Bitcoin. In the context of enhancing risk-adjusted returns, the model&#x27;s confidence is visually represented, with green for the highest confidence and orange to red for reduced confidence. A surge beyond the 0.5 mark has historically been associated with improved risk-adjusted performance in Bitcoin.\n\n[View in Studio](https://studio.glassnode.com/charts/signals.BtcBssV2?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/mcap_returns_vs_btc",
      "method": "GET",
      "metric": "mcap_returns_vs_btc",
      "summary": "Marketcap returns vs BTC",
      "description": "The Market Capitalization Grouping vs BTC highlights the relative price performance of market capitalization size-based clusters versus bitcoin. Market capitalization groupings are defined as, Large Cap: >1B $, Mid Cap: 1B-100M $, Small Cap: 100M-50M $.\n\nFor more information on its interpretation and methodology see [this dashboard](https://studio.glassnode.com/dashboards/signals).\n\n\n[View in Studio](https://studio.glassnode.com/charts/signals.McapReturnsVsBtc?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/signals/l1_native_tokens_returns_vs_btc",
      "method": "GET",
      "metric": "l1_native_tokens_returns_vs_btc",
      "summary": "Token returns vs BTC",
      "description": "The L1 Native Token Returns vs BTC highlights the relative price performance of large L1 native tokens versus bitcoin.\n\nFor more information on its interpretation and methodology see [this dashboard](https://studio.glassnode.com/dashboards/signals).\n\n\n[View in Studio](https://studio.glassnode.com/charts/signals.L1NativeTokensReturnsVsBtc?a=BTC)\n"
    }
  ],
  "supply": [
    {
      "path": "/v1/metrics/supply/current_adjusted",
      "method": "GET",
      "metric": "current_adjusted",
      "summary": "Adjusted Supply",
      "description": "The circulating supply adjusted by accounting for lost coins. The amount of lost coins is estimated by all those that have not moved in over 7 years.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.CurrentAdjusted?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/apac_1y_supply_change",
      "method": "GET",
      "metric": "apac_1y_supply_change",
      "summary": "Asia Year-over-Year Supply Change",
      "description": "\nThis metric aims at giving an estimate for the year-over-year change in the share of the Bitcoin supply to be held/traded in Asia.\n\nGeolocation of Bitcoin supply is performed probabilistically at the entity level. The timestamps of all transactions created by an entity are correlated with the working hours of different geographical regions to determine the probabilities for each entity being located in the US, Europe, or Asia. Working hours are defined as:\n\n* US: 8am to 8pm Eastern Time (13:00-01:00 UTC)\n* EU: 8am to 8pm Central European Time (07:00-19:00 UTC)\n* Asia: 8am to 8pm China Standard Time (00:00-12:00 UTC)\n\nAn entity&#x27;s balance will only contribute to the supply in the respective region if the location can be determined with a high certainty. Supply held on exchanges wallets are excluded.\n      \n\n[View in Studio](https://studio.glassnode.com/charts/supply.Apac1YSupplyChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/burn_rate",
      "method": "GET",
      "metric": "burn_rate",
      "summary": "Burn Rate (Base Fee)",
      "description": "This metric represents the ongoing pace at which ETH is being burned, following the introduction of the London Hard Fork and the implementation of EIP-1559. The Ethereum Improvement Proposal (EIP-1559) established a base fee for each transaction, which is subsequently incinerated, reducing the overall ETH supply. By tracking the ETH burn rate, users can gain insights into the deflationary pressure on Ethereum and its potential impact on the network&#x27;s long-term economic dynamics.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.BurnRate?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/supply/burned",
      "method": "GET",
      "metric": "burned",
      "summary": "Burned Supply",
      "description": "This metric represents the cumulative sum of ETH incinerated since the implementation of the London Hard Fork, which introduced EIP-1559. The Ethereum Improvement Proposal (EIP-1559) established a base fee for transactions, which is burned to reduce the overall ETH supply. As a result, this metric indicates the deflationary pressure on Ethereum.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Burned?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/supply/current",
      "method": "GET",
      "metric": "current",
      "summary": "Circulating Supply",
      "description": "The total amount of all coins ever created/issued, i.e. the circulating supply.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Current?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/emea_1y_supply_change",
      "method": "GET",
      "metric": "emea_1y_supply_change",
      "summary": "EU Year-over-Year Supply Change",
      "description": "\nThis metric aims at giving an estimate for the year-over-year change in the share of the Bitcoin supply to be held/traded in Europe.\n\nGeolocation of Bitcoin supply is performed probabilistically at the entity level. The timestamps of all transactions created by an entity are correlated with the working hours of different geographical regions to determine the probabilities for each entity being located in the US, Europe, or Asia. Working hours are defined as:\n\n* US: 8am to 8pm Eastern Time (13:00-01:00 UTC)\n* EU: 8am to 8pm Central European Time (07:00-19:00 UTC)\n* Asia: 8am to 8pm China Standard Time (00:00-12:00 UTC)\n\nAn entity&#x27;s balance will only contribute to the supply in the respective region if the location can be determined with a high certainty. Supply held on exchanges wallets are excluded.\n      \n\n[View in Studio](https://studio.glassnode.com/charts/supply.Emea1YSupplyChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/highly_liquid_sum",
      "method": "GET",
      "metric": "highly_liquid_sum",
      "summary": "Highly Liquid Supply",
      "description": "The total supply held by \"highly liquid\" entities. The liquidity of an entity is defined as the ratio of cumulative outflows and cumulative inflows over the entity&#x27;s lifespan. An entity is considered to be illiquid / liquid / highly liquid if its liquidity *L* is ≲ 0.25 / 0.25 ≲ *L* ≲ 0.75 / 0.75 ≲ L, respectively. For more information see our [introductory article on Bitcoin liquidity](https://insights.glassnode.com/bitcoin-liquid-supply).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.HighlyLiquidSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/hodl_waves",
      "method": "GET",
      "metric": "hodl_waves",
      "summary": "HODL Waves",
      "description": "Bundle of all active supply age bands, aka HODL waves. Each colored band shows the percentage of  in existence that was last moved within the time period denoted in the legend. The concept of HODL waves was first described in [this post](https://www.unchained-capital.com/blog/hodl-waves-1/) by [Unchained Capital](https://twitter.com/unchainedcap).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.HodlWaves?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/illiquid_sum",
      "method": "GET",
      "metric": "illiquid_sum",
      "summary": "Illiquid Supply",
      "description": "The total supply held by illiquid entities. The liquidity of an entity is defined as the ratio of cumulative outflows and cumulative inflows over the entity&#x27;s lifespan. An entity is considered to be illiquid / liquid / highly liquid if its liquidity *L* is ≲ 0.25 / 0.25 ≲ *L* ≲ 0.75 / 0.75 ≲ L, respectively. For more information see our [introductory article on Bitcoin liquidity](https://insights.glassnode.com/bitcoin-liquid-supply).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.IlliquidSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/illiquid_change",
      "method": "GET",
      "metric": "illiquid_change",
      "summary": "Illiquid Supply Change",
      "description": "The monthly (30d) net change of supply held by illiquid entities. For more information see our [introductory article on Bitcoin liquidity](http://insights.glassnode.com/bitcoin-liquid-supply).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.IlliquidChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/inflation_rate",
      "method": "GET",
      "metric": "inflation_rate",
      "summary": "Inflation Rate",
      "description": "The percentage of new coins issued, divided by the current supply.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.InflationRate?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/issued",
      "method": "GET",
      "metric": "issued",
      "summary": "Issuance",
      "description": "The total amount of new coins added to the current supply, i.e. minted coins or new coins released to the network.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Issued?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/liquid_illiquid_sum",
      "method": "GET",
      "metric": "liquid_illiquid_sum",
      "summary": "Liquid and Illiquid Supply",
      "description": "The total supply held by illiquid, liquid, and highly liquid entities. The liquidity of an entity is defined as the ratio of cumulative outflows and cumulative inflows over the entity&#x27;s lifespan. An entity is considered to be illiquid / liquid / highly liquid if its liquidity *L* is ≲ 0.25 / 0.25 ≲ *L* ≲ 0.75 / 0.75 ≲ L, respectively. For more information see our [introductory article on Bitcoin liquidity](http://insights.glassnode.com/bitcoin-liquid-supply).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.LiquidIlliquidSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/liquid_sum",
      "method": "GET",
      "metric": "liquid_sum",
      "summary": "Liquid Supply",
      "description": "The total supply held by \"liquid\" entities. The liquidity of an entity is defined as the ratio of cumulative outflows and cumulative inflows over the entity&#x27;s lifespan. An entity is considered to be illiquid / liquid / highly liquid if its liquidity *L* is ≲ 0.25 / 0.25 ≲ *L* ≲ 0.75 / 0.75 ≲ L, respectively. For more information see our [introductory article on Bitcoin liquidity](https://insights.glassnode.com/bitcoin-liquid-supply).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.LiquidSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/liquid_change",
      "method": "GET",
      "metric": "liquid_change",
      "summary": "Liquid Supply Change",
      "description": "The monthly (30d) net change of supply held by liquid and highly liquid entities. For more information see our [introductory article on Bitcoin liquidity](http://insights.glassnode.com/bitcoin-liquid-supply).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.LiquidChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/lth_net_change",
      "method": "GET",
      "metric": "lth_net_change",
      "summary": "Long-Term Holder Position Change",
      "description": "The monthly net position change of long term holders, i.e. the 30 day change in supply held by long term holders. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.LthNetChange?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/lth_sum",
      "method": "GET",
      "metric": "lth_sum",
      "summary": "Long-Term Holder Supply",
      "description": "The total amount of circulating supply held by long term holders. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.LthSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/lth_loss_sum",
      "method": "GET",
      "metric": "lth_loss_sum",
      "summary": "Long-Term Holder Supply in Loss",
      "description": "The total amount of circulating supply that is currently at loss and held by long term holders. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.LthLossSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/lth_profit_sum",
      "method": "GET",
      "metric": "lth_profit_sum",
      "summary": "Long-Term Holder Supply in Profit",
      "description": "The total amount of circulating supply that is currently in profit and held by long term holders. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.LthProfitSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/minted",
      "method": "GET",
      "metric": "minted",
      "summary": "Minted Supply",
      "description": "The total amount of issued ETH.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Minted?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/supply/activity_retention",
      "method": "GET",
      "metric": "activity_retention",
      "summary": "MoM Activity Retention Supply",
      "description": "This metric shows the supply held by addresses that interact with the asset, segmented into \"retention cohorts\". The cohorts are defined as follows:\n * &#x60;New&#x60;: Addresses that interacted with the asset for the first time during the last 30 days.\n * &#x60;Retained (Increase)&#x60;: Addresses that were active in both the previous and current 30d period, and increased their activity.\n * &#x60;Retained (Equal)&#x60;: Addresses that were active in both the previous and current 30d period, with the same activity.\n * &#x60;Retained (Decrease)&#x60;: Addresses that were active in both the previous and current 30d period, and reduced their activity.\n * &#x60;Resurrected&#x60;: Addresses that were active in the current, but inactive in the previous 30d period.\n * &#x60;Churned&#x60;: Addresses that were not active within the last 30 days, but were active in the previous 30d period.\n * &#x60;Dead&#x60;: Addresses that were inactive in the current and previous 30d interval, but were active at some point before.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ActivityRetention?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/holder_retention",
      "method": "GET",
      "metric": "holder_retention",
      "summary": "MoM Holder Retention Supply",
      "description": "This metric shows the supply held by addresses that hold the selected asset or held it previously, segmented into \"retention cohorts\". The cohorts are defined as follows:\n * &#x60;New&#x60;: Addresses that interacted with the asset for the first time during the last 30 days and have a non-zero balance.\n * &#x60;Retained (Increase)&#x60;: Addresses that had a non-zero balance 30d ago and have increased their holdings since then.\n * &#x60;Retained (Equal)&#x60;: Addresses that have the same non-zero balance now compared to 30 days ago.\n * &#x60;Retained (Decrease)&#x60;: Addresses that had a non-zero balance 30d ago and have reduced their holdings since then, but still have a balance greater than zero.\n * &#x60;Resurrected&#x60;: Addresses with a non-zero balance that didn&#x27;t hold any supply 30 days ago. Note that addresses that appeared for the first time during the last 30 days are not included here and instead captured in the cohort &#x60;New&#x60;.\n\nAddresses with a balance below a certain dust threshold are not considered as holders and their balance is not taken into account in the supply shown here.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.HolderRetention?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/profit_relative",
      "method": "GET",
      "metric": "profit_relative",
      "summary": "Percent Supply in Profit",
      "description": "The percentage of circulating supply in profit, i.e. the percentage of existing coins whose price at the time they last moved was lower than the current price. For more information see [this article](https://medium.com/glassnode-insights/dissecting-bitcoins-unrealised-on-chain-profit-loss-73e735020c8d).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ProfitRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/probably_lost",
      "method": "GET",
      "metric": "probably_lost",
      "summary": "Probably Lost Supply",
      "description": "Probably lost coins refer to so-called \"zombie coins\". Zombie coins are coins that have been inactive since the launch of the first BTC exchange in July 2010. Zombie coins are *probably* lost, as there is a non-zero probability that they can still be spent. Note that over time the chart steadily decreases as coins from before July 2010 are spent, eventually converging to the real number of lost coins. \"Patoshi\" coins are included in this category.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ProbablyLost?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/provably_lost",
      "method": "GET",
      "metric": "provably_lost",
      "summary": "Provably Lost Supply",
      "description": "The total amount of BTC that is *provably* lost. Provably lost coins fall into one of the following categories:\n\n- Unclaimed miner rewards: The Bitcoin protocol states that the miner of a valid block can add a special transaction to claim a reward plus the transaction fees. Miners are not allowed to claim more than the specified reward, but they are allowed to claim less.\n- BTC sent to burn addresses: We identify a burn address as an address whose private key has provably no owner. We consider addresses which are virtually impossible to be randomly generated, for example:  &#x27;1Anything11111111111111111125qfuN&#x27;\n- BTC sent to &#x27;OP_RETURN&#x27;: OP_RETURN is a script opcode that has been primarily used as a means of storing data on the blockchain. Coins sent to OP_RETURN opcode are provably unspendable as they do not get added to the UTXO set.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ProvablyLost?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/rcap_by_date_bands",
      "method": "GET",
      "metric": "rcap_by_date_bands",
      "summary": "Realized Cap by Date Bands",
      "description": "This metric shows a breakdown of the Realized Cap by date bands. Each date band refers to the date when the UTXO was created. The metric is similar to the concept of Realized Cap HODL Waves, however it uses absolute date ranges instead of floating time periods.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.RcapByDateBands?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/rcap_hodl_waves",
      "method": "GET",
      "metric": "rcap_hodl_waves",
      "summary": "Realized Cap HODL Waves",
      "description": "[HODL Waves](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;supply.HodlWaves) weighted by [Realized Price](https://studio.glassnode.com/metrics?a&#x3D;BTC&m&#x3D;market.PriceRealizedUsd). The idea for this visualization of HODL waves was first introduced by [@typerbole](https://twitter.com/typerbole).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.RcapHodlWaves?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/lth_sth_profit_loss_relative",
      "method": "GET",
      "metric": "lth_sth_profit_loss_relative",
      "summary": "Relative Long/Short-Term Holder Supply",
      "description": "The relative amount of circulating supply of held by long- and short-term holders in profit/loss. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.LthSthProfitLossRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/rcap_by_date_bands_relative",
      "method": "GET",
      "metric": "rcap_by_date_bands_relative",
      "summary": "Relative Realized Cap by Date Bands",
      "description": "This metric shows a breakdown of the relative Realized Cap by date bands. Each date band refers to the date when the UTXO was created. The metric is similar to the concept of Realized Cap HODL Waves, however it uses absolute date ranges instead of floating time periods.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.RcapByDateBandsRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/supply_by_date_bands_relative",
      "method": "GET",
      "metric": "supply_by_date_bands_relative",
      "summary": "Relative Supply by Date Bands",
      "description": "This metric shows a breakdown of the relative supply by date bands. Each date band refers to the date when the UTXO was created. The metric is similar to the concept of HODL Waves, however it uses absolute date ranges instead of floating time periods.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.SupplyByDateBandsRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/revived_more_1y_sum",
      "method": "GET",
      "metric": "revived_more_1y_sum",
      "summary": "Revived Supply 1+ Years",
      "description": "The total amount of coins that come back into circulation after being untouched for at least 1 year. In other words, it is the total transfer volume of coins that were previously dormant for 1+ years.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.RevivedMore1YSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/revived_more_2y_sum",
      "method": "GET",
      "metric": "revived_more_2y_sum",
      "summary": "Revived Supply 2+ Years",
      "description": "The total amount of coins that come back into circulation after being untouched for at least 2 years. In other words, it is the total transfer volume of coins that were previously dormant for 2+ years.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.RevivedMore2YSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/revived_more_3y_sum",
      "method": "GET",
      "metric": "revived_more_3y_sum",
      "summary": "Revived Supply 3+ Years",
      "description": "The total amount of coins that come back into circulation after being untouched for at least 3 years. In other words, it is the total transfer volume of coins that were previously dormant for 3+ years.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.RevivedMore3YSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/revived_more_5y_sum",
      "method": "GET",
      "metric": "revived_more_5y_sum",
      "summary": "Revived Supply 5+ Years",
      "description": "The total amount of coins that come back into circulation after being untouched for at least 5 years. In other words, it is the total transfer volume of coins that were previously dormant for 5+ years.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.RevivedMore5YSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/sth_profit_loss_ratio",
      "method": "GET",
      "metric": "sth_profit_loss_ratio",
      "summary": "Short-Term Holder Profit/Loss Ratio",
      "description": "The ratio of the [Short-Term Holder Supply in Profit](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;supply.SthProfitSum) and the [Short-Term Holder Supply in Loss](https://studio.glassnode.com/metrics?a&#x3D;BTC&category&#x3D;&m&#x3D;supply.SthLossSum). Similar to SOPR, it detects local bottoms in bull markets and local tops in bear markets. This metric was first put forward by [ARK Invest](https://twitter.com/ARKInvest).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.SthProfitLossRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/sth_sum",
      "method": "GET",
      "metric": "sth_sum",
      "summary": "Short-Term Holder Supply",
      "description": "The total amount of circulating supply held by short term holders. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.SthSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/sth_loss_sum",
      "method": "GET",
      "metric": "sth_loss_sum",
      "summary": "Short-Term Holder Supply in Loss",
      "description": "The total amount of circulating supply that is currently at loss and held by short term holders. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.SthLossSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/sth_profit_sum",
      "method": "GET",
      "metric": "sth_profit_sum",
      "summary": "Short-Term Holder Supply in Profit",
      "description": "The total amount of circulating supply that is currently in profit and held by short term holders. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.SthProfitSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/sth_lth_realized_value_ratio",
      "method": "GET",
      "metric": "sth_lth_realized_value_ratio",
      "summary": "SLRV Ratio",
      "description": "The Short to Long-Term Realized Value (SLRV) Ratio is the ratio of the 24h realized HODL wave and the 6m-1y realized HODL wave. It serves as a measurement for comparing short-term and long-term velocity for bear market detection. This metric was first put forward by [ARK Invest](https://twitter.com/ARKInvest).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.SthLthRealizedValueRatio?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/supply_by_date_bands",
      "method": "GET",
      "metric": "supply_by_date_bands",
      "summary": "Supply by Date Bands",
      "description": "This metric shows a breakdown of the total supply by date bands. Each date band refers to the date when the UTXO was created. The metric is similar to the concept of HODL Waves, however it uses absolute date ranges instead of floating time periods.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.SupplyByDateBands?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/supply_by_txout_type",
      "method": "GET",
      "metric": "supply_by_txout_type",
      "summary": "Supply by TxOut Type",
      "description": "This metric breaks down the total Bitcoin supply by transaction output types. Transaction output types, or txout types for short, are determined by the type of Bitcoin script conditions that are used to lock Bitcoin in the output. The most common transaction output types are:\n\n- P2TR (Pay to Taproot): Funds are locked using a 32-byte hash that is either (1) a public key, (2) a combination of multiple public keys, or (3) a script hash.\n- P2WPKH (Pay to Witness Public Key Hash): The SegWit version of P2PKH.\n- P2WSH (Pay to Witness Script Hash): The SegWit version of P2SH. This type comes in two variants.\n- P2SH (Pay to Script Hash): Funds are locked using arbitrary Bitcoin script instructions.\n- P2PKH (Pay to Public Key Hash): The successor of P2PK, locking funds using the hash of a public key.\n- P2PK (Pay to Public Key): The first available type, locking funds using a public key.\n- Other: Serves as catch-all for all outputs whose script instructions don&#x27;t match any of most commonly used output types listed above.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.SupplyByTxoutType?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/loss_sum",
      "method": "GET",
      "metric": "loss_sum",
      "summary": "Supply in Loss",
      "description": "The circulating supply in loss, i.e. the amount of coins whose price at the time they last moved was higher than the current price. For more information see [this article](https://medium.com/glassnode-insights/dissecting-bitcoins-unrealised-on-chain-profit-loss-73e735020c8d).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.LossSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/profit_sum",
      "method": "GET",
      "metric": "profit_sum",
      "summary": "Supply in Profit",
      "description": "The circulating supply in profit, i.e. the amount of coins whose price at the time they last moved was lower than the current price. For more information see [this article](https://medium.com/glassnode-insights/dissecting-bitcoins-unrealised-on-chain-profit-loss-73e735020c8d).\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ProfitSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_24h",
      "method": "GET",
      "metric": "active_24h",
      "summary": "Supply Last Active < 24h",
      "description": "The amount of circulating supply last moved in the last 24 hours.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active24H?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_more_10y",
      "method": "GET",
      "metric": "active_more_10y",
      "summary": "Supply Last Active >10y",
      "description": "The amount of circulating supply last moved more than 10 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ActiveMore10Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_more_1y_percent",
      "method": "GET",
      "metric": "active_more_1y_percent",
      "summary": "Supply Last Active 1+ Years Ago",
      "description": "The percent of circulating supply that has not moved in at least 1 year.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ActiveMore1YPercent?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_1d_1w",
      "method": "GET",
      "metric": "active_1d_1w",
      "summary": "Supply Last Active 1d-1w",
      "description": "The amount of circulating supply last moved between 1 day and 1 week ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active1D1W?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_1m_3m",
      "method": "GET",
      "metric": "active_1m_3m",
      "summary": "Supply Last Active 1m-3m",
      "description": "The amount of circulating supply last moved between 1 month and 3 months ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active1M3M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_1w_1m",
      "method": "GET",
      "metric": "active_1w_1m",
      "summary": "Supply Last Active 1w-1m",
      "description": "The amount of circulating supply last moved between 1 week and 1 month ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active1W1M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_1y_2y",
      "method": "GET",
      "metric": "active_1y_2y",
      "summary": "Supply Last Active 1y-2y",
      "description": "The amount of circulating supply last moved between 1 year and 2 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active1Y2Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_more_2y_percent",
      "method": "GET",
      "metric": "active_more_2y_percent",
      "summary": "Supply Last Active 2+ Years Ago",
      "description": "The percent of circulating supply that has not moved in at least 2 years.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ActiveMore2YPercent?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_2y_3y",
      "method": "GET",
      "metric": "active_2y_3y",
      "summary": "Supply Last Active 2y-3y",
      "description": "The amount of circulating supply last moved between 2 years and 3 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active2Y3Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_more_3y_percent",
      "method": "GET",
      "metric": "active_more_3y_percent",
      "summary": "Supply Last Active 3+ Years Ago",
      "description": "The percent of circulating supply that has not moved in at least 3 years.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ActiveMore3YPercent?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_3m_6m",
      "method": "GET",
      "metric": "active_3m_6m",
      "summary": "Supply Last Active 3m-6m",
      "description": "The amount of circulating supply last moved between 3 months and 6 months ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active3M6M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_3y_5y",
      "method": "GET",
      "metric": "active_3y_5y",
      "summary": "Supply Last Active 3y-5y",
      "description": "The amount of circulating supply last moved between 3 years and 5 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active3Y5Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_more_5y_percent",
      "method": "GET",
      "metric": "active_more_5y_percent",
      "summary": "Supply Last Active 5+ Years Ago",
      "description": "The percent of circulating supply that has not moved in at least 5 years.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.ActiveMore5YPercent?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_5y_7y",
      "method": "GET",
      "metric": "active_5y_7y",
      "summary": "Supply Last Active 5y-7y",
      "description": "The amount of circulating supply last moved between 5 years and 7 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active5Y7Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_6m_12m",
      "method": "GET",
      "metric": "active_6m_12m",
      "summary": "Supply Last Active 6m-12m",
      "description": "The amount of circulating supply last moved between 6 months and 12 months ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active6M12M?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/active_7y_10y",
      "method": "GET",
      "metric": "active_7y_10y",
      "summary": "Supply Last Active 7y-10y",
      "description": "The amount of circulating supply last moved between 7 years and 10 years ago.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Active7Y10Y?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/supply/tips",
      "method": "GET",
      "metric": "tips",
      "summary": "Tips (Priority Fee)",
      "description": "The Ethereum Improvement Proposal (EIP-1559), introduced as part of the London Hard Fork, established priority fees, commonly referred to as tips. These fees are paid by users to expedite their transactions, rewarding miners or validators for prioritizing them. Before the Paris upgrade, miners received these tips, but with the transition to Proof-of-Stake, validators now benefit from these additional fees. This metric provides insight into the supplementary income received by validators, beyond the base fee, for ensuring timely transaction processing on the Ethereum network.\n\n[View in Studio](https://studio.glassnode.com/charts/supply.Tips?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/supply/amer_1y_supply_change",
      "method": "GET",
      "metric": "amer_1y_supply_change",
      "summary": "US Year-over-Year Supply Change",
      "description": "\nThis metric aims at giving an estimate for the year-over-year change in the share of the Bitcoin supply to be held/traded in the US.\n\nGeolocation of Bitcoin supply is performed probabilistically at the entity level. The timestamps of all transactions created by an entity are correlated with the working hours of different geographical regions to determine the probabilities for each entity being located in the US, Europe, or Asia. Working hours are defined as:\n\n* US: 8am to 8pm Eastern Time (13:00-01:00 UTC)\n* EU: 8am to 8pm Central European Time (07:00-19:00 UTC)\n* Asia: 8am to 8pm China Standard Time (00:00-12:00 UTC)\n\nAn entity&#x27;s balance will only contribute to the supply in the respective region if the location can be determined with a high certainty. Supply held on exchanges wallets are excluded.\n      \n\n[View in Studio](https://studio.glassnode.com/charts/supply.Amer1YSupplyChange?a=BTC)\n"
    }
  ],
  "transactions": [
    {
      "path": "/v1/metrics/transactions/transfers_count_bridges",
      "method": "GET",
      "metric": "transfers_count_bridges",
      "summary": "Bridges Transactions (Absolute)",
      "description": "The number of transactions (transaction count) in the Ethereum network by contracts that allow transfer of tokens between different blockchains.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountBridges?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_bridges_relative",
      "method": "GET",
      "metric": "transfers_count_bridges_relative",
      "summary": "Bridges Transactions (Relative)",
      "description": "The relative amount (share) of transactions in the Ethereum network by contracts that allow transfer of tokens between different blockchains.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountBridgesRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_adjusted_mean",
      "method": "GET",
      "metric": "transfers_volume_adjusted_mean",
      "summary": "Change-Adjusted Volume (Mean)",
      "description": "The mean value of a transfer, adjusted by change volume. Only successful transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeAdjustedMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_adjusted_median",
      "method": "GET",
      "metric": "transfers_volume_adjusted_median",
      "summary": "Change-Adjusted Volume (Median)",
      "description": "The median value of a transfer, adjusted by change volume. Only successful transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeAdjustedMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_adjusted_sum",
      "method": "GET",
      "metric": "transfers_volume_adjusted_sum",
      "summary": "Change-Adjusted Volume (Total)",
      "description": "The total amount of coins transferred on-chain, adjusted by change volume. Only successful transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeAdjustedSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_from_coinjoins_count",
      "method": "GET",
      "metric": "transfers_from_coinjoins_count",
      "summary": "Coinjoin Output Count",
      "description": "The total count of indistinguishable outputs in coinjoin transactions. The metric is an aggregate of different coinjoin providers. Note that coinjoin metrics rely on heuristics and statistical information that change over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersFromCoinjoinsCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_from_coinjoins_sum",
      "method": "GET",
      "metric": "transfers_volume_from_coinjoins_sum",
      "summary": "Coinjoin Output Volume",
      "description": "The total amount of indistinguishable outputs in coinjoin transactions, i.e. the volume of coins mixed by different coinjoin providers. Note that coinjoin metrics rely on heuristics and statistical information that change over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeFromCoinjoinsSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/contract_calls_external_count",
      "method": "GET",
      "metric": "contract_calls_external_count",
      "summary": "Contract Calls (External)",
      "description": "The total number of smart contract calls on the Ethereum network initiated by Externally Owned Addresses (EOAs), i.e. external transactions. Only successful transactions are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.ContractCallsExternalCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/contract_calls_internal_count",
      "method": "GET",
      "metric": "contract_calls_internal_count",
      "summary": "Contract Calls (Internal)",
      "description": "The total number of internal smart contract calls on the Ethereum network, i.e. contract calls initiated by other contracts (internal transactions). Only successful transactions are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.ContractCallsInternalCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_defi",
      "method": "GET",
      "metric": "transfers_count_defi",
      "summary": "DeFi Transactions (Absolute)",
      "description": "The number of transactions (transaction count) in the Ethereum network by on-chain financial instruments and protocols implemented as smart contracts, including decentralized exchanges (DEXs).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountDefi?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_defi_relative",
      "method": "GET",
      "metric": "transfers_count_defi_relative",
      "summary": "DeFi Transactions (Relative)",
      "description": "The relative amount (share) of transactions in the Ethereum network by on-chain financial instruments and protocols implemented as smart contracts, including decentralized exchanges (DEXs).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountDefiRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_sum",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_from_lth_sum",
      "summary": "Entity-Adjusted LTH Transfer Volume",
      "description": "The total estimated amount of coins moved by [long-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/). Volume transferred within addresses of the same entity is excluded. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedFromLthSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_loss_sum",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_from_lth_loss_sum",
      "summary": "Entity-Adjusted LTH Transfer Volume in Loss",
      "description": "The total estimated amount of coins moved by [long-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in loss. Volume transferred within addresses of the same entity is excluded. Coins are considered to be in loss when the price at the time the coins are spent is lower than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedFromLthLossSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_profit_sum",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_from_lth_profit_sum",
      "summary": "Entity-Adjusted LTH Transfer Volume in Profit",
      "description": "The total estimated amount of coins moved by [long-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in profit. Volume transferred within addresses of the same entity is excluded. Coins are considered to be in profit when the price at the time the coins are spent is higher than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedFromLthProfitSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_sth_profit_loss_relative",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_from_lth_sth_profit_loss_relative",
      "summary": "Entity-Adjusted LTH/STH Transfer Volume in Profit/Loss",
      "description": "The relative amount of coins moved by by [long- and short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in profit/loss. Volume transferred within addresses of the same entity is excluded. Coins are considered to be in profit/loss when the price at the time the coins are spent is higher/lower than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedFromLthSthProfitLossRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_sth_sum",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_from_sth_sum",
      "summary": "Entity-Adjusted STH Transfer Volume",
      "description": "The total estimated amount of coins moved by [short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/). Volume transferred within addresses of the same entity is excluded. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedFromSthSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_sth_loss_sum",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_from_sth_loss_sum",
      "summary": "Entity-Adjusted STH Transfer Volume in Loss",
      "description": "The total estimated amount of coins moved by [short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in loss. Volume transferred within addresses of the same entity is excluded. Coins are considered to be in loss when the price at the time the coins are spent is lower than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedFromSthLossSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_sth_profit_sum",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_from_sth_profit_sum",
      "summary": "Entity-Adjusted STH Transfer Volume in Profit",
      "description": "The total estimated amount of coins moved by [short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in profit. Volume transferred within addresses of the same entity is excluded. Coins are considered to be in profit when the price at the time the coins are spent is higher than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedFromSthProfitSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/entity_adjusted_count",
      "method": "GET",
      "metric": "entity_adjusted_count",
      "summary": "Entity-Adjusted Transaction Count",
      "description": "The estimated entity-adjusted number of transactions is defined as the number of transactions between different entities, i.e. the total number of transactions excluding transactions within addresses of the same entity. Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses.\n\nFor more information [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.EntityAdjustedCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_mean",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_mean",
      "summary": "Entity-Adjusted Volume (Mean)",
      "description": "The mean estimated amount of coins moved between different entities, i.e. excluding the volume transferred within addresses of the same entity. Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses.\n\nFor more information [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_median",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_median",
      "summary": "Entity-Adjusted Volume (Median)",
      "description": "The median estimated amount of coins moved between different entities, i.e. excluding volume transferred within addresses of the same entity. Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses.\n\nFor more information [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_sum",
      "method": "GET",
      "metric": "transfers_volume_entity_adjusted_sum",
      "summary": "Entity-Adjusted Volume (Total)",
      "description": "The total estimated amount of coins moved between different entities, i.e. the total volumed transferred excluding the volume transferred within addresses of the same entity. Entities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses.\n\nFor more information [this article](https://insights.glassnode.com/true-bitcoin-volume).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeEntityAdjustedSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_erc20",
      "method": "GET",
      "metric": "transfers_count_erc20",
      "summary": "ERC-20 Transactions (Absolute)",
      "description": "The number of transactions (transaction count) in the Ethereum network by transactions calling ERC20 contracts. Stablecoins contracts are excluded here.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountErc20?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_erc20_relative",
      "method": "GET",
      "metric": "transfers_count_erc20_relative",
      "summary": "ERC-20 Transactions (Relative)",
      "description": "The relative amount (share) of transactions in the Ethereum network by transactions calling ERC20 contracts. Stablecoins contracts are excluded here.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountErc20Relative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_to_exchanges_count",
      "method": "GET",
      "metric": "transfers_to_exchanges_count",
      "summary": "Exchange Deposits",
      "description": "The total count of transfers to exchange addresses, i.e. the number of on-chain deposits to exchanges. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersToExchangesCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_to_exchanges_mean",
      "method": "GET",
      "metric": "transfers_volume_to_exchanges_mean",
      "summary": "Exchange Inflow Volume (Mean)",
      "description": "The mean value of a transfer to exchanges addresses. Only successful transfers are counted. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeToExchangesMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_to_exchanges_sum",
      "method": "GET",
      "metric": "transfers_volume_to_exchanges_sum",
      "summary": "Exchange Inflow Volume (Total)",
      "description": "The total amount of coins transferred to exchange addresses. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeToExchangesSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_exchanges_net",
      "method": "GET",
      "metric": "transfers_volume_exchanges_net",
      "summary": "Exchange Netflow Volume",
      "description": "The difference in volume flowing into exchanges and out of exchanges, i.e. the net flow of coins into/out of exchanges. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeExchangesNet?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_exchanges_net_by_size",
      "method": "GET",
      "metric": "transfers_volume_exchanges_net_by_size",
      "summary": "Exchange Netflow Volume by Size",
      "description": "Breakdown of the net flow of coins into/out of exchanges by the USD value of the transactions. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable - the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeExchangesNetBySize?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_from_exchanges_mean",
      "method": "GET",
      "metric": "transfers_volume_from_exchanges_mean",
      "summary": "Exchange Outflow Volume (Mean)",
      "description": "The mean value of a transfer from exchanges addresses. Only successful transfers are counted. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeFromExchangesMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_from_exchanges_sum",
      "method": "GET",
      "metric": "transfers_volume_from_exchanges_sum",
      "summary": "Exchange Outflow Volume (Total)",
      "description": "The total amount of coins transferred from exchange addresses. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeFromExchangesSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_from_exchanges_count",
      "method": "GET",
      "metric": "transfers_from_exchanges_count",
      "summary": "Exchange Withdrawals",
      "description": "The total count of transfers from exchange addresses, i.e. the number of on-chain withdrawals from exchanges. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersFromExchangesCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_within_exchanges_sum",
      "method": "GET",
      "metric": "transfers_volume_within_exchanges_sum",
      "summary": "In-House Exchange Volume",
      "description": "The total amount of coins transferred within wallets of the same exchange. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeWithinExchangesSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/inscriptions_size_share",
      "method": "GET",
      "metric": "inscriptions_size_share",
      "summary": "Inscriptions Block Size Share",
      "description": "This metric shows the share or proportion of the data size of transactions including inscriptions for each inscription type relative to the total block size (hourly or daily). It provides insights into the distribution of data size across different inscription types. The bar chart represents the share of each type&#x27;s data size over time, with the x-axis representing the block time resolution and the y-axis representing the share of the block size.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.InscriptionsSizeShare?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/inscriptions_fee_share",
      "method": "GET",
      "metric": "inscriptions_fee_share",
      "summary": "Inscriptions Fee Share",
      "description": "This metric shows the share or proportion of fees associated with transactions including inscriptions for each type relative to the total fees (hourly or daily). The bar chart represents the share of fees for each type over time, with the x-axis representing the block time resolution and the y-axis displaying the share of fees.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.InscriptionsFeeShare?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/inscriptions_fee",
      "method": "GET",
      "metric": "inscriptions_fee",
      "summary": "Inscriptions Fees",
      "description": "This metric indicates the fees associated with transactions including inscriptions for each type. The bar chart visualizes the fees (in BTC) for each type over time, with the x-axis representing the block time resolution and the y-axis displaying the fees.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.InscriptionsFee?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/inscriptions_size_sum",
      "method": "GET",
      "metric": "inscriptions_size_sum",
      "summary": "Inscriptions Total Block Size",
      "description": "This metric represents the cumulative sum of the size (in terms of data size) of transactions for different types of inscription. The bar chart visualizes the total data size accumulated over time for each inscription type, with the x-axis representing the block time resolution and the y-axis displaying the cumulative sum of size.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.InscriptionsSizeSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/inscriptions_count_sum",
      "method": "GET",
      "metric": "inscriptions_count_sum",
      "summary": "Inscriptions Total Count",
      "description": "This metric presents the cumulative sum of transactions including inscriptions for each inscription type. The bar chart illustrates the cumulative sum of each type, with the x-axis representing the block time resolution and the y-axis displaying the cumulative sum of inscription transactions.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.InscriptionsCountSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/inscriptions_count",
      "method": "GET",
      "metric": "inscriptions_count",
      "summary": "Inscriptions Transaction Count",
      "description": "This metric represents the total number of transactions with inscriptions for each inscription type (text (other than brc-20), text/brc-20, image, video, other, and audio). The chart visualizes this metric over time, using a bar chart, with the x-axis representing the block time resolution (e.g., hourly or daily) and the y-axis representing the count of inscription transactions.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.InscriptionsCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/inscriptions_count_share",
      "method": "GET",
      "metric": "inscriptions_count_share",
      "summary": "Inscriptions Transaction Count Share",
      "description": "This metric shows the share or proportion of transactions with inscriptions for each type relative to the total volume (hourly or daily). The bar chart displays the share of each inscription type over time, with the x-axis representing the block time resolution and the y-axis representing the share of inscription transactions.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.InscriptionsCountShare?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_between_exchanges_count",
      "method": "GET",
      "metric": "transfers_between_exchanges_count",
      "summary": "Inter-Exchange Transfers",
      "description": "The total count of transfers between exchanges. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersBetweenExchangesCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_between_exchanges_sum",
      "method": "GET",
      "metric": "transfers_volume_between_exchanges_sum",
      "summary": "Inter-Exchange Volume",
      "description": "The total amount of coins transferred between exchanges. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeBetweenExchangesSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_lth_to_exchanges_loss_sum",
      "method": "GET",
      "metric": "transfers_volume_lth_to_exchanges_loss_sum",
      "summary": "Long-Term Holder in Loss to Exchanges (Volume)",
      "description": "The total amount of coins transferred from [long-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in loss to exchange wallets. Only direct transfers are counted. Coins are considered to be in loss when the price at the time the coins are spent is lower than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeLthToExchangesLossSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_lth_to_exchanges_profit_sum",
      "method": "GET",
      "metric": "transfers_volume_lth_to_exchanges_profit_sum",
      "summary": "Long-Term Holder in Profit to Exchanges (Volume)",
      "description": "The total amount of coins transferred from [long-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in profit to exchange wallets. Only direct transfers are counted. Coins are considered to be in profit when the price at the time the coins are spent is higher than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeLthToExchangesProfitSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_lth_to_exchanges_sum",
      "method": "GET",
      "metric": "transfers_volume_lth_to_exchanges_sum",
      "summary": "Long-Term Holder to Exchanges (Volume)",
      "description": "The total amount of coins transferred from [long-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) to exchange wallets. Only direct transfers are counted. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeLthToExchangesSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_lth_sth_to_exchanges_profit_loss_relative",
      "method": "GET",
      "metric": "transfers_volume_lth_sth_to_exchanges_profit_loss_relative",
      "summary": "LTH/STH Transfer Volume in Profit/Loss to Exchanges",
      "description": "The relative amount of coins moved by by [long- and short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in profit/loss to exchanges. Only direct transfers are counted. Coins are considered to be in profit/loss when the price at the time the coins are spent is higher/lower than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeLthSthToExchangesProfitLossRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_to_miners_count",
      "method": "GET",
      "metric": "transfers_to_miners_count",
      "summary": "Miner Incoming Transfers",
      "description": "The total number of transfers in which the receiver is a miners&#x27; address.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersToMinersCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_to_miners_sum",
      "method": "GET",
      "metric": "transfers_volume_to_miners_sum",
      "summary": "Miner Inflow Volume",
      "description": "The total amount of coins transferred to miner addresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeToMinersSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_miners_net",
      "method": "GET",
      "metric": "transfers_volume_miners_net",
      "summary": "Miner Netflow Volume",
      "description": "The difference between miner&#x27;s inflow and outflow, i.e the net flow of coins into/out of miner addresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeMinersNet?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_from_miners_sum",
      "method": "GET",
      "metric": "transfers_volume_from_miners_sum",
      "summary": "Miner Outflow Volume",
      "description": "The total amount of coins transferred from miner addresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeFromMinersSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_from_miners_count",
      "method": "GET",
      "metric": "transfers_from_miners_count",
      "summary": "Miner Outgoing Transfers",
      "description": "The total number of transfers in which the sender is a miners&#x27; address.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersFromMinersCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_miners_to_exchanges",
      "method": "GET",
      "metric": "transfers_volume_miners_to_exchanges",
      "summary": "Miners to Exchanges",
      "description": "The total amount of coins transferred from miners to exchange wallets. Only direct transfers are counted. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeMinersToExchanges?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_miners_to_exchanges_all",
      "method": "GET",
      "metric": "transfers_volume_miners_to_exchanges_all",
      "summary": "Miners to Exchanges (Stacked)",
      "description": "The total amount of coins transferred from miners to exchange wallets. Only direct transfers are counted. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeMinersToExchangesAll?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_nfts",
      "method": "GET",
      "metric": "transfers_count_nfts",
      "summary": "NFTs Transactions (Absolute)",
      "description": "The number of transactions (transaction count) in the Ethereum network by transactions interacting with non-fungible tokens. This category includes of both token contract standards (ERC721, ERC1155), as well as NFT marketplaces (OpenSea, Blur, LooksRare, Rarible, SuperRare) for trading those.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountNfts?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_nfts_relative",
      "method": "GET",
      "metric": "transfers_count_nfts_relative",
      "summary": "NFTs Transactions (Relative)",
      "description": "The relative amount (share) of transactions in the Ethereum network by transactions interacting with non-fungible tokens. This category includes of both token contract standards (ERC721, ERC1155), as well as NFT marketplaces (OpenSea, Blur, LooksRare, Rarible, SuperRare) for trading those.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountNftsRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_to_otc_desks_count",
      "method": "GET",
      "metric": "transfers_to_otc_desks_count",
      "summary": "OTC Desks Incoming Transactions",
      "description": "The total count of transfers to OTC desk addresses. This data is based on three different OTC desks. Note that OTC metrics are based on our labeled data that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersToOtcDesksCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_to_otc_desks_sum",
      "method": "GET",
      "metric": "transfers_volume_to_otc_desks_sum",
      "summary": "OTC Desks Inflows",
      "description": "The total amount of coins transferred to OTC desk addresses. This data is based on three different OTC desks. Note that OTC metrics are based on our labeled data that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeToOtcDesksSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_from_otc_desks_sum",
      "method": "GET",
      "metric": "transfers_volume_from_otc_desks_sum",
      "summary": "OTC Desks Outflows",
      "description": "The total amount of coins transferred from OTC desk addresses. This data is based on three different OTC desks. Note that OTC metrics are based on our labeled data that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeFromOtcDesksSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_from_otc_desks_count",
      "method": "GET",
      "metric": "transfers_from_otc_desks_count",
      "summary": "OTC Desks Outgoing Transactions",
      "description": "The total count of transfers from OTC desk addresses. This data is based on three different OTC desks. Note that OTC metrics are based on our labeled data that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersFromOtcDesksCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_profit_relative",
      "method": "GET",
      "metric": "transfers_volume_profit_relative",
      "summary": "Percent Volume in Profit",
      "description": "The percentage of transfer volume in profit, i.e. the percentage of transferred coins whose price at the time of their previous movement was lower than the current price. Spent outputs with a lifespan of less than an hour are discarded.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeProfitRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_by_size_entity_adjusted_relative",
      "method": "GET",
      "metric": "transfers_volume_by_size_entity_adjusted_relative",
      "summary": "Relative Transfer Volume by Size (Entity-Adjusted)",
      "description": "Entity-adjusted relative on-chain volume breakdown by the USD value of the transfers.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeBySizeEntityAdjustedRelative?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/runes_count",
      "method": "GET",
      "metric": "runes_count",
      "summary": "Runes Count",
      "description": "The number of transactions with new Rune protocol messages (Runestones).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.RunesCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/runes_count_share",
      "method": "GET",
      "metric": "runes_count_share",
      "summary": "Runes Count Share",
      "description": "The relative number transactions including Rune protocol messages (Runestones).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.RunesCountShare?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/runes_fee_share",
      "method": "GET",
      "metric": "runes_fee_share",
      "summary": "Runes Fee Share",
      "description": "The relative amount of fees paid in transactions with Rune protocol messages (Runestones) compared to the total fees.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.RunesFeeShare?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/runes_fee",
      "method": "GET",
      "metric": "runes_fee",
      "summary": "Runes Fees",
      "description": "The fee paid in transactions with Rune protocol messages (Runestones).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.RunesFee?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/runes_count_sum",
      "method": "GET",
      "metric": "runes_count_sum",
      "summary": "Runes Total Count",
      "description": "The total number of transactions with Rune protocol messages (Runestones).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.RunesCountSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/segwit_adoption",
      "method": "GET",
      "metric": "segwit_adoption",
      "summary": "SegWit Adoption",
      "description": "These metrics quantify the degree of SegWit adoption on the Bitcoin network. *Adoption* is the community-established way of measuring SegWit adoption and refers to the relative number of transactions that spent at least one SegWit input. *Utilization* is a more granular approach that refers to the relative number of spent SegWit inputs instead. For more information please see our [research article](https://insights.glassnode.com/segwit-adoption).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.SegwitAdoption?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_sth_to_exchanges_loss_sum",
      "method": "GET",
      "metric": "transfers_volume_sth_to_exchanges_loss_sum",
      "summary": "Short-Term Holder in Loss to Exchanges (Volume)",
      "description": "The total amount of coins transferred from [short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in loss to exchange wallets. Only direct transfers are counted. Coins are considered to be in loss when the price at the time the coins are spent is lower than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeSthToExchangesLossSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_sth_to_exchanges_profit_sum",
      "method": "GET",
      "metric": "transfers_volume_sth_to_exchanges_profit_sum",
      "summary": "Short-Term Holder in Profit to Exchanges (Volume)",
      "description": "The total amount of coins transferred from [short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) in profit to exchange wallets. Only direct transfers are counted. Coins are considered to be in profit when the price at the time the coins are spent is higher than the entity&#x27;s average on-chain acquisition price for its funds. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeSthToExchangesProfitSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_sth_to_exchanges_sum",
      "method": "GET",
      "metric": "transfers_volume_sth_to_exchanges_sum",
      "summary": "Short-Term Holder to Exchanges (Volume)",
      "description": "The total amount of coins transferred from [short-term holders](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) to exchange wallets. Only direct transfers are counted. Long- and Short-Term Holder supply is defined with respect to the [entity&#x27;s averaged purchasing date](https://insights.glassnode.com/quantifying-bitcoin-hodler-supply/) with weights given by a logistic function centered at an age of 155 days and a transition width of 10 days.\n\nEntities are defined as a cluster of addresses that are controlled by the same network entity and are estimated through advanced heuristics and Glassnode&#x27;s proprietary clustering algorithms. Note that entity–based metrics are based on data science techniques and statistical information that changes over time and are therefore mutable – the data is stable, but most recent data points are subject to slight fluctuations as time progresses. For more information see [this article](https://insights.glassnode.com/true-bitcoin-volume/).\n\nNote that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeSthToExchangesSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/spent_output_types_share",
      "method": "GET",
      "metric": "spent_output_types_share",
      "summary": "Spent Output Types",
      "description": "This chart shows the shares of different transaction output types spent on the Bitcoin network. Transaction output types, or txout types for short, are determined by the type of Bitcoin script conditions that are used to lock Bitcoin in the output. The most common transaction output types are:\n\n- P2PK (Pay to Public Key): The first available type, locking funds using a public key.\n- P2PKH (Pay to Public Key Hash): The successor of P2PK, locking funds using the hash of a public key.\n- Bare Multisig: An outdated approach to lock funds using multiple public keys.\n- P2SH (Pay to Script Hash): Funds are locked using arbitrary Bitcoin script instructions. This type is primarily used for Multisig or wrapped SegWit (see below).\n- P2WPKH (Pay to Witness Public Key Hash): The SegWit version of P2PKH. This type comes in two variants: for P2WPKH, spending conditions are directly encoded in the locking script; for nested P2WPKH, spending conditions are nested in a P2SH script.\n- P2WSH (Pay to Witness Script Hash): The SegWit version of P2SH. This type comes in two variants: for P2WSH, spending conditions are directly encoded in the locking script; for nested P2WSH, spending conditions are nested in a P2SH script.\n- P2TR (Pay to Taproot): Funds are locked using a 32-byte hash that is either (1) a public key, (2) a combination of multiple public keys, or (3) a script hash.\n- Non-standard: Serves as catch-all for all outputs whose script instructions don&#x27;t match any of the well-defined output types.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.SpentOutputTypesShare?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_stablecoins",
      "method": "GET",
      "metric": "transfers_count_stablecoins",
      "summary": "Stablecoins Transactions (Absolute)",
      "description": "The number of transactions (transaction count) in the Ethereum network by stablecoin transactions. Stablecoin are fungible tokens that have their value pegged to an off-chain asset, either by the issuer or by an algorithm. We include 150+ stablecoins in this category, with USDT, USDC, UST, BUSD, and DAI being the most prominent ones.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountStablecoins?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_stablecoins_relative",
      "method": "GET",
      "metric": "transfers_count_stablecoins_relative",
      "summary": "Stablecoins Transactions (Relative)",
      "description": "The relative amount (share) of transactions in the Ethereum network by stablecoin transactions. Stablecoin are fungible tokens that have their value pegged to an off-chain asset, either by the issuer or by an algorithm. We include 150+ stablecoins in this category, with USDT, USDC, UST, BUSD, and DAI being the most prominent ones.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountStablecoinsRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/taproot_adoption",
      "method": "GET",
      "metric": "taproot_adoption",
      "summary": "Taproot Adoption",
      "description": "These metrics quantify the degree of Taproot adoption on the Bitcoin network. *Adoption* is inspired by the approach used by the community-established way of measuring SegWit adoption. The metric expresses adoption by relating the number of transactions that spend at least one Taproot input to the overall number of transactions. The Taproot utilization metric is a different way to express adoption that is more granular and based on relating the number of spent Taproot inputs to the overall number of spent inputs.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TaprootAdoption?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_by_size_entity_adjusted_sum",
      "method": "GET",
      "metric": "transfers_volume_by_size_entity_adjusted_sum",
      "summary": "Total Transfer Volume by Size (Entity-Adjusted)",
      "description": "Entity-adjusted on-chain volume breakdown by the USD value of the transfers.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeBySizeEntityAdjustedSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/count",
      "method": "GET",
      "metric": "count",
      "summary": "Transaction Count",
      "description": "The total amount of transactions. Only successful transactions are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.Count?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/rate",
      "method": "GET",
      "metric": "rate",
      "summary": "Transaction Rate",
      "description": "The total amount of transactions per second. Only successful transactions are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.Rate?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/size_mean",
      "method": "GET",
      "metric": "size_mean",
      "summary": "Transaction Size (Mean)",
      "description": "The mean size of a transaction within the time period (in bytes).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.SizeMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/size_sum",
      "method": "GET",
      "metric": "size_sum",
      "summary": "Transaction Size (Total)",
      "description": "The total size of all transactions within the time period (in bytes).\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.SizeSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/tx_types_breakdown_count",
      "method": "GET",
      "metric": "tx_types_breakdown_count",
      "summary": "Transaction Type Breakdown (Absolute)",
      "description": "The number of transactions (transaction count) in the Ethereum network by category. Transactions are classified into the following categories:\n\n- *Vanilla:* Pure ETH transfers between Externally Owned Accounts (EOAs), with no contracts being called.\n\n- *ERC20:* All transactions calling ERC20 contracts. Contracts in the Stablecoins category are excluded here.\n\n- *Stablecoins:* Fungible tokens that have their value pegged to an off-chain asset, either by the issuer or by an algorithm. We include 150+ stablecoins in this category, with USDT, USDC, UST, BUSD, and DAI being the most prominent ones.\n\n- *DeFi:* On-chain financial instruments and protocols implemented as smart contracts, including decentralized exchanges (DEXs). We include over 90+ DeFi protocols in this category, such as Uniswap, Etherdelta, 1inch, Sushiswap, Aave, and 0x.\n\n- *Bridges:* Contracts allowing transfer of tokens between different blockchains. We include 50+ bridges in this category, such as Ronin, Polygon, Optimism, and Arbitrum.\n\n- *NFTs:* Transactions interacting with non-fungible tokens. This category includes of both token contract standards (ERC721, ERC1155), as well as NFT marketplaces (OpenSea, Blur, LooksRare, Rarible, SuperRare) for trading those.\n\n- *MEV Bots:* Miner Extractable Value (MEV) bots execute transactions for profit by reordering, inserting, and censoring transactions within blocks.\n\n- *Other:* This category includes all other transactions in the Ethereum network that are not included in categories listed above.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TxTypesBreakdownCount?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/tx_types_breakdown_relative",
      "method": "GET",
      "metric": "tx_types_breakdown_relative",
      "summary": "Transaction Type Breakdown (Relative)",
      "description": "The relative amount (share) of transactions in the Ethereum network by category. Transactions are classified into one of the following categories:\n\n- *Vanilla:* Pure ETH transfers between Externally Owned Accounts (EOAs), with no contracts being called.\n\n- *ERC20:* All transactions calling ERC20 contracts. Contracts in the Stablecoins category are excluded here.\n\n- *Stablecoins:* Fungible tokens that have their value pegged to an off-chain asset, either by the issuer or by an algorithm. We include 150+ stablecoins in this category, with USDT, USDC, UST, BUSD, and DAI being the most prominent ones.\n\n- *DeFi:* On-chain financial instruments and protocols implemented as smart contracts, including decentralized exchanges (DEXs). We include over 90+ DeFi protocols in this category, such as Uniswap, Etherdelta, 1inch, Sushiswap, Aave, and 0x.\n\n- *Bridges:* Contracts allowing transfer of tokens between different blockchains. We include 50+ bridges in this category, such as Ronin, Polygon, Optimism, and Arbitrum.\n\n- *NFTs:* Transactions interacting with non-fungible tokens. This category includes of both token contract standards (ERC721, ERC1155), as well as NFT marketplaces (OpenSea, Blur, LooksRare, Rarible, SuperRare) for trading those.\n\n- *MEV Bots:* Miner Extractable Value (MEV) bots execute transactions for profit by reordering, inserting, and censoring transactions within blocks.\n\n- *Other:* This category includes all other transactions in the Ethereum network that are not included in categories listed above.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TxTypesBreakdownRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count",
      "method": "GET",
      "metric": "transfers_count",
      "summary": "Transfer Count",
      "description": "The total amount of transfers. One transaction can trigger one or more transfers. Only successful, non-zero transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_rate",
      "method": "GET",
      "metric": "transfers_rate",
      "summary": "Transfer Rate",
      "description": "The total amount of transfers per second. One transaction can trigger one or more transfers. Only successful, non-zero transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersRate?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_mean",
      "method": "GET",
      "metric": "transfers_volume_mean",
      "summary": "Transfer Volume (Mean)",
      "description": "The mean value of a transfer. Only successful transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeMean?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_median",
      "method": "GET",
      "metric": "transfers_volume_median",
      "summary": "Transfer Volume (Median)",
      "description": "The median value of a transfer. Only successful transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeMedian?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_sum",
      "method": "GET",
      "metric": "transfers_volume_sum",
      "summary": "Transfer Volume (Total)",
      "description": "The total amount of coins transferred on-chain. Only successful transfers are counted.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_loss_sum",
      "method": "GET",
      "metric": "transfers_volume_loss_sum",
      "summary": "Transfer Volume in Loss",
      "description": "The total transfer volume in loss, i.e. the amount of transferred coins whose price at the time of their previous movement was higher than the price during the current transfer. Spent outputs with a lifespan of less than an hour are discarded.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeLossSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_profit_sum",
      "method": "GET",
      "metric": "transfers_volume_profit_sum",
      "summary": "Transfer Volume in Profit",
      "description": "The total transfer volume in profit, i.e. the amount of transferred coins whose price at the time of their previous movement was lower than the price during the current transfer. Spent outputs with a lifespan of less than an hour are discarded.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeProfitSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_vanilla",
      "method": "GET",
      "metric": "transfers_count_vanilla",
      "summary": "Vanilla Transactions (Absolute)",
      "description": "The amount of gas consumed by the Ethereum network by vanilla transactions. Vanilla transactions are pure ETH transfers between Externally Owned Accounts (EOAs), with no contracts being called.\n      If at least one of the EOAs participating in the transaction (the receiver, the sender, or both) belongs to an exchange, the amount will be represented in the exchange cohort.\n      Note that occasionally the value of the last datapoint can slightly change as some addresses initially transact as \"vanilla\" before their associated smart contract deployment is observed.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountVanilla?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_count_vanilla_relative",
      "method": "GET",
      "metric": "transfers_count_vanilla_relative",
      "summary": "Vanilla Transactions (Relative)",
      "description": "The relative amount (share) of gas consumed by the Ethereum network by vanilla transactions. Vanilla transactions are pure ETH transfers between Externally Owned Accounts (EOAs), with no contracts being called.\n      If at least one of the EOAs participating in the transaction (the receiver, the sender, or both) belongs to an exchange, the amount will be represented in the exchange cohort.\n      Note that occasionally the value of the last datapoint can slightly change as some addresses initially transact as \"vanilla\" before their associated smart contract deployment is observed.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersCountVanillaRelative?a=ETH)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_whales_to_exchanges_count",
      "method": "GET",
      "metric": "transfers_whales_to_exchanges_count",
      "summary": "Whale Deposits to Exchanges (Counts)",
      "description": "The total count of transfers from whales to exchange addresses. Whales are defined as network entities (cluster of addresses) that hold at least 1,000 BTC. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersWhalesToExchangesCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_whales_to_exchanges_sum",
      "method": "GET",
      "metric": "transfers_volume_whales_to_exchanges_sum",
      "summary": "Whale Deposits to Exchanges (Volume)",
      "description": "The total amount of coins transferred from whales to exchange wallets. Only direct transfers are counted. Whales are defined as network entities (cluster of addresses) that hold at least 1,000 BTC. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeWhalesToExchangesSum?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_exchanges_to_whales_count",
      "method": "GET",
      "metric": "transfers_exchanges_to_whales_count",
      "summary": "Whale Withdrawals from Exchanges (Counts)",
      "description": "The total count of transfers from exchange addresses to whales. Whales are defined as network entities (cluster of addresses) that hold at least 1,000 BTC. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersExchangesToWhalesCount?a=BTC)\n"
    },
    {
      "path": "/v1/metrics/transactions/transfers_volume_exchanges_to_whales_sum",
      "method": "GET",
      "metric": "transfers_volume_exchanges_to_whales_sum",
      "summary": "Whale Withdrawals from Exchanges (Volume)",
      "description": "The total amount of coins transferred from exchange wallets to whale entities. Only direct transfers are counted. Whales are defined as network entities (cluster of addresses) that hold at least 1,000 BTC. Note that exchange metrics are based on our labeled data of exchange addresses that we constantly keep updating, as well as data science techniques and statistical information that changes over time. Therefore these metrics are mutable – the data is stable, but especially most recent data points are subject to slight fluctuations as time progresses.\n\n[View in Studio](https://studio.glassnode.com/charts/transactions.TransfersVolumeExchangesToWhalesSum?a=BTC)\n"
    }
  ]
}