{
  "api": {
    "name": "Glassnode API",
    "version": "v1",
    "base_url": "https://api.glassnode.com",
    "documentation": "https://docs.glassnode.com/basic-api/endpoints",
    "authentication": "API key required"
  },
  "categories": {
    "addresses": {
      "name": "Addresses",
      "endpoint_count": 50,
      "endpoints": [
        {
          "metric": "accumulation_balance",
          "path": "/v1/metrics/addresses/accumulation_balance",
          "method": "GET",
          "summary": "Accumulation Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/accumulation_balance",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "accumulation_count",
          "path": "/v1/metrics/addresses/accumulation_count",
          "method": "GET",
          "summary": "Accumulation Addresses",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/accumulation_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "active_count",
          "path": "/v1/metrics/addresses/active_count",
          "method": "GET",
          "summary": "Active Addresses",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/active_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "active_count_with_contracts",
          "path": "/v1/metrics/addresses/active_count_with_contracts",
          "method": "GET",
          "summary": "Active Addresses (with contracts)",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/active_count_with_contracts",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "activity_retention",
          "path": "/v1/metrics/addresses/activity_retention",
          "method": "GET",
          "summary": "MoM Activity Retention",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/activity_retention",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "activity_retention_rate",
          "path": "/v1/metrics/addresses/activity_retention_rate",
          "method": "GET",
          "summary": "Activity Retention Rate",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/activity_retention_rate",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "count",
          "path": "/v1/metrics/addresses/count",
          "method": "GET",
          "summary": "Total Addresses",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "holder_accumulation_ratio",
          "path": "/v1/metrics/addresses/holder_accumulation_ratio",
          "method": "GET",
          "summary": "Holder Accumulation Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/holder_accumulation_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "holder_retention",
          "path": "/v1/metrics/addresses/holder_retention",
          "method": "GET",
          "summary": "MoM Holder Retention",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/holder_retention",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "holder_retention_rate",
          "path": "/v1/metrics/addresses/holder_retention_rate",
          "method": "GET",
          "summary": "Holder Retention Rate",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/holder_retention_rate",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "loss_count",
          "path": "/v1/metrics/addresses/loss_count",
          "method": "GET",
          "summary": "Addresses in Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/loss_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_100_count",
          "path": "/v1/metrics/addresses/min_100_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ 100",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_100_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_100_usd_count",
          "path": "/v1/metrics/addresses/min_100_usd_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ $100",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_100_usd_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_100k_usd_count",
          "path": "/v1/metrics/addresses/min_100k_usd_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ $100k",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_100k_usd_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_10_count",
          "path": "/v1/metrics/addresses/min_10_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ 10",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_10_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_10_usd_count",
          "path": "/v1/metrics/addresses/min_10_usd_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ $10",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_10_usd_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_10k_count",
          "path": "/v1/metrics/addresses/min_10k_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ 10k",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_10k_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_10k_usd_count",
          "path": "/v1/metrics/addresses/min_10k_usd_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ $10k",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_10k_usd_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_1_count",
          "path": "/v1/metrics/addresses/min_1_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ 1",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_1_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_1_usd_count",
          "path": "/v1/metrics/addresses/min_1_usd_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ $1",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_1_usd_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_1k_count",
          "path": "/v1/metrics/addresses/min_1k_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ 1k",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_1k_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_1k_usd_count",
          "path": "/v1/metrics/addresses/min_1k_usd_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ $1k",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_1k_usd_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_1m_usd_count",
          "path": "/v1/metrics/addresses/min_1m_usd_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ $1M",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_1m_usd_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_32_count",
          "path": "/v1/metrics/addresses/min_32_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ 32 ETH",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_32_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_point_1_count",
          "path": "/v1/metrics/addresses/min_point_1_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ 0.1",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_point_1_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_point_zero_1_count",
          "path": "/v1/metrics/addresses/min_point_zero_1_count",
          "method": "GET",
          "summary": "Addresses with Balance ≥ 0.01",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/min_point_zero_1_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "new_non_zero_count",
          "path": "/v1/metrics/addresses/new_non_zero_count",
          "method": "GET",
          "summary": "New Addresses",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/new_non_zero_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "non_zero_count",
          "path": "/v1/metrics/addresses/non_zero_count",
          "method": "GET",
          "summary": "Addresses with Non-Zero Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/non_zero_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "profit_count",
          "path": "/v1/metrics/addresses/profit_count",
          "method": "GET",
          "summary": "Addresses in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/profit_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "profit_relative",
          "path": "/v1/metrics/addresses/profit_relative",
          "method": "GET",
          "summary": "Percent Addresses in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/profit_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "receiving_count",
          "path": "/v1/metrics/addresses/receiving_count",
          "method": "GET",
          "summary": "Receiving Addresses",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/receiving_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "receiving_from_exchanges_count",
          "path": "/v1/metrics/addresses/receiving_from_exchanges_count",
          "method": "GET",
          "summary": "Withdrawing Addresses",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/receiving_from_exchanges_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sending_count",
          "path": "/v1/metrics/addresses/sending_count",
          "method": "GET",
          "summary": "Sending Addresses",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/sending_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sending_to_exchanges_count",
          "path": "/v1/metrics/addresses/sending_to_exchanges_count",
          "method": "GET",
          "summary": "Depositing Addresses",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/sending_to_exchanges_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "supply_balance_0001_001",
          "path": "/v1/metrics/addresses/supply_balance_0001_001",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance 0.001 - 0.01",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_0001_001",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_001_01",
          "path": "/v1/metrics/addresses/supply_balance_001_01",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance 0.01 - 0.1",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_001_01",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_01_1",
          "path": "/v1/metrics/addresses/supply_balance_01_1",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance 0.1 - 1",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_01_1",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_01_10_ppm",
          "path": "/v1/metrics/addresses/supply_balance_01_10_ppm",
          "method": "GET",
          "summary": "Supply in Addresses Holding between 0.01 and 10 ppm",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_01_10_ppm",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_1000_10000_ppm",
          "path": "/v1/metrics/addresses/supply_balance_1000_10000_ppm",
          "method": "GET",
          "summary": "Supply in Addresses Holding between 1000 and 10000 ppm",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_1000_10000_ppm",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_100_1k",
          "path": "/v1/metrics/addresses/supply_balance_100_1k",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance 100 - 1k",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_100_1k",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_10_100",
          "path": "/v1/metrics/addresses/supply_balance_10_100",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance 10 - 100",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_10_100",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_10_1000_ppm",
          "path": "/v1/metrics/addresses/supply_balance_10_1000_ppm",
          "method": "GET",
          "summary": "Supply in Addresses Holding between 10 and 1000 ppm",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_10_1000_ppm",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_10k_100k",
          "path": "/v1/metrics/addresses/supply_balance_10k_100k",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance 10k - 100k",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_10k_100k",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_1_10",
          "path": "/v1/metrics/addresses/supply_balance_1_10",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance 1 - 10",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_1_10",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_1k_10k",
          "path": "/v1/metrics/addresses/supply_balance_1k_10k",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance 1k - 10k",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_1k_10k",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_above_10000_ppm",
          "path": "/v1/metrics/addresses/supply_balance_above_10000_ppm",
          "method": "GET",
          "summary": "Supply in Addresses Holding above 10000 ppm",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_above_10000_ppm",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_less_0001",
          "path": "/v1/metrics/addresses/supply_balance_less_0001",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance < 0.001",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_less_0001",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_less_01_ppm",
          "path": "/v1/metrics/addresses/supply_balance_less_01_ppm",
          "method": "GET",
          "summary": "Supply in Addresses Holding less than 0.01 ppm",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_less_01_ppm",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_more_100k",
          "path": "/v1/metrics/addresses/supply_balance_more_100k",
          "method": "GET",
          "summary": "Supply Held by Addresses with Balance > 100k",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_balance_more_100k",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_distribution_relative",
          "path": "/v1/metrics/addresses/supply_distribution_relative",
          "method": "GET",
          "summary": "Address Supply Distribution",
          "full_url": "https://api.glassnode.com/v1/metrics/addresses/supply_distribution_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "blockchain": {
      "name": "Blockchain",
      "endpoint_count": 18,
      "endpoints": [
        {
          "metric": "block_count",
          "path": "/v1/metrics/blockchain/block_count",
          "method": "GET",
          "summary": "Blocks Mined",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/block_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "block_height",
          "path": "/v1/metrics/blockchain/block_height",
          "method": "GET",
          "summary": "Block Height",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/block_height",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "block_interval_mean",
          "path": "/v1/metrics/blockchain/block_interval_mean",
          "method": "GET",
          "summary": "Block Interval (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/block_interval_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "block_interval_median",
          "path": "/v1/metrics/blockchain/block_interval_median",
          "method": "GET",
          "summary": "Block Interval (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/block_interval_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "block_size_mean",
          "path": "/v1/metrics/blockchain/block_size_mean",
          "method": "GET",
          "summary": "Block Size (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/block_size_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "block_size_sum",
          "path": "/v1/metrics/blockchain/block_size_sum",
          "method": "GET",
          "summary": "Block Size (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/block_size_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "utxo_count",
          "path": "/v1/metrics/blockchain/utxo_count",
          "method": "GET",
          "summary": "UTXOs (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "utxo_created_count",
          "path": "/v1/metrics/blockchain/utxo_created_count",
          "method": "GET",
          "summary": "UTXOs Created",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_created_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "utxo_created_value_mean",
          "path": "/v1/metrics/blockchain/utxo_created_value_mean",
          "method": "GET",
          "summary": "UTXO Value Created (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_created_value_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "utxo_created_value_median",
          "path": "/v1/metrics/blockchain/utxo_created_value_median",
          "method": "GET",
          "summary": "UTXO Value Created (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_created_value_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "utxo_created_value_sum",
          "path": "/v1/metrics/blockchain/utxo_created_value_sum",
          "method": "GET",
          "summary": "UTXO Value Created (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_created_value_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "utxo_loss_count",
          "path": "/v1/metrics/blockchain/utxo_loss_count",
          "method": "GET",
          "summary": "UTXOs in Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_loss_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "utxo_profit_count",
          "path": "/v1/metrics/blockchain/utxo_profit_count",
          "method": "GET",
          "summary": "UTXOs in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_profit_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "utxo_profit_relative",
          "path": "/v1/metrics/blockchain/utxo_profit_relative",
          "method": "GET",
          "summary": "Percent UTXOs in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_profit_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "utxo_spent_count",
          "path": "/v1/metrics/blockchain/utxo_spent_count",
          "method": "GET",
          "summary": "UTXOs Spent",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_spent_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "utxo_spent_value_mean",
          "path": "/v1/metrics/blockchain/utxo_spent_value_mean",
          "method": "GET",
          "summary": "UTXO Value Spent (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_spent_value_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "utxo_spent_value_median",
          "path": "/v1/metrics/blockchain/utxo_spent_value_median",
          "method": "GET",
          "summary": "UTXO Value Spent (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_spent_value_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "utxo_spent_value_sum",
          "path": "/v1/metrics/blockchain/utxo_spent_value_sum",
          "method": "GET",
          "summary": "UTXO Value Spent (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/blockchain/utxo_spent_value_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        }
      ]
    },
    "breakdowns": {
      "name": "Breakdowns",
      "endpoint_count": 39,
      "endpoints": [
        {
          "metric": "marketcap_realized_usd_by_age",
          "path": "/v1/metrics/breakdowns/marketcap_realized_usd_by_age",
          "method": "GET",
          "summary": "Realized Cap by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/marketcap_realized_usd_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "marketcap_realized_usd_by_pnl",
          "path": "/v1/metrics/breakdowns/marketcap_realized_usd_by_pnl",
          "method": "GET",
          "summary": "Realized Cap by PnL",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/marketcap_realized_usd_by_pnl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "marketcap_realized_usd_by_wallet_size",
          "path": "/v1/metrics/breakdowns/marketcap_realized_usd_by_wallet_size",
          "method": "GET",
          "summary": "Realized Cap by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/marketcap_realized_usd_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "marketcap_usd_by_age",
          "path": "/v1/metrics/breakdowns/marketcap_usd_by_age",
          "method": "GET",
          "summary": "Market Cap by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/marketcap_usd_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "marketcap_usd_by_pnl",
          "path": "/v1/metrics/breakdowns/marketcap_usd_by_pnl",
          "method": "GET",
          "summary": "Market Cap by PnL",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/marketcap_usd_by_pnl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "marketcap_usd_by_wallet_size",
          "path": "/v1/metrics/breakdowns/marketcap_usd_by_wallet_size",
          "method": "GET",
          "summary": "Market Cap by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/marketcap_usd_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mvrv_by_age",
          "path": "/v1/metrics/breakdowns/mvrv_by_age",
          "method": "GET",
          "summary": "MVRV by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/mvrv_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mvrv_by_pnl",
          "path": "/v1/metrics/breakdowns/mvrv_by_pnl",
          "method": "GET",
          "summary": "MVRV by PnL",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/mvrv_by_pnl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mvrv_by_wallet_size",
          "path": "/v1/metrics/breakdowns/mvrv_by_wallet_size",
          "method": "GET",
          "summary": "MVRV by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/mvrv_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "price_realized_usd_by_age",
          "path": "/v1/metrics/breakdowns/price_realized_usd_by_age",
          "method": "GET",
          "summary": "Realized Price by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/price_realized_usd_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "price_realized_usd_by_pnl",
          "path": "/v1/metrics/breakdowns/price_realized_usd_by_pnl",
          "method": "GET",
          "summary": "Realized Price by PnL",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/price_realized_usd_by_pnl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "price_realized_usd_by_wallet_size",
          "path": "/v1/metrics/breakdowns/price_realized_usd_by_wallet_size",
          "method": "GET",
          "summary": "Realized Price by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/price_realized_usd_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_loss_by_age",
          "path": "/v1/metrics/breakdowns/realized_loss_by_age",
          "method": "GET",
          "summary": "Realized Loss by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/realized_loss_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_loss_by_lth_sth",
          "path": "/v1/metrics/breakdowns/realized_loss_by_lth_sth",
          "method": "GET",
          "summary": "Realized Loss by LTH/STH",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/realized_loss_by_lth_sth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_loss_by_pnl",
          "path": "/v1/metrics/breakdowns/realized_loss_by_pnl",
          "method": "GET",
          "summary": "Realized Loss by Loss Margin",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/realized_loss_by_pnl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_loss_by_wallet_size",
          "path": "/v1/metrics/breakdowns/realized_loss_by_wallet_size",
          "method": "GET",
          "summary": "Realized Loss by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/realized_loss_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_by_age",
          "path": "/v1/metrics/breakdowns/realized_profit_by_age",
          "method": "GET",
          "summary": "Realized Profit by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/realized_profit_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_by_lth_sth",
          "path": "/v1/metrics/breakdowns/realized_profit_by_lth_sth",
          "method": "GET",
          "summary": "Realized Profit by LTH/STH",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/realized_profit_by_lth_sth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_by_pnl",
          "path": "/v1/metrics/breakdowns/realized_profit_by_pnl",
          "method": "GET",
          "summary": "Realized Profit by Profit Margin",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/realized_profit_by_pnl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_by_wallet_size",
          "path": "/v1/metrics/breakdowns/realized_profit_by_wallet_size",
          "method": "GET",
          "summary": "Realized Profit by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/realized_profit_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sopr_by_age",
          "path": "/v1/metrics/breakdowns/sopr_by_age",
          "method": "GET",
          "summary": "SOPR by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/sopr_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sopr_by_lth_sth",
          "path": "/v1/metrics/breakdowns/sopr_by_lth_sth",
          "method": "GET",
          "summary": "SOPR by LTH/STH",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/sopr_by_lth_sth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sopr_by_pnl",
          "path": "/v1/metrics/breakdowns/sopr_by_pnl",
          "method": "GET",
          "summary": "SOPR by PnL",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/sopr_by_pnl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sopr_by_wallet_size",
          "path": "/v1/metrics/breakdowns/sopr_by_wallet_size",
          "method": "GET",
          "summary": "SOPR by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/sopr_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "spent_volume_loss_sum_by_age",
          "path": "/v1/metrics/breakdowns/spent_volume_loss_sum_by_age",
          "method": "GET",
          "summary": "Spent Volume in Loss by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_loss_sum_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_loss_sum_by_lth_sth",
          "path": "/v1/metrics/breakdowns/spent_volume_loss_sum_by_lth_sth",
          "method": "GET",
          "summary": "Spent Volume in Loss by LTH/STH",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_loss_sum_by_lth_sth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_loss_sum_by_wallet_size",
          "path": "/v1/metrics/breakdowns/spent_volume_loss_sum_by_wallet_size",
          "method": "GET",
          "summary": "Spent Volume in Loss by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_loss_sum_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_profit_sum_by_age",
          "path": "/v1/metrics/breakdowns/spent_volume_profit_sum_by_age",
          "method": "GET",
          "summary": "Spent Volume in Profit by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_profit_sum_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_profit_sum_by_lth_sth",
          "path": "/v1/metrics/breakdowns/spent_volume_profit_sum_by_lth_sth",
          "method": "GET",
          "summary": "Spent Volume in Profit by LTH/STH",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_profit_sum_by_lth_sth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_profit_sum_by_wallet_size",
          "path": "/v1/metrics/breakdowns/spent_volume_profit_sum_by_wallet_size",
          "method": "GET",
          "summary": "Spent Volume in Profit by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_profit_sum_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_sum_by_age",
          "path": "/v1/metrics/breakdowns/spent_volume_sum_by_age",
          "method": "GET",
          "summary": "Spent Volume by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_sum_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_sum_by_lth_sth",
          "path": "/v1/metrics/breakdowns/spent_volume_sum_by_lth_sth",
          "method": "GET",
          "summary": "Spent Volume by LTH/STH",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_sum_by_lth_sth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_sum_by_pnl",
          "path": "/v1/metrics/breakdowns/spent_volume_sum_by_pnl",
          "method": "GET",
          "summary": "Spent Volume by PnL",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_sum_by_pnl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_sum_by_wallet_size",
          "path": "/v1/metrics/breakdowns/spent_volume_sum_by_wallet_size",
          "method": "GET",
          "summary": "Spent Volume by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/spent_volume_sum_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_by_age",
          "path": "/v1/metrics/breakdowns/supply_by_age",
          "method": "GET",
          "summary": "Supply by Age",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/supply_by_age",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "supply_by_investor_behavior",
          "path": "/v1/metrics/breakdowns/supply_by_investor_behavior",
          "method": "GET",
          "summary": "Supply by Investor Behavior",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/supply_by_investor_behavior",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "supply_by_pnl",
          "path": "/v1/metrics/breakdowns/supply_by_pnl",
          "method": "GET",
          "summary": "Supply by PnL",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/supply_by_pnl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "supply_by_pnl_relative",
          "path": "/v1/metrics/breakdowns/supply_by_pnl_relative",
          "method": "GET",
          "summary": "Relative Supply by PnL",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/supply_by_pnl_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "supply_by_wallet_size",
          "path": "/v1/metrics/breakdowns/supply_by_wallet_size",
          "method": "GET",
          "summary": "Supply by Wallet Size",
          "full_url": "https://api.glassnode.com/v1/metrics/breakdowns/supply_by_wallet_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "bridges": {
      "name": "Bridges",
      "endpoint_count": 5,
      "endpoints": [
        {
          "metric": "deposits_by_chain",
          "path": "/v1/metrics/bridges/deposits_by_chain",
          "method": "GET",
          "summary": "Bridges Deposits By Chain",
          "full_url": "https://api.glassnode.com/v1/metrics/bridges/deposits_by_chain",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "net_volume_by_chain",
          "path": "/v1/metrics/bridges/net_volume_by_chain",
          "method": "GET",
          "summary": "Bridges Net Flow By Chain",
          "full_url": "https://api.glassnode.com/v1/metrics/bridges/net_volume_by_chain",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "total_value_locked_by_chain",
          "path": "/v1/metrics/bridges/total_value_locked_by_chain",
          "method": "GET",
          "summary": "Bridges TVL",
          "full_url": "https://api.glassnode.com/v1/metrics/bridges/total_value_locked_by_chain",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "total_value_locked_by_chain_relative",
          "path": "/v1/metrics/bridges/total_value_locked_by_chain_relative",
          "method": "GET",
          "summary": "Bridges TVL Relative",
          "full_url": "https://api.glassnode.com/v1/metrics/bridges/total_value_locked_by_chain_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "withdrawals_by_chain",
          "path": "/v1/metrics/bridges/withdrawals_by_chain",
          "method": "GET",
          "summary": "Bridges Withdrawals By Chain",
          "full_url": "https://api.glassnode.com/v1/metrics/bridges/withdrawals_by_chain",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "defi": {
      "name": "Defi",
      "endpoint_count": 1,
      "endpoints": [
        {
          "metric": "total_value_locked",
          "path": "/v1/metrics/defi/total_value_locked",
          "method": "GET",
          "summary": "Total Value Locked in DeFi (TVL)",
          "full_url": "https://api.glassnode.com/v1/metrics/defi/total_value_locked",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "derivatives": {
      "name": "Derivatives",
      "endpoint_count": 58,
      "endpoints": [
        {
          "metric": "dvol_ohlc",
          "path": "/v1/metrics/derivatives/dvol_ohlc",
          "method": "GET",
          "summary": "Implied Volatility Index (DVOL)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/dvol_ohlc",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "futures_annualized_basis_3m",
          "path": "/v1/metrics/derivatives/futures_annualized_basis_3m",
          "method": "GET",
          "summary": "Futures Annualized Rolling Basis (3M)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_annualized_basis_3m",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "futures_estimated_leverage_ratio",
          "path": "/v1/metrics/derivatives/futures_estimated_leverage_ratio",
          "method": "GET",
          "summary": "Futures Estimated Leverage Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_estimated_leverage_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "futures_funding_rate_perpetual",
          "path": "/v1/metrics/derivatives/futures_funding_rate_perpetual",
          "method": "GET",
          "summary": "Futures Perpetual Funding Rate",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_funding_rate_perpetual",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "futures_funding_rate_perpetual_all",
          "path": "/v1/metrics/derivatives/futures_funding_rate_perpetual_all",
          "method": "GET",
          "summary": "Futures Perpetual Funding Rate (All)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_funding_rate_perpetual_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "futures_liquidated_volume_long_mean",
          "path": "/v1/metrics/derivatives/futures_liquidated_volume_long_mean",
          "method": "GET",
          "summary": "Futures Long Liquidations (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_liquidated_volume_long_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_liquidated_volume_long_relative",
          "path": "/v1/metrics/derivatives/futures_liquidated_volume_long_relative",
          "method": "GET",
          "summary": "Futures Long Liquidations Dominance",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_liquidated_volume_long_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "futures_liquidated_volume_long_sum",
          "path": "/v1/metrics/derivatives/futures_liquidated_volume_long_sum",
          "method": "GET",
          "summary": "Futures Long Liquidations (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_liquidated_volume_long_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_liquidated_volume_short_mean",
          "path": "/v1/metrics/derivatives/futures_liquidated_volume_short_mean",
          "method": "GET",
          "summary": "Futures Short Liquidations (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_liquidated_volume_short_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_liquidated_volume_short_sum",
          "path": "/v1/metrics/derivatives/futures_liquidated_volume_short_sum",
          "method": "GET",
          "summary": "Futures Short Liquidations (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_liquidated_volume_short_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_open_interest_cash_margin_perpetual_sum",
          "path": "/v1/metrics/derivatives/futures_open_interest_cash_margin_perpetual_sum",
          "method": "GET",
          "summary": "Futures Open Interest Cash Margin Perpetual",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_cash_margin_perpetual_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_open_interest_cash_margin_sum",
          "path": "/v1/metrics/derivatives/futures_open_interest_cash_margin_sum",
          "method": "GET",
          "summary": "Cash-Margined Futures Open Interest",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_cash_margin_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_open_interest_crypto_margin_perpetual_sum",
          "path": "/v1/metrics/derivatives/futures_open_interest_crypto_margin_perpetual_sum",
          "method": "GET",
          "summary": "Futures Open Interest Crypto Margin Perpetual",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_crypto_margin_perpetual_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_open_interest_crypto_margin_relative",
          "path": "/v1/metrics/derivatives/futures_open_interest_crypto_margin_relative",
          "method": "GET",
          "summary": "Percent Crypto-Margined Futures Open Interest",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_crypto_margin_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "futures_open_interest_crypto_margin_relative_perpetual",
          "path": "/v1/metrics/derivatives/futures_open_interest_crypto_margin_relative_perpetual",
          "method": "GET",
          "summary": "Futures Open Interest Crypto Margin Relative Perpetual",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_crypto_margin_relative_perpetual",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "futures_open_interest_crypto_margin_sum",
          "path": "/v1/metrics/derivatives/futures_open_interest_crypto_margin_sum",
          "method": "GET",
          "summary": "Crypto-Margined Futures Open Interest",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_crypto_margin_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_open_interest_latest",
          "path": "/v1/metrics/derivatives/futures_open_interest_latest",
          "method": "GET",
          "summary": "Futures Open Interest (Current)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_latest",
          "required_params": [
            "a",
            "i"
          ],
          "optional_params": [
            "f",
            "c",
            "timestamp_format"
          ]
        },
        {
          "metric": "futures_open_interest_perpetual_sum",
          "path": "/v1/metrics/derivatives/futures_open_interest_perpetual_sum",
          "method": "GET",
          "summary": "Futures Open Interest Perpetual",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_perpetual_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_open_interest_perpetual_sum_all",
          "path": "/v1/metrics/derivatives/futures_open_interest_perpetual_sum_all",
          "method": "GET",
          "summary": "Futures Open Interest Perpetual (Stacked)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_perpetual_sum_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_open_interest_sum",
          "path": "/v1/metrics/derivatives/futures_open_interest_sum",
          "method": "GET",
          "summary": "Futures Open Interest",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_open_interest_sum_all",
          "path": "/v1/metrics/derivatives/futures_open_interest_sum_all",
          "method": "GET",
          "summary": "Futures Open Interest (Stacked)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_open_interest_sum_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_term_structure",
          "path": "/v1/metrics/derivatives/futures_term_structure",
          "method": "GET",
          "summary": "Futures Term Structure",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_term_structure",
          "required_params": [
            "a",
            "i"
          ],
          "optional_params": [
            "f",
            "e",
            "timestamp_format"
          ]
        },
        {
          "metric": "futures_term_structure_by_exchange",
          "path": "/v1/metrics/derivatives/futures_term_structure_by_exchange",
          "method": "GET",
          "summary": "Futures Term Structure by Exchange",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_term_structure_by_exchange",
          "required_params": [
            "a",
            "i",
            "e"
          ],
          "optional_params": [
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "futures_vd",
          "path": "/v1/metrics/derivatives/futures_vd",
          "method": "GET",
          "summary": "Futures Volume Delta",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_vd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_vd_perpetual",
          "path": "/v1/metrics/derivatives/futures_vd_perpetual",
          "method": "GET",
          "summary": "Futures Volume Delta Perpetual",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_vd_perpetual",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_buy_daily_perpetual_sum",
          "path": "/v1/metrics/derivatives/futures_volume_buy_daily_perpetual_sum",
          "method": "GET",
          "summary": "Futures Buy Volume Perpetual 24h",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_buy_daily_perpetual_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_buy_daily_sum",
          "path": "/v1/metrics/derivatives/futures_volume_buy_daily_sum",
          "method": "GET",
          "summary": "Futures Buy Volume 24h",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_buy_daily_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_buy_perpetual_sum",
          "path": "/v1/metrics/derivatives/futures_volume_buy_perpetual_sum",
          "method": "GET",
          "summary": "Futures Buy Volume Perpetual",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_buy_perpetual_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_buy_sum",
          "path": "/v1/metrics/derivatives/futures_volume_buy_sum",
          "method": "GET",
          "summary": "Futures Buy Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_buy_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_daily_latest",
          "path": "/v1/metrics/derivatives/futures_volume_daily_latest",
          "method": "GET",
          "summary": "Futures Volume 24h (Latest)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_daily_latest",
          "required_params": [
            "a",
            "i"
          ],
          "optional_params": [
            "f",
            "c",
            "timestamp_format"
          ]
        },
        {
          "metric": "futures_volume_daily_perpetual_sum",
          "path": "/v1/metrics/derivatives/futures_volume_daily_perpetual_sum",
          "method": "GET",
          "summary": "Futures Volume Perpetual 24h",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_daily_perpetual_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_daily_perpetual_sum_all",
          "path": "/v1/metrics/derivatives/futures_volume_daily_perpetual_sum_all",
          "method": "GET",
          "summary": "Futures Volume Perpetual 24h (Stacked)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_daily_perpetual_sum_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_daily_sum",
          "path": "/v1/metrics/derivatives/futures_volume_daily_sum",
          "method": "GET",
          "summary": "Futures Volume 24h",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_daily_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_daily_sum_all",
          "path": "/v1/metrics/derivatives/futures_volume_daily_sum_all",
          "method": "GET",
          "summary": "Futures Volume 24h (Stacked)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_daily_sum_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_perpetual_sum",
          "path": "/v1/metrics/derivatives/futures_volume_perpetual_sum",
          "method": "GET",
          "summary": "Futures Volume Perpetual",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_perpetual_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_sell_daily_perpetual_sum",
          "path": "/v1/metrics/derivatives/futures_volume_sell_daily_perpetual_sum",
          "method": "GET",
          "summary": "Futures Sell Volume Perpetual 24h",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_sell_daily_perpetual_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_sell_daily_sum",
          "path": "/v1/metrics/derivatives/futures_volume_sell_daily_sum",
          "method": "GET",
          "summary": "Futures Sell Volume 24h",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_sell_daily_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_sell_perpetual_sum",
          "path": "/v1/metrics/derivatives/futures_volume_sell_perpetual_sum",
          "method": "GET",
          "summary": "Futures Sell Volume Perpetual",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_sell_perpetual_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_sell_sum",
          "path": "/v1/metrics/derivatives/futures_volume_sell_sum",
          "method": "GET",
          "summary": "Futures Sell Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_sell_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "futures_volume_sum",
          "path": "/v1/metrics/derivatives/futures_volume_sum",
          "method": "GET",
          "summary": "Futures Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/futures_volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "options_25delta_skew_1_month",
          "path": "/v1/metrics/derivatives/options_25delta_skew_1_month",
          "method": "GET",
          "summary": "Options 25 Delta Skew (1 Month)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_25delta_skew_1_month",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_25delta_skew_1_week",
          "path": "/v1/metrics/derivatives/options_25delta_skew_1_week",
          "method": "GET",
          "summary": "Options 25 Delta Skew (1 Week)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_25delta_skew_1_week",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_25delta_skew_3_months",
          "path": "/v1/metrics/derivatives/options_25delta_skew_3_months",
          "method": "GET",
          "summary": "Options 25 Delta Skew (3 Months)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_25delta_skew_3_months",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_25delta_skew_6_months",
          "path": "/v1/metrics/derivatives/options_25delta_skew_6_months",
          "method": "GET",
          "summary": "Options 25 Delta Skew (6 Months)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_25delta_skew_6_months",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_25delta_skew_all",
          "path": "/v1/metrics/derivatives/options_25delta_skew_all",
          "method": "GET",
          "summary": "Options 25 Delta Skew (All)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_25delta_skew_all",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_atm_implied_volatility_1_month",
          "path": "/v1/metrics/derivatives/options_atm_implied_volatility_1_month",
          "method": "GET",
          "summary": "Options ATM Implied Volatility (1 Month)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_atm_implied_volatility_1_month",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_atm_implied_volatility_1_week",
          "path": "/v1/metrics/derivatives/options_atm_implied_volatility_1_week",
          "method": "GET",
          "summary": "Options ATM Implied Volatility (1 Week)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_atm_implied_volatility_1_week",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_atm_implied_volatility_3_months",
          "path": "/v1/metrics/derivatives/options_atm_implied_volatility_3_months",
          "method": "GET",
          "summary": "Options ATM Implied Volatility (3 Months)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_atm_implied_volatility_3_months",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_atm_implied_volatility_6_months",
          "path": "/v1/metrics/derivatives/options_atm_implied_volatility_6_months",
          "method": "GET",
          "summary": "Options ATM Implied Volatility (6 Months)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_atm_implied_volatility_6_months",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_atm_implied_volatility_all",
          "path": "/v1/metrics/derivatives/options_atm_implied_volatility_all",
          "method": "GET",
          "summary": "Options ATM Implied Volatility (All)",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_atm_implied_volatility_all",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_implied_volatility_term_structure",
          "path": "/v1/metrics/derivatives/options_implied_volatility_term_structure",
          "method": "GET",
          "summary": "Options Volatility Term Structure",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_implied_volatility_term_structure",
          "required_params": [
            "a",
            "i",
            "e"
          ],
          "optional_params": [
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_open_interest_distribution",
          "path": "/v1/metrics/derivatives/options_open_interest_distribution",
          "method": "GET",
          "summary": "Options OI by Strike Price",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_open_interest_distribution",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "i",
            "f",
            "c",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_open_interest_put_call_ratio",
          "path": "/v1/metrics/derivatives/options_open_interest_put_call_ratio",
          "method": "GET",
          "summary": "Options Open Interest Put/Call Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_open_interest_put_call_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "options_open_interest_sum",
          "path": "/v1/metrics/derivatives/options_open_interest_sum",
          "method": "GET",
          "summary": "Options Open Interest",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_open_interest_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "options_volatility_smile",
          "path": "/v1/metrics/derivatives/options_volatility_smile",
          "method": "GET",
          "summary": "Volatility Smile",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_volatility_smile",
          "required_params": [
            "a",
            "i",
            "e"
          ],
          "optional_params": [
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "options_volume_daily_sum",
          "path": "/v1/metrics/derivatives/options_volume_daily_sum",
          "method": "GET",
          "summary": "Options Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_volume_daily_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "options_volume_put_call_ratio",
          "path": "/v1/metrics/derivatives/options_volume_put_call_ratio",
          "method": "GET",
          "summary": "Options Volume Put/Call Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/options_volume_put_call_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "perpetuals_reference_rate",
          "path": "/v1/metrics/derivatives/perpetuals_reference_rate",
          "method": "GET",
          "summary": "Perpetuals Reference Rate",
          "full_url": "https://api.glassnode.com/v1/metrics/derivatives/perpetuals_reference_rate",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "distribution": {
      "name": "Distribution",
      "endpoint_count": 42,
      "endpoints": [
        {
          "metric": "balance_1pct_holders",
          "path": "/v1/metrics/distribution/balance_1pct_holders",
          "method": "GET",
          "summary": "Supply of Top 1% Addresses",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_1pct_holders",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "balance_bhutan_government",
          "path": "/v1/metrics/distribution/balance_bhutan_government",
          "method": "GET",
          "summary": "Bhutan Government Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_bhutan_government",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_bitwise",
          "path": "/v1/metrics/distribution/balance_bitwise",
          "method": "GET",
          "summary": "Estimated Bitwise Bitcoin ETF Balance (BITB)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_bitwise",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_blackrock",
          "path": "/v1/metrics/distribution/balance_blackrock",
          "method": "GET",
          "summary": "Estimated BlackRock Bitcoin ETF Balance (IBIT)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_blackrock",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_cashapp",
          "path": "/v1/metrics/distribution/balance_cashapp",
          "method": "GET",
          "summary": "Cash App Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_cashapp",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_donald_trump",
          "path": "/v1/metrics/distribution/balance_donald_trump",
          "method": "GET",
          "summary": "Donald Trump Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_donald_trump",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_el_salvador",
          "path": "/v1/metrics/distribution/balance_el_salvador",
          "method": "GET",
          "summary": "El Salvador Government Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_el_salvador",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_exchanges",
          "path": "/v1/metrics/distribution/balance_exchanges",
          "method": "GET",
          "summary": "Exchange Balance (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_exchanges",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_exchanges_all",
          "path": "/v1/metrics/distribution/balance_exchanges_all",
          "method": "GET",
          "summary": "Exchange Balance (Stacked)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_exchanges_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_exchanges_relative",
          "path": "/v1/metrics/distribution/balance_exchanges_relative",
          "method": "GET",
          "summary": "Exchange Balance (Percent)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_exchanges_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "balance_franklin_templeton",
          "path": "/v1/metrics/distribution/balance_franklin_templeton",
          "method": "GET",
          "summary": "Estimated Franklin Templeton Bitcoin ETF Balance (EZBC)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_franklin_templeton",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_german_government",
          "path": "/v1/metrics/distribution/balance_german_government",
          "method": "GET",
          "summary": "German Government Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_german_government",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_grayscale_trust",
          "path": "/v1/metrics/distribution/balance_grayscale_trust",
          "method": "GET",
          "summary": "Estimated Grayscale Bitcoin ETF Balance (GBTC)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_grayscale_trust",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_luna_foundation_guard",
          "path": "/v1/metrics/distribution/balance_luna_foundation_guard",
          "method": "GET",
          "summary": "Luna Foundation Guard Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_luna_foundation_guard",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_miners_all",
          "path": "/v1/metrics/distribution/balance_miners_all",
          "method": "GET",
          "summary": "Miner Balance (Stacked)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_miners_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_miners_change",
          "path": "/v1/metrics/distribution/balance_miners_change",
          "method": "GET",
          "summary": "Miner Net Position Change",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_miners_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_miners_sum",
          "path": "/v1/metrics/distribution/balance_miners_sum",
          "method": "GET",
          "summary": "Miner Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_miners_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_mtgox_trustee",
          "path": "/v1/metrics/distribution/balance_mtgox_trustee",
          "method": "GET",
          "summary": "Mt. Gox Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_mtgox_trustee",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_otc_desks",
          "path": "/v1/metrics/distribution/balance_otc_desks",
          "method": "GET",
          "summary": "OTC Desks Holdings",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_otc_desks",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_paypal",
          "path": "/v1/metrics/distribution/balance_paypal",
          "method": "GET",
          "summary": "PayPal Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_paypal",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_revolut",
          "path": "/v1/metrics/distribution/balance_revolut",
          "method": "GET",
          "summary": "Revolut Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_revolut",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_robinhood",
          "path": "/v1/metrics/distribution/balance_robinhood",
          "method": "GET",
          "summary": "Robinhood Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_robinhood",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_tesla",
          "path": "/v1/metrics/distribution/balance_tesla",
          "method": "GET",
          "summary": "Tesla Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_tesla",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_tether_treasury",
          "path": "/v1/metrics/distribution/balance_tether_treasury",
          "method": "GET",
          "summary": "Tether Treasury Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_tether_treasury",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_uk_government",
          "path": "/v1/metrics/distribution/balance_uk_government",
          "method": "GET",
          "summary": "UK Government Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_uk_government",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_us_government",
          "path": "/v1/metrics/distribution/balance_us_government",
          "method": "GET",
          "summary": "US Government Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_us_government",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_vaneck",
          "path": "/v1/metrics/distribution/balance_vaneck",
          "method": "GET",
          "summary": "Estimated VanEck Bitcoin ETF Balance (HODL)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_vaneck",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_wbtc",
          "path": "/v1/metrics/distribution/balance_wbtc",
          "method": "GET",
          "summary": "WBTC Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_wbtc",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "balance_wisdomtree",
          "path": "/v1/metrics/distribution/balance_wisdomtree",
          "method": "GET",
          "summary": "Estimated WisdomTree Bitcoin ETF Balance (BTCW)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/balance_wisdomtree",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "exchange_aggregated_reliance_ratio",
          "path": "/v1/metrics/distribution/exchange_aggregated_reliance_ratio",
          "method": "GET",
          "summary": "Exchange Aggregated Reliance Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/exchange_aggregated_reliance_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "exchange_aggregated_reshuffling_ratio",
          "path": "/v1/metrics/distribution/exchange_aggregated_reshuffling_ratio",
          "method": "GET",
          "summary": "Exchange Aggregated Reshuffling Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/exchange_aggregated_reshuffling_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "exchange_net_position_change",
          "path": "/v1/metrics/distribution/exchange_net_position_change",
          "method": "GET",
          "summary": "Exchange Net Position Change",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/exchange_net_position_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "exchange_reliance_ratio",
          "path": "/v1/metrics/distribution/exchange_reliance_ratio",
          "method": "GET",
          "summary": "Exchange Reliance Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/exchange_reliance_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "exchange_reshuffling_ratio",
          "path": "/v1/metrics/distribution/exchange_reshuffling_ratio",
          "method": "GET",
          "summary": "Exchange Reshuffling Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/exchange_reshuffling_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "exchange_whales_outflow",
          "path": "/v1/metrics/distribution/exchange_whales_outflow",
          "method": "GET",
          "summary": "Exchange Whales Outflow",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/exchange_whales_outflow",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "gini",
          "path": "/v1/metrics/distribution/gini",
          "method": "GET",
          "summary": "Gini Coefficient",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/gini",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "herfindahl",
          "path": "/v1/metrics/distribution/herfindahl",
          "method": "GET",
          "summary": "Herfindahl Index",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/herfindahl",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "outflows_mtgox_trustee",
          "path": "/v1/metrics/distribution/outflows_mtgox_trustee",
          "method": "GET",
          "summary": "Mt. Gox Outflows",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/outflows_mtgox_trustee",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "proof_of_reserves",
          "path": "/v1/metrics/distribution/proof_of_reserves",
          "method": "GET",
          "summary": "Proof of Reserves",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/proof_of_reserves",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "proof_of_reserves_all",
          "path": "/v1/metrics/distribution/proof_of_reserves_all",
          "method": "GET",
          "summary": "Proof of Reserves (All assets)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/proof_of_reserves_all",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "proof_of_reserves_all_latest",
          "path": "/v1/metrics/distribution/proof_of_reserves_all_latest",
          "method": "GET",
          "summary": "Proof of Reserves (Current)",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/proof_of_reserves_all_latest",
          "required_params": [
            "a",
            "e"
          ],
          "optional_params": [
            "i",
            "f",
            "c",
            "timestamp_format"
          ]
        },
        {
          "metric": "supply_contracts",
          "path": "/v1/metrics/distribution/supply_contracts",
          "method": "GET",
          "summary": "Supply in Smart Contracts",
          "full_url": "https://api.glassnode.com/v1/metrics/distribution/supply_contracts",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "entities": {
      "name": "Entities",
      "endpoint_count": 18,
      "endpoints": [
        {
          "metric": "active_count",
          "path": "/v1/metrics/entities/active_count",
          "method": "GET",
          "summary": "Active Entities",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/active_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "min_1k_count",
          "path": "/v1/metrics/entities/min_1k_count",
          "method": "GET",
          "summary": "Number of Whales",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/min_1k_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "net_growth_count",
          "path": "/v1/metrics/entities/net_growth_count",
          "method": "GET",
          "summary": "Entities Net Growth",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/net_growth_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "new_count",
          "path": "/v1/metrics/entities/new_count",
          "method": "GET",
          "summary": "New Entities",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/new_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "profit_relative",
          "path": "/v1/metrics/entities/profit_relative",
          "method": "GET",
          "summary": "Percent Entities in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/profit_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "receiving_count",
          "path": "/v1/metrics/entities/receiving_count",
          "method": "GET",
          "summary": "Receiving Entities",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/receiving_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sending_count",
          "path": "/v1/metrics/entities/sending_count",
          "method": "GET",
          "summary": "Sending Entities",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/sending_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "supply_balance_0001_001",
          "path": "/v1/metrics/entities/supply_balance_0001_001",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance 0.001 - 0.01",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_0001_001",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_001_01",
          "path": "/v1/metrics/entities/supply_balance_001_01",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance 0.01 - 0.1",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_001_01",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_01_1",
          "path": "/v1/metrics/entities/supply_balance_01_1",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance 0.1 - 1",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_01_1",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_100_1k",
          "path": "/v1/metrics/entities/supply_balance_100_1k",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance 100 - 1k",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_100_1k",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_10_100",
          "path": "/v1/metrics/entities/supply_balance_10_100",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance 10 - 100",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_10_100",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_10k_100k",
          "path": "/v1/metrics/entities/supply_balance_10k_100k",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance 10k - 100k",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_10k_100k",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_1_10",
          "path": "/v1/metrics/entities/supply_balance_1_10",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance 1 - 10",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_1_10",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_1k_10k",
          "path": "/v1/metrics/entities/supply_balance_1k_10k",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance 1k - 10k",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_1k_10k",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_less_0001",
          "path": "/v1/metrics/entities/supply_balance_less_0001",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance < 0.001",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_less_0001",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_balance_more_100k",
          "path": "/v1/metrics/entities/supply_balance_more_100k",
          "method": "GET",
          "summary": "Supply Held by Entities with Balance > 100k",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_balance_more_100k",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_distribution_relative",
          "path": "/v1/metrics/entities/supply_distribution_relative",
          "method": "GET",
          "summary": "Entities Supply Distribution",
          "full_url": "https://api.glassnode.com/v1/metrics/entities/supply_distribution_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "eth2": {
      "name": "Eth2",
      "endpoint_count": 22,
      "endpoints": [
        {
          "metric": "active_validators_count",
          "path": "/v1/metrics/eth2/active_validators_count",
          "method": "GET",
          "summary": "Active Validators",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/active_validators_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "attestation_count",
          "path": "/v1/metrics/eth2/attestation_count",
          "method": "GET",
          "summary": "Attestation Count",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/attestation_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "deposited_by_provider_volume_sum",
          "path": "/v1/metrics/eth2/deposited_by_provider_volume_sum",
          "method": "GET",
          "summary": "ETH 2.0 Total Value Staked by Provider",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/deposited_by_provider_volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "deposits_count",
          "path": "/v1/metrics/eth2/deposits_count",
          "method": "GET",
          "summary": "Staking Deposits",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/deposits_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "effective_balance_sum",
          "path": "/v1/metrics/eth2/effective_balance_sum",
          "method": "GET",
          "summary": "Total Effective Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/effective_balance_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "epoch_height",
          "path": "/v1/metrics/eth2/epoch_height",
          "method": "GET",
          "summary": "Epoch Height",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/epoch_height",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "estimated_annual_issuance",
          "path": "/v1/metrics/eth2/estimated_annual_issuance",
          "method": "GET",
          "summary": "Estimated Annual Issuance",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/estimated_annual_issuance",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "estimated_annual_issuance_roi_per_validator",
          "path": "/v1/metrics/eth2/estimated_annual_issuance_roi_per_validator",
          "method": "GET",
          "summary": "Estimated Annual Issuance ROI per validator",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/estimated_annual_issuance_roi_per_validator",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "missed_blocks_count",
          "path": "/v1/metrics/eth2/missed_blocks_count",
          "method": "GET",
          "summary": "Missed Blocks",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/missed_blocks_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "orphaned_blocks_count",
          "path": "/v1/metrics/eth2/orphaned_blocks_count",
          "method": "GET",
          "summary": "Orphaned Blocks",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/orphaned_blocks_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "participation_rate_mean",
          "path": "/v1/metrics/eth2/participation_rate_mean",
          "method": "GET",
          "summary": "Participation Rate",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/participation_rate_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "slashings_count",
          "path": "/v1/metrics/eth2/slashings_count",
          "method": "GET",
          "summary": "Slashing Event Count",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/slashings_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "slot_height",
          "path": "/v1/metrics/eth2/slot_height",
          "method": "GET",
          "summary": "Slot Height",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/slot_height",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "stake_effectiveness_mean",
          "path": "/v1/metrics/eth2/stake_effectiveness_mean",
          "method": "GET",
          "summary": "Stake Effectiveness",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/stake_effectiveness_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "staking_deposits_count",
          "path": "/v1/metrics/eth2/staking_deposits_count",
          "method": "GET",
          "summary": "ETH 2.0 New Deposits",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/staking_deposits_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "staking_total_deposits_count",
          "path": "/v1/metrics/eth2/staking_total_deposits_count",
          "method": "GET",
          "summary": "ETH 2.0 Total Number of Deposits",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/staking_total_deposits_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "staking_total_validators_count",
          "path": "/v1/metrics/eth2/staking_total_validators_count",
          "method": "GET",
          "summary": "ETH 2.0 Total Number of Validators",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/staking_total_validators_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "staking_total_volume_sum",
          "path": "/v1/metrics/eth2/staking_total_volume_sum",
          "method": "GET",
          "summary": "ETH 2.0 Total Value Staked",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/staking_total_volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "staking_validators_count",
          "path": "/v1/metrics/eth2/staking_validators_count",
          "method": "GET",
          "summary": "ETH 2.0 New Validators",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/staking_validators_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "staking_volume_sum",
          "path": "/v1/metrics/eth2/staking_volume_sum",
          "method": "GET",
          "summary": "ETH 2.0 New Value Staked",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/staking_volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "validator_balance_mean",
          "path": "/v1/metrics/eth2/validator_balance_mean",
          "method": "GET",
          "summary": "Average Validator Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/validator_balance_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "voluntary_exit_count",
          "path": "/v1/metrics/eth2/voluntary_exit_count",
          "method": "GET",
          "summary": "Voluntary Exit Count",
          "full_url": "https://api.glassnode.com/v1/metrics/eth2/voluntary_exit_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "fees": {
      "name": "Fees",
      "endpoint_count": 28,
      "endpoints": [
        {
          "metric": "exchanges_mean",
          "path": "/v1/metrics/fees/exchanges_mean",
          "method": "GET",
          "summary": "Exchange Fees (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/exchanges_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "exchanges_relative",
          "path": "/v1/metrics/fees/exchanges_relative",
          "method": "GET",
          "summary": "Exchange Fee Dominance",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/exchanges_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "exchanges_sum",
          "path": "/v1/metrics/fees/exchanges_sum",
          "method": "GET",
          "summary": "Exchange Fees (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/exchanges_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "fee_ratio_multiple",
          "path": "/v1/metrics/fees/fee_ratio_multiple",
          "method": "GET",
          "summary": "Fee Ratio Multiple (FRM)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/fee_ratio_multiple",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_limit_tx_mean",
          "path": "/v1/metrics/fees/gas_limit_tx_mean",
          "method": "GET",
          "summary": "Transaction Gas Limit (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_limit_tx_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_limit_tx_median",
          "path": "/v1/metrics/fees/gas_limit_tx_median",
          "method": "GET",
          "summary": "Transaction Gas Limit (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_limit_tx_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_price_mean",
          "path": "/v1/metrics/fees/gas_price_mean",
          "method": "GET",
          "summary": "Gas Price (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_price_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "gas_price_median",
          "path": "/v1/metrics/fees/gas_price_median",
          "method": "GET",
          "summary": "Gas Price (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_price_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "gas_used_mean",
          "path": "/v1/metrics/fees/gas_used_mean",
          "method": "GET",
          "summary": "Gas Used (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_median",
          "path": "/v1/metrics/fees/gas_used_median",
          "method": "GET",
          "summary": "Gas Used (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum",
          "path": "/v1/metrics/fees/gas_used_sum",
          "method": "GET",
          "summary": "Gas Used (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_bridges",
          "path": "/v1/metrics/fees/gas_used_sum_bridges",
          "method": "GET",
          "summary": "Gas Usage by Bridges (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_bridges",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_bridges_relative",
          "path": "/v1/metrics/fees/gas_used_sum_bridges_relative",
          "method": "GET",
          "summary": "Gas Usage by Bridges (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_bridges_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_defi",
          "path": "/v1/metrics/fees/gas_used_sum_defi",
          "method": "GET",
          "summary": "Gas Usage by DeFi (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_defi",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_defi_relative",
          "path": "/v1/metrics/fees/gas_used_sum_defi_relative",
          "method": "GET",
          "summary": "Gas Usage by DeFi (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_defi_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_erc20",
          "path": "/v1/metrics/fees/gas_used_sum_erc20",
          "method": "GET",
          "summary": "Gas Usage by ERC-20 Tokens (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_erc20",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_erc20_relative",
          "path": "/v1/metrics/fees/gas_used_sum_erc20_relative",
          "method": "GET",
          "summary": "Gas Usage by ERC-20 Tokens (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_erc20_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_nfts",
          "path": "/v1/metrics/fees/gas_used_sum_nfts",
          "method": "GET",
          "summary": "Gas Usage by NFTs (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_nfts",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_nfts_relative",
          "path": "/v1/metrics/fees/gas_used_sum_nfts_relative",
          "method": "GET",
          "summary": "Gas Usage by NFTs (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_nfts_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_stablecoins",
          "path": "/v1/metrics/fees/gas_used_sum_stablecoins",
          "method": "GET",
          "summary": "Gas Usage by Stablecoins (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_stablecoins",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_stablecoins_relative",
          "path": "/v1/metrics/fees/gas_used_sum_stablecoins_relative",
          "method": "GET",
          "summary": "Gas Usage by Stablecoins (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_stablecoins_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_vanilla",
          "path": "/v1/metrics/fees/gas_used_sum_vanilla",
          "method": "GET",
          "summary": "Gas Usage by Vanilla Transactions (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_vanilla",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gas_used_sum_vanilla_relative",
          "path": "/v1/metrics/fees/gas_used_sum_vanilla_relative",
          "method": "GET",
          "summary": "Gas Usage by Vanilla Transactions (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/gas_used_sum_vanilla_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "tx_types_breakdown_relative",
          "path": "/v1/metrics/fees/tx_types_breakdown_relative",
          "method": "GET",
          "summary": "Gas Usage by Transaction Type (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/tx_types_breakdown_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "tx_types_breakdown_sum",
          "path": "/v1/metrics/fees/tx_types_breakdown_sum",
          "method": "GET",
          "summary": "Gas Usage by Transaction Type (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/tx_types_breakdown_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "volume_mean",
          "path": "/v1/metrics/fees/volume_mean",
          "method": "GET",
          "summary": "Fees (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/volume_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "volume_median",
          "path": "/v1/metrics/fees/volume_median",
          "method": "GET",
          "summary": "Fees (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/volume_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "volume_sum",
          "path": "/v1/metrics/fees/volume_sum",
          "method": "GET",
          "summary": "Fees (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/fees/volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        }
      ]
    },
    "indicators": {
      "name": "Indicators",
      "endpoint_count": 158,
      "endpoints": [
        {
          "metric": "accumulation_trend_score",
          "path": "/v1/metrics/indicators/accumulation_trend_score",
          "method": "GET",
          "summary": "Accumulation Trend Score",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/accumulation_trend_score",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "asol",
          "path": "/v1/metrics/indicators/asol",
          "method": "GET",
          "summary": "ASOL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/asol",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "asol_account_based",
          "path": "/v1/metrics/indicators/asol_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted ASOL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/asol_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "asol_lth",
          "path": "/v1/metrics/indicators/asol_lth",
          "method": "GET",
          "summary": "Long-Term Holder ASOL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/asol_lth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "asol_lth_account_based",
          "path": "/v1/metrics/indicators/asol_lth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Long-Term Holder ASOL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/asol_lth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "asol_sth",
          "path": "/v1/metrics/indicators/asol_sth",
          "method": "GET",
          "summary": "Short-Term Holder ASOL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/asol_sth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "asol_sth_account_based",
          "path": "/v1/metrics/indicators/asol_sth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Short-Term Holder ASOL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/asol_sth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "average_dormancy",
          "path": "/v1/metrics/indicators/average_dormancy",
          "method": "GET",
          "summary": "Dormancy",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/average_dormancy",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "average_dormancy_supply_adjusted",
          "path": "/v1/metrics/indicators/average_dormancy_supply_adjusted",
          "method": "GET",
          "summary": "Supply-Adjusted Dormancy",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/average_dormancy_supply_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aviv",
          "path": "/v1/metrics/indicators/aviv",
          "method": "GET",
          "summary": "AVIV",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/aviv",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "balanced_price_usd",
          "path": "/v1/metrics/indicators/balanced_price_usd",
          "method": "GET",
          "summary": "Balanced Price",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/balanced_price_usd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cdd",
          "path": "/v1/metrics/indicators/cdd",
          "method": "GET",
          "summary": "Coin Days Destroyed (CDD)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "cdd90_account_based_age_adjusted",
          "path": "/v1/metrics/indicators/cdd90_account_based_age_adjusted",
          "method": "GET",
          "summary": "Entity-Adjusted 90D Coin Days Destroyed (eCDD-90)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd90_account_based_age_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cdd90_age_adjusted",
          "path": "/v1/metrics/indicators/cdd90_age_adjusted",
          "method": "GET",
          "summary": "90D Coin Days Destroyed (CDD-90)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd90_age_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cdd_account_based",
          "path": "/v1/metrics/indicators/cdd_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted CDD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cdd_lth",
          "path": "/v1/metrics/indicators/cdd_lth",
          "method": "GET",
          "summary": "Long-Term Holder CDD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd_lth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cdd_lth_account_based",
          "path": "/v1/metrics/indicators/cdd_lth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Long-Term Holder CDD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd_lth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cdd_sth",
          "path": "/v1/metrics/indicators/cdd_sth",
          "method": "GET",
          "summary": "Short-Term Holder CDD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd_sth",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cdd_sth_account_based",
          "path": "/v1/metrics/indicators/cdd_sth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Short-Term Holder CDD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd_sth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cdd_supply_adjusted",
          "path": "/v1/metrics/indicators/cdd_supply_adjusted",
          "method": "GET",
          "summary": "Supply-Adjusted CDD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd_supply_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cdd_supply_adjusted_binary",
          "path": "/v1/metrics/indicators/cdd_supply_adjusted_binary",
          "method": "GET",
          "summary": "Binary CDD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cdd_supply_adjusted_binary",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "coin_blocks_created",
          "path": "/v1/metrics/indicators/coin_blocks_created",
          "method": "GET",
          "summary": "Coin Blocks Created (CBC)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/coin_blocks_created",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "coin_blocks_destroyed",
          "path": "/v1/metrics/indicators/coin_blocks_destroyed",
          "method": "GET",
          "summary": "Coin Blocks Destroyed",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/coin_blocks_destroyed",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cost_basis_distribution_heatmap",
          "path": "/v1/metrics/indicators/cost_basis_distribution_heatmap",
          "method": "GET",
          "summary": "Cost Basis Distribution Heatmap",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cost_basis_distribution_heatmap",
          "required_params": [
            "a",
            "period"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cost_basis_distribution_quantiles",
          "path": "/v1/metrics/indicators/cost_basis_distribution_quantiles",
          "method": "GET",
          "summary": "Cost Basis Distribution Quantiles",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cost_basis_distribution_quantiles",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cvdd",
          "path": "/v1/metrics/indicators/cvdd",
          "method": "GET",
          "summary": "CVDD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cvdd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cyd",
          "path": "/v1/metrics/indicators/cyd",
          "method": "GET",
          "summary": "Coin Years Destroyed (CYD)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cyd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cyd_account_based",
          "path": "/v1/metrics/indicators/cyd_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted CYD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cyd_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cyd_account_based_supply_adjusted",
          "path": "/v1/metrics/indicators/cyd_account_based_supply_adjusted",
          "method": "GET",
          "summary": "Entity- and Supply-Adjusted CYD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cyd_account_based_supply_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "cyd_supply_adjusted",
          "path": "/v1/metrics/indicators/cyd_supply_adjusted",
          "method": "GET",
          "summary": "Supply-Adjusted CYD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/cyd_supply_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "difficulty_ribbon",
          "path": "/v1/metrics/indicators/difficulty_ribbon",
          "method": "GET",
          "summary": "Difficulty Ribbon",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/difficulty_ribbon",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "difficulty_ribbon_compression",
          "path": "/v1/metrics/indicators/difficulty_ribbon_compression",
          "method": "GET",
          "summary": "Difficulty Ribbon Compression",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/difficulty_ribbon_compression",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "dormancy_account_based",
          "path": "/v1/metrics/indicators/dormancy_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Dormancy",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/dormancy_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "dormancy_flow",
          "path": "/v1/metrics/indicators/dormancy_flow",
          "method": "GET",
          "summary": "Dormancy Flow",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/dormancy_flow",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "dormancy_lth_account_based",
          "path": "/v1/metrics/indicators/dormancy_lth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Long-Term Holder Dormancy",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/dormancy_lth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "dormancy_sth_account_based",
          "path": "/v1/metrics/indicators/dormancy_sth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Short-Term Holder Dormancy",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/dormancy_sth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "fear_greed",
          "path": "/v1/metrics/indicators/fear_greed",
          "method": "GET",
          "summary": "Fear & Greed Index",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/fear_greed",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "hash_ribbon",
          "path": "/v1/metrics/indicators/hash_ribbon",
          "method": "GET",
          "summary": "Hash Ribbon",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/hash_ribbon",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "hodled_lost_coins",
          "path": "/v1/metrics/indicators/hodled_lost_coins",
          "method": "GET",
          "summary": "Hodled or Lost Coins",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/hodled_lost_coins",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "hodler_net_position_change",
          "path": "/v1/metrics/indicators/hodler_net_position_change",
          "method": "GET",
          "summary": "Hodler Net Position Change",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/hodler_net_position_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "investor_capitalization",
          "path": "/v1/metrics/indicators/investor_capitalization",
          "method": "GET",
          "summary": "Investor Capitalization",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/investor_capitalization",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "leverage_position_closures",
          "path": "/v1/metrics/indicators/leverage_position_closures",
          "method": "GET",
          "summary": "Position Closures",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/leverage_position_closures",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "leverage_position_closures_scaled",
          "path": "/v1/metrics/indicators/leverage_position_closures_scaled",
          "method": "GET",
          "summary": "Position Closures Scaled",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/leverage_position_closures_scaled",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "leverage_position_openings",
          "path": "/v1/metrics/indicators/leverage_position_openings",
          "method": "GET",
          "summary": "Position Openings",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/leverage_position_openings",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "leverage_position_openings_scaled",
          "path": "/v1/metrics/indicators/leverage_position_openings_scaled",
          "method": "GET",
          "summary": "Position Openings Scaled",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/leverage_position_openings_scaled",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "liveliness",
          "path": "/v1/metrics/indicators/liveliness",
          "method": "GET",
          "summary": "Liveliness",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/liveliness",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "liveliness_account_based",
          "path": "/v1/metrics/indicators/liveliness_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Liveliness",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/liveliness_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "msol",
          "path": "/v1/metrics/indicators/msol",
          "method": "GET",
          "summary": "MSOL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/msol",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "msol_account_based",
          "path": "/v1/metrics/indicators/msol_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted MSOL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/msol_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mvrv_account_based",
          "path": "/v1/metrics/indicators/mvrv_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted MVRV",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/mvrv_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "net_realized_profit_loss",
          "path": "/v1/metrics/indicators/net_realized_profit_loss",
          "method": "GET",
          "summary": "Net Realized Profit/Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/net_realized_profit_loss",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "net_unrealized_profit_loss",
          "path": "/v1/metrics/indicators/net_unrealized_profit_loss",
          "method": "GET",
          "summary": "Net Unrealized Profit/Loss (NUPL)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/net_unrealized_profit_loss",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "net_unrealized_profit_loss_account_based",
          "path": "/v1/metrics/indicators/net_unrealized_profit_loss_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted NUPL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/net_unrealized_profit_loss_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "nupl_less_155",
          "path": "/v1/metrics/indicators/nupl_less_155",
          "method": "GET",
          "summary": "STH-NUPL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/nupl_less_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "nupl_less_155_account_based",
          "path": "/v1/metrics/indicators/nupl_less_155_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted STH-NUPL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/nupl_less_155_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "nupl_more_155",
          "path": "/v1/metrics/indicators/nupl_more_155",
          "method": "GET",
          "summary": "LTH-NUPL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/nupl_more_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "nupl_more_155_account_based",
          "path": "/v1/metrics/indicators/nupl_more_155_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted LTH-NUPL",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/nupl_more_155_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "nvt",
          "path": "/v1/metrics/indicators/nvt",
          "method": "GET",
          "summary": "NVT Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/nvt",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "nvt_entity_adjusted",
          "path": "/v1/metrics/indicators/nvt_entity_adjusted",
          "method": "GET",
          "summary": "Entity-Adjusted NVT",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/nvt_entity_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "nvts",
          "path": "/v1/metrics/indicators/nvts",
          "method": "GET",
          "summary": "NVT Signal",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/nvts",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "pi_cycle_top",
          "path": "/v1/metrics/indicators/pi_cycle_top",
          "method": "GET",
          "summary": "Pi Cycle Top Indicator",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/pi_cycle_top",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "power_law",
          "path": "/v1/metrics/indicators/power_law",
          "method": "GET",
          "summary": "Power-Law Model",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/power_law",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "puell_multiple",
          "path": "/v1/metrics/indicators/puell_multiple",
          "method": "GET",
          "summary": "Puell Multiple",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/puell_multiple",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "rcap_account_based",
          "path": "/v1/metrics/indicators/rcap_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Realized Cap",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/rcap_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_loss",
          "path": "/v1/metrics/indicators/realized_loss",
          "method": "GET",
          "summary": "Realized Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_loss",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_loss_account_based",
          "path": "/v1/metrics/indicators/realized_loss_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Realized Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_loss_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_loss_lth_account_based",
          "path": "/v1/metrics/indicators/realized_loss_lth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted LTH Realized Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_loss_lth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_loss_lth_to_exchanges_account_based",
          "path": "/v1/metrics/indicators/realized_loss_lth_to_exchanges_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted LTH Realized Loss to Exchanges",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_loss_lth_to_exchanges_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "realized_loss_sth_account_based",
          "path": "/v1/metrics/indicators/realized_loss_sth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted STH Realized Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_loss_sth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_loss_sth_to_exchanges_account_based",
          "path": "/v1/metrics/indicators/realized_loss_sth_to_exchanges_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted STH Realized Loss to Exchanges",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_loss_sth_to_exchanges_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "realized_loss_to_exchanges_account_based",
          "path": "/v1/metrics/indicators/realized_loss_to_exchanges_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Realized Loss to Exchanges",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_loss_to_exchanges_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "realized_profit",
          "path": "/v1/metrics/indicators/realized_profit",
          "method": "GET",
          "summary": "Realized Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_account_based",
          "path": "/v1/metrics/indicators/realized_profit_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Realized Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_loss_lth_sth_relative",
          "path": "/v1/metrics/indicators/realized_profit_loss_lth_sth_relative",
          "method": "GET",
          "summary": "Relative LTH/STH Realized Profit/Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit_loss_lth_sth_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_loss_lth_sth_to_exchanges_relative",
          "path": "/v1/metrics/indicators/realized_profit_loss_lth_sth_to_exchanges_relative",
          "method": "GET",
          "summary": "Relative LTH/STH Realized Profit/Loss to Exchanges",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit_loss_lth_sth_to_exchanges_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "realized_profit_loss_ratio",
          "path": "/v1/metrics/indicators/realized_profit_loss_ratio",
          "method": "GET",
          "summary": "Realized P/L Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit_loss_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_lth_account_based",
          "path": "/v1/metrics/indicators/realized_profit_lth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted LTH Realized Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit_lth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_lth_to_exchanges_account_based",
          "path": "/v1/metrics/indicators/realized_profit_lth_to_exchanges_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted LTH Realized Profit to Exchanges",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit_lth_to_exchanges_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "realized_profit_sth_account_based",
          "path": "/v1/metrics/indicators/realized_profit_sth_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted STH Realized Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit_sth_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_profit_sth_to_exchanges_account_based",
          "path": "/v1/metrics/indicators/realized_profit_sth_to_exchanges_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted STH Realized Profit to Exchanges",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit_sth_to_exchanges_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "realized_profit_to_exchanges_account_based",
          "path": "/v1/metrics/indicators/realized_profit_to_exchanges_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Realized Profit to Exchanges",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profit_to_exchanges_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "realized_profits_to_value_ratio",
          "path": "/v1/metrics/indicators/realized_profits_to_value_ratio",
          "method": "GET",
          "summary": "Realized Profits-to-Value (RPV) Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_profits_to_value_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_supply_density",
          "path": "/v1/metrics/indicators/realized_supply_density",
          "method": "GET",
          "summary": "Realized Supply Density",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_supply_density",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_supply_density_dynamic",
          "path": "/v1/metrics/indicators/realized_supply_density_dynamic",
          "method": "GET",
          "summary": "Realized Supply Density Dynamic",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_supply_density_dynamic",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_supply_density_less_155",
          "path": "/v1/metrics/indicators/realized_supply_density_less_155",
          "method": "GET",
          "summary": "STH Realized Supply Density",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_supply_density_less_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_supply_density_more_155",
          "path": "/v1/metrics/indicators/realized_supply_density_more_155",
          "method": "GET",
          "summary": "LTH Realized Supply Density",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/realized_supply_density_more_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "reserve_risk",
          "path": "/v1/metrics/indicators/reserve_risk",
          "method": "GET",
          "summary": "Reserve Risk",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/reserve_risk",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "rhodl_ratio",
          "path": "/v1/metrics/indicators/rhodl_ratio",
          "method": "GET",
          "summary": "RHODL Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/rhodl_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "seller_exhaustion_constant",
          "path": "/v1/metrics/indicators/seller_exhaustion_constant",
          "method": "GET",
          "summary": "Seller Exhaustion Constant",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/seller_exhaustion_constant",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "soab",
          "path": "/v1/metrics/indicators/soab",
          "method": "GET",
          "summary": "Spent Output Age Bands",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/soab",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_1d_1w",
          "path": "/v1/metrics/indicators/sol_1d_1w",
          "method": "GET",
          "summary": "Spent Outputs 1d-1w",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_1d_1w",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_1h",
          "path": "/v1/metrics/indicators/sol_1h",
          "method": "GET",
          "summary": "Spent Outputs < 1h",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_1h",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_1h_24h",
          "path": "/v1/metrics/indicators/sol_1h_24h",
          "method": "GET",
          "summary": "Spent Outputs 1h-24h",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_1h_24h",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_1m_3m",
          "path": "/v1/metrics/indicators/sol_1m_3m",
          "method": "GET",
          "summary": "Spent Outputs 1m-3m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_1m_3m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_1w_1m",
          "path": "/v1/metrics/indicators/sol_1w_1m",
          "method": "GET",
          "summary": "Spent Outputs 1w-1m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_1w_1m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_1y_2y",
          "path": "/v1/metrics/indicators/sol_1y_2y",
          "method": "GET",
          "summary": "Spent Outputs 1y-2y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_1y_2y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_2y_3y",
          "path": "/v1/metrics/indicators/sol_2y_3y",
          "method": "GET",
          "summary": "Spent Outputs 2y-3y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_2y_3y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_3m_6m",
          "path": "/v1/metrics/indicators/sol_3m_6m",
          "method": "GET",
          "summary": "Spent Outputs 3m-6m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_3m_6m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_3y_5y",
          "path": "/v1/metrics/indicators/sol_3y_5y",
          "method": "GET",
          "summary": "Spent Outputs 3y-5y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_3y_5y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_5y_7y",
          "path": "/v1/metrics/indicators/sol_5y_7y",
          "method": "GET",
          "summary": "Spent Outputs 5y-7y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_5y_7y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_6m_12m",
          "path": "/v1/metrics/indicators/sol_6m_12m",
          "method": "GET",
          "summary": "Spent Outputs 6m-12m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_6m_12m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_7y_10y",
          "path": "/v1/metrics/indicators/sol_7y_10y",
          "method": "GET",
          "summary": "Spent Outputs 7y-10y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_7y_10y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sol_more_10y",
          "path": "/v1/metrics/indicators/sol_more_10y",
          "method": "GET",
          "summary": "Spent Outputs > 10y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sol_more_10y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sopr",
          "path": "/v1/metrics/indicators/sopr",
          "method": "GET",
          "summary": "SOPR",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sopr",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sopr_account_based",
          "path": "/v1/metrics/indicators/sopr_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted SOPR",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sopr_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sopr_adjusted",
          "path": "/v1/metrics/indicators/sopr_adjusted",
          "method": "GET",
          "summary": "aSOPR",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sopr_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sopr_less_155",
          "path": "/v1/metrics/indicators/sopr_less_155",
          "method": "GET",
          "summary": "STH-SOPR",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sopr_less_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sopr_more_155",
          "path": "/v1/metrics/indicators/sopr_more_155",
          "method": "GET",
          "summary": "LTH-SOPR",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/sopr_more_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "spent_output_price_distribution_ath",
          "path": "/v1/metrics/indicators/spent_output_price_distribution_ath",
          "method": "GET",
          "summary": "SOPD (ATH-Partitioned)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/spent_output_price_distribution_ath",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "spent_output_price_distribution_percent",
          "path": "/v1/metrics/indicators/spent_output_price_distribution_percent",
          "method": "GET",
          "summary": "SOPD (Percent-Partitioned)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/spent_output_price_distribution_percent",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "spent_outputs_by_date_bands",
          "path": "/v1/metrics/indicators/spent_outputs_by_date_bands",
          "method": "GET",
          "summary": "Spent Outputs by Date Bands",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/spent_outputs_by_date_bands",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "spent_outputs_by_date_bands_relative",
          "path": "/v1/metrics/indicators/spent_outputs_by_date_bands_relative",
          "method": "GET",
          "summary": "Relative Outputs by Date Bands",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/spent_outputs_by_date_bands_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "spent_supply_distribution_quantiles",
          "path": "/v1/metrics/indicators/spent_supply_distribution_quantiles",
          "method": "GET",
          "summary": "Spent Supply Distribution Quantiles",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/spent_supply_distribution_quantiles",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "spent_volume_by_date_bands",
          "path": "/v1/metrics/indicators/spent_volume_by_date_bands",
          "method": "GET",
          "summary": "Spent Volume by Date Bands",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/spent_volume_by_date_bands",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spent_volume_by_date_bands_relative",
          "path": "/v1/metrics/indicators/spent_volume_by_date_bands_relative",
          "method": "GET",
          "summary": "Relative Volume by Date Bands",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/spent_volume_by_date_bands_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "ssr",
          "path": "/v1/metrics/indicators/ssr",
          "method": "GET",
          "summary": "Stablecoin Supply Ratio (SSR)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/ssr",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "ssr_oscillator",
          "path": "/v1/metrics/indicators/ssr_oscillator",
          "method": "GET",
          "summary": "Stablecoin Supply Ratio (SSR) Oscillator",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/ssr_oscillator",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "stock_to_flow_deflection",
          "path": "/v1/metrics/indicators/stock_to_flow_deflection",
          "method": "GET",
          "summary": "Stock-to-Flow Deflection",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/stock_to_flow_deflection",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "stock_to_flow_ratio",
          "path": "/v1/metrics/indicators/stock_to_flow_ratio",
          "method": "GET",
          "summary": "Stock-to-Flow Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/stock_to_flow_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "svab",
          "path": "/v1/metrics/indicators/svab",
          "method": "GET",
          "summary": "Spent Volume Age Bands (SVAB)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svab",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "svab_entity_adjusted",
          "path": "/v1/metrics/indicators/svab_entity_adjusted",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Age Bands (SVAB)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svab_entity_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "svl_1d_1w",
          "path": "/v1/metrics/indicators/svl_1d_1w",
          "method": "GET",
          "summary": "Spent Volume 1d-1w",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_1d_1w",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_1h",
          "path": "/v1/metrics/indicators/svl_1h",
          "method": "GET",
          "summary": "Spent Volume < 1h",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_1h",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_1h_24h",
          "path": "/v1/metrics/indicators/svl_1h_24h",
          "method": "GET",
          "summary": "Spent Volume 1h-24h",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_1h_24h",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_1m_3m",
          "path": "/v1/metrics/indicators/svl_1m_3m",
          "method": "GET",
          "summary": "Spent Volume 1m-3m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_1m_3m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_1w_1m",
          "path": "/v1/metrics/indicators/svl_1w_1m",
          "method": "GET",
          "summary": "Spent Volume 1w-1m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_1w_1m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_1y_2y",
          "path": "/v1/metrics/indicators/svl_1y_2y",
          "method": "GET",
          "summary": "Spent Volume 1y-2y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_1y_2y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_2y_3y",
          "path": "/v1/metrics/indicators/svl_2y_3y",
          "method": "GET",
          "summary": "Spent Volume 2y-3y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_2y_3y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_3m_6m",
          "path": "/v1/metrics/indicators/svl_3m_6m",
          "method": "GET",
          "summary": "Spent Volume 3m-6m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_3m_6m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_3y_5y",
          "path": "/v1/metrics/indicators/svl_3y_5y",
          "method": "GET",
          "summary": "Spent Volume 3y-5y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_3y_5y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_5y_7y",
          "path": "/v1/metrics/indicators/svl_5y_7y",
          "method": "GET",
          "summary": "Spent Volume 5y-7y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_5y_7y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_6m_12m",
          "path": "/v1/metrics/indicators/svl_6m_12m",
          "method": "GET",
          "summary": "Spent Volume 6m-12m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_6m_12m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_7y_10y",
          "path": "/v1/metrics/indicators/svl_7y_10y",
          "method": "GET",
          "summary": "Spent Volume 7y-10y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_7y_10y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_1d_1w",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_1d_1w",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 1d-1w",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_1d_1w",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_1m_3m",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_1m_3m",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 1m-3m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_1m_3m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_1w_1m",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_1w_1m",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 1w-1m ",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_1w_1m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_1y_2y",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_1y_2y",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 1y-2y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_1y_2y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_24h",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_24h",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan < 24h",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_24h",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_2y_3y",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_2y_3y",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 2y-3y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_2y_3y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_3m_6m",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_3m_6m",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 3m-6m",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_3m_6m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_3y_5y",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_3y_5y",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 3y-5y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_3y_5y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_5y_7y",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_5y_7y",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 5y-7y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_5y_7y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_6m_12m",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_6m_12m",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 6m-12m ",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_6m_12m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_7y_10y",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_7y_10y",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan 7y-10y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_7y_10y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_entity_adjusted_more_10y",
          "path": "/v1/metrics/indicators/svl_entity_adjusted_more_10y",
          "method": "GET",
          "summary": "Entity-Adjusted Spent Volume Lifespan > 10y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_entity_adjusted_more_10y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "svl_more_10y",
          "path": "/v1/metrics/indicators/svl_more_10y",
          "method": "GET",
          "summary": "Spent Volume > 10y",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/svl_more_10y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "unrealized_loss",
          "path": "/v1/metrics/indicators/unrealized_loss",
          "method": "GET",
          "summary": "Relative Unrealized Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/unrealized_loss",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "unrealized_loss_account_based",
          "path": "/v1/metrics/indicators/unrealized_loss_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Unrealized Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/unrealized_loss_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "unrealized_loss_less_155",
          "path": "/v1/metrics/indicators/unrealized_loss_less_155",
          "method": "GET",
          "summary": "STH Relative Unrealized Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/unrealized_loss_less_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "unrealized_loss_more_155",
          "path": "/v1/metrics/indicators/unrealized_loss_more_155",
          "method": "GET",
          "summary": "LTH Relative Unrealized Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/unrealized_loss_more_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "unrealized_profit",
          "path": "/v1/metrics/indicators/unrealized_profit",
          "method": "GET",
          "summary": "Relative Unrealized Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/unrealized_profit",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "unrealized_profit_account_based",
          "path": "/v1/metrics/indicators/unrealized_profit_account_based",
          "method": "GET",
          "summary": "Entity-Adjusted Unrealized Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/unrealized_profit_account_based",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "unrealized_profit_less_155",
          "path": "/v1/metrics/indicators/unrealized_profit_less_155",
          "method": "GET",
          "summary": "STH Relative Unrealized Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/unrealized_profit_less_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "unrealized_profit_more_155",
          "path": "/v1/metrics/indicators/unrealized_profit_more_155",
          "method": "GET",
          "summary": "LTH Relative Unrealized Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/unrealized_profit_more_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "urpd_entity_adjusted",
          "path": "/v1/metrics/indicators/urpd_entity_adjusted",
          "method": "GET",
          "summary": "Entity-Adjusted URPD",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/urpd_entity_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "utxo_realized_price_distribution_ath",
          "path": "/v1/metrics/indicators/utxo_realized_price_distribution_ath",
          "method": "GET",
          "summary": "URPD (ATH-Partitioned)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/utxo_realized_price_distribution_ath",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "utxo_realized_price_distribution_percent",
          "path": "/v1/metrics/indicators/utxo_realized_price_distribution_percent",
          "method": "GET",
          "summary": "URPD (Percent-Partitioned)",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/utxo_realized_price_distribution_percent",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "velocity",
          "path": "/v1/metrics/indicators/velocity",
          "method": "GET",
          "summary": "Velocity",
          "full_url": "https://api.glassnode.com/v1/metrics/indicators/velocity",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "institutions": {
      "name": "Institutions",
      "endpoint_count": 7,
      "endpoints": [
        {
          "metric": "purpose_etf_aum_sum",
          "path": "/v1/metrics/institutions/purpose_etf_aum_sum",
          "method": "GET",
          "summary": "Purpose Bitcoin ETF AUM",
          "full_url": "https://api.glassnode.com/v1/metrics/institutions/purpose_etf_aum_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "purpose_etf_flows_sum",
          "path": "/v1/metrics/institutions/purpose_etf_flows_sum",
          "method": "GET",
          "summary": "Purpose Bitcoin ETF Flows",
          "full_url": "https://api.glassnode.com/v1/metrics/institutions/purpose_etf_flows_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "purpose_etf_holdings_sum",
          "path": "/v1/metrics/institutions/purpose_etf_holdings_sum",
          "method": "GET",
          "summary": "Purpose Bitcoin ETF Holdings",
          "full_url": "https://api.glassnode.com/v1/metrics/institutions/purpose_etf_holdings_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "us_spot_etf_balances_all",
          "path": "/v1/metrics/institutions/us_spot_etf_balances_all",
          "method": "GET",
          "summary": "US Spot ETF Balances",
          "full_url": "https://api.glassnode.com/v1/metrics/institutions/us_spot_etf_balances_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "us_spot_etf_balances_latest",
          "path": "/v1/metrics/institutions/us_spot_etf_balances_latest",
          "method": "GET",
          "summary": "US Spot ETF Balances (Latest 24h)",
          "full_url": "https://api.glassnode.com/v1/metrics/institutions/us_spot_etf_balances_latest",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "i",
            "f",
            "c",
            "timestamp_format"
          ]
        },
        {
          "metric": "us_spot_etf_flows_all",
          "path": "/v1/metrics/institutions/us_spot_etf_flows_all",
          "method": "GET",
          "summary": "US Spot ETF Flows",
          "full_url": "https://api.glassnode.com/v1/metrics/institutions/us_spot_etf_flows_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "us_spot_etf_flows_net",
          "path": "/v1/metrics/institutions/us_spot_etf_flows_net",
          "method": "GET",
          "summary": "US Spot ETF Net Flows",
          "full_url": "https://api.glassnode.com/v1/metrics/institutions/us_spot_etf_flows_net",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        }
      ]
    },
    "lightning": {
      "name": "Lightning",
      "endpoint_count": 10,
      "endpoints": [
        {
          "metric": "base_fee_median",
          "path": "/v1/metrics/lightning/base_fee_median",
          "method": "GET",
          "summary": "Lightning Network Base Fee (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/base_fee_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "channel_size_mean",
          "path": "/v1/metrics/lightning/channel_size_mean",
          "method": "GET",
          "summary": "Lightning Network Channel Size (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/channel_size_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "channel_size_median",
          "path": "/v1/metrics/lightning/channel_size_median",
          "method": "GET",
          "summary": "Lightning Network Channel Size (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/channel_size_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "channels_count",
          "path": "/v1/metrics/lightning/channels_count",
          "method": "GET",
          "summary": "Lightning Network Number of Channels",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/channels_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "fee_rate_median",
          "path": "/v1/metrics/lightning/fee_rate_median",
          "method": "GET",
          "summary": "Lightning Network Fee Rate (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/fee_rate_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gini_capacity_distribution",
          "path": "/v1/metrics/lightning/gini_capacity_distribution",
          "method": "GET",
          "summary": "Lightning Network Gini Capacity Distribution",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/gini_capacity_distribution",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "gini_channel_distribution",
          "path": "/v1/metrics/lightning/gini_channel_distribution",
          "method": "GET",
          "summary": "Lightning Network Gini Channel Distribution",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/gini_channel_distribution",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "network_capacity_sum",
          "path": "/v1/metrics/lightning/network_capacity_sum",
          "method": "GET",
          "summary": "Lightning Network Capacity",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/network_capacity_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "node_connectivity",
          "path": "/v1/metrics/lightning/node_connectivity",
          "method": "GET",
          "summary": "Lightning Network Node Connectivity",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/node_connectivity",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "nodes_count",
          "path": "/v1/metrics/lightning/nodes_count",
          "method": "GET",
          "summary": "Lightning Network Number of Nodes",
          "full_url": "https://api.glassnode.com/v1/metrics/lightning/nodes_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "market": {
      "name": "Market",
      "endpoint_count": 32,
      "endpoints": [
        {
          "metric": "amer_30d_price_change",
          "path": "/v1/metrics/market/amer_30d_price_change",
          "method": "GET",
          "summary": "US Month-over-Month Price Change",
          "full_url": "https://api.glassnode.com/v1/metrics/market/amer_30d_price_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "apac_30d_price_change",
          "path": "/v1/metrics/market/apac_30d_price_change",
          "method": "GET",
          "summary": "Asia Month-over-Month Price Change",
          "full_url": "https://api.glassnode.com/v1/metrics/market/apac_30d_price_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_dominance",
          "path": "/v1/metrics/market/btc_dominance",
          "method": "GET",
          "summary": "BTC Dominance",
          "full_url": "https://api.glassnode.com/v1/metrics/market/btc_dominance",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "deltacap_usd",
          "path": "/v1/metrics/market/deltacap_usd",
          "method": "GET",
          "summary": "Delta Cap",
          "full_url": "https://api.glassnode.com/v1/metrics/market/deltacap_usd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "emea_30d_price_change",
          "path": "/v1/metrics/market/emea_30d_price_change",
          "method": "GET",
          "summary": "EU Month-over-Month Price Change",
          "full_url": "https://api.glassnode.com/v1/metrics/market/emea_30d_price_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "hodl_cave",
          "path": "/v1/metrics/market/hodl_cave",
          "method": "GET",
          "summary": "HODL Cave",
          "full_url": "https://api.glassnode.com/v1/metrics/market/hodl_cave",
          "required_params": [
            "a",
            "i"
          ],
          "optional_params": [
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "marketcap_realized_usd",
          "path": "/v1/metrics/market/marketcap_realized_usd",
          "method": "GET",
          "summary": "Realized Cap",
          "full_url": "https://api.glassnode.com/v1/metrics/market/marketcap_realized_usd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "marketcap_usd",
          "path": "/v1/metrics/market/marketcap_usd",
          "method": "GET",
          "summary": "Market Cap",
          "full_url": "https://api.glassnode.com/v1/metrics/market/marketcap_usd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mvrv",
          "path": "/v1/metrics/market/mvrv",
          "method": "GET",
          "summary": "MVRV Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/market/mvrv",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mvrv_less_155",
          "path": "/v1/metrics/market/mvrv_less_155",
          "method": "GET",
          "summary": "STH-MVRV",
          "full_url": "https://api.glassnode.com/v1/metrics/market/mvrv_less_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mvrv_median",
          "path": "/v1/metrics/market/mvrv_median",
          "method": "GET",
          "summary": "Median MVRV",
          "full_url": "https://api.glassnode.com/v1/metrics/market/mvrv_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mvrv_more_155",
          "path": "/v1/metrics/market/mvrv_more_155",
          "method": "GET",
          "summary": "LTH-MVRV",
          "full_url": "https://api.glassnode.com/v1/metrics/market/mvrv_more_155",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mvrv_z_score",
          "path": "/v1/metrics/market/mvrv_z_score",
          "method": "GET",
          "summary": "MVRV Z-Score",
          "full_url": "https://api.glassnode.com/v1/metrics/market/mvrv_z_score",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "price_drawdown_relative",
          "path": "/v1/metrics/market/price_drawdown_relative",
          "method": "GET",
          "summary": "Price Drawdown from ATH",
          "full_url": "https://api.glassnode.com/v1/metrics/market/price_drawdown_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "price_realized_median_usd",
          "path": "/v1/metrics/market/price_realized_median_usd",
          "method": "GET",
          "summary": "Median Realized Price",
          "full_url": "https://api.glassnode.com/v1/metrics/market/price_realized_median_usd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "price_realized_usd",
          "path": "/v1/metrics/market/price_realized_usd",
          "method": "GET",
          "summary": "Realized Price",
          "full_url": "https://api.glassnode.com/v1/metrics/market/price_realized_usd",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "price_usd_close",
          "path": "/v1/metrics/market/price_usd_close",
          "method": "GET",
          "summary": "Price",
          "full_url": "https://api.glassnode.com/v1/metrics/market/price_usd_close",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "price_usd_ohlc",
          "path": "/v1/metrics/market/price_usd_ohlc",
          "method": "GET",
          "summary": "Price OHLC",
          "full_url": "https://api.glassnode.com/v1/metrics/market/price_usd_ohlc",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_volatility_1_month",
          "path": "/v1/metrics/market/realized_volatility_1_month",
          "method": "GET",
          "summary": "Realized Volatility (1 Month)",
          "full_url": "https://api.glassnode.com/v1/metrics/market/realized_volatility_1_month",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_volatility_1_week",
          "path": "/v1/metrics/market/realized_volatility_1_week",
          "method": "GET",
          "summary": "Realized Volatility (1 Week)",
          "full_url": "https://api.glassnode.com/v1/metrics/market/realized_volatility_1_week",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_volatility_1_year",
          "path": "/v1/metrics/market/realized_volatility_1_year",
          "method": "GET",
          "summary": "Realized Volatility (1 Year)",
          "full_url": "https://api.glassnode.com/v1/metrics/market/realized_volatility_1_year",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_volatility_2_weeks",
          "path": "/v1/metrics/market/realized_volatility_2_weeks",
          "method": "GET",
          "summary": "Realized Volatility (2 Weeks)",
          "full_url": "https://api.glassnode.com/v1/metrics/market/realized_volatility_2_weeks",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_volatility_3_months",
          "path": "/v1/metrics/market/realized_volatility_3_months",
          "method": "GET",
          "summary": "Realized Volatility (3 Months)",
          "full_url": "https://api.glassnode.com/v1/metrics/market/realized_volatility_3_months",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_volatility_6_months",
          "path": "/v1/metrics/market/realized_volatility_6_months",
          "method": "GET",
          "summary": "Realized Volatility (6 Months)",
          "full_url": "https://api.glassnode.com/v1/metrics/market/realized_volatility_6_months",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "realized_volatility_all",
          "path": "/v1/metrics/market/realized_volatility_all",
          "method": "GET",
          "summary": "Realized Volatility (All)",
          "full_url": "https://api.glassnode.com/v1/metrics/market/realized_volatility_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "spot_buying_volume_sum",
          "path": "/v1/metrics/market/spot_buying_volume_sum",
          "method": "GET",
          "summary": "Spot Buying Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/market/spot_buying_volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spot_selling_volume_sum",
          "path": "/v1/metrics/market/spot_selling_volume_sum",
          "method": "GET",
          "summary": "Spot Selling Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/market/spot_selling_volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spot_vd_sum",
          "path": "/v1/metrics/market/spot_vd_sum",
          "method": "GET",
          "summary": "Spot Volume Delta",
          "full_url": "https://api.glassnode.com/v1/metrics/market/spot_vd_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spot_volume_daily_latest",
          "path": "/v1/metrics/market/spot_volume_daily_latest",
          "method": "GET",
          "summary": "Spot Volume 24h (Latest)",
          "full_url": "https://api.glassnode.com/v1/metrics/market/spot_volume_daily_latest",
          "required_params": [
            "a",
            "i"
          ],
          "optional_params": [
            "f",
            "c",
            "timestamp_format"
          ]
        },
        {
          "metric": "spot_volume_daily_sum",
          "path": "/v1/metrics/market/spot_volume_daily_sum",
          "method": "GET",
          "summary": "Spot Volume 24h",
          "full_url": "https://api.glassnode.com/v1/metrics/market/spot_volume_daily_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spot_volume_daily_sum_all",
          "path": "/v1/metrics/market/spot_volume_daily_sum_all",
          "method": "GET",
          "summary": "Spot Volume 24h (Stacked)",
          "full_url": "https://api.glassnode.com/v1/metrics/market/spot_volume_daily_sum_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "spot_volume_sum_intraday",
          "path": "/v1/metrics/market/spot_volume_sum_intraday",
          "method": "GET",
          "summary": "Spot Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/market/spot_volume_sum_intraday",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        }
      ]
    },
    "mempool": {
      "name": "Mempool",
      "endpoint_count": 10,
      "endpoints": [
        {
          "metric": "fees_average_relative",
          "path": "/v1/metrics/mempool/fees_average_relative",
          "method": "GET",
          "summary": "Mempool Average Relative Fee",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/fees_average_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "fees_distribution",
          "path": "/v1/metrics/mempool/fees_distribution",
          "method": "GET",
          "summary": "Mempool Total Amount of Fees by Relative Fee",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/fees_distribution",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "fees_median_relative",
          "path": "/v1/metrics/mempool/fees_median_relative",
          "method": "GET",
          "summary": "Mempool Median Relative Fee",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/fees_median_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "fees_sum",
          "path": "/v1/metrics/mempool/fees_sum",
          "method": "GET",
          "summary": "Mempool Total Amount of Fees",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/fees_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "txs_count_distribution",
          "path": "/v1/metrics/mempool/txs_count_distribution",
          "method": "GET",
          "summary": "Mempool Transaction Count by Relative Fee",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/txs_count_distribution",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "txs_count_sum",
          "path": "/v1/metrics/mempool/txs_count_sum",
          "method": "GET",
          "summary": "Mempool Transaction Count",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/txs_count_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "txs_size_distribution",
          "path": "/v1/metrics/mempool/txs_size_distribution",
          "method": "GET",
          "summary": "Mempool Transactions Size by Relative Fee",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/txs_size_distribution",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "txs_size_sum",
          "path": "/v1/metrics/mempool/txs_size_sum",
          "method": "GET",
          "summary": "Mempool Transactions Size",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/txs_size_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "txs_value_distribution",
          "path": "/v1/metrics/mempool/txs_value_distribution",
          "method": "GET",
          "summary": "Mempool Total Amount of Coins by Relative Fee",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/txs_value_distribution",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "txs_value_sum",
          "path": "/v1/metrics/mempool/txs_value_sum",
          "method": "GET",
          "summary": "Mempool Total Amount of Coins",
          "full_url": "https://api.glassnode.com/v1/metrics/mempool/txs_value_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        }
      ]
    },
    "mining": {
      "name": "Mining",
      "endpoint_count": 9,
      "endpoints": [
        {
          "metric": "difficulty_latest",
          "path": "/v1/metrics/mining/difficulty_latest",
          "method": "GET",
          "summary": "Difficulty",
          "full_url": "https://api.glassnode.com/v1/metrics/mining/difficulty_latest",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "hash_rate_mean",
          "path": "/v1/metrics/mining/hash_rate_mean",
          "method": "GET",
          "summary": "Hash Rate",
          "full_url": "https://api.glassnode.com/v1/metrics/mining/hash_rate_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "marketcap_thermocap_ratio",
          "path": "/v1/metrics/mining/marketcap_thermocap_ratio",
          "method": "GET",
          "summary": "Market Cap to Thermocap Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/mining/marketcap_thermocap_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "miners_outflow_multiple",
          "path": "/v1/metrics/mining/miners_outflow_multiple",
          "method": "GET",
          "summary": "Miner Outflow Multiple",
          "full_url": "https://api.glassnode.com/v1/metrics/mining/miners_outflow_multiple",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "miner"
          ]
        },
        {
          "metric": "miners_unspent_supply",
          "path": "/v1/metrics/mining/miners_unspent_supply",
          "method": "GET",
          "summary": "Miner Unspent Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/mining/miners_unspent_supply",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "revenue_from_fees",
          "path": "/v1/metrics/mining/revenue_from_fees",
          "method": "GET",
          "summary": "Miner Revenue (Fees)",
          "full_url": "https://api.glassnode.com/v1/metrics/mining/revenue_from_fees",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "revenue_sum",
          "path": "/v1/metrics/mining/revenue_sum",
          "method": "GET",
          "summary": "Miner Revenue (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/mining/revenue_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "thermocap",
          "path": "/v1/metrics/mining/thermocap",
          "method": "GET",
          "summary": "Thermocap",
          "full_url": "https://api.glassnode.com/v1/metrics/mining/thermocap",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "volume_mined_sum",
          "path": "/v1/metrics/mining/volume_mined_sum",
          "method": "GET",
          "summary": "Miner Revenue (Block Rewards)",
          "full_url": "https://api.glassnode.com/v1/metrics/mining/volume_mined_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        }
      ]
    },
    "protocols": {
      "name": "Protocols",
      "endpoint_count": 58,
      "endpoints": [
        {
          "metric": "aave_v1_available_liquidity_perc_by_token",
          "path": "/v1/metrics/protocols/aave_v1_available_liquidity_perc_by_token",
          "method": "GET",
          "summary": "Aave V1: Available Liquidity Volume Percentage by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v1_available_liquidity_perc_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v1_available_liquidity_sum_by_token",
          "path": "/v1/metrics/protocols/aave_v1_available_liquidity_sum_by_token",
          "method": "GET",
          "summary": "Aave V1: Available Liquidity Volume by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v1_available_liquidity_sum_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v1_collateral_rate_by_token",
          "path": "/v1/metrics/protocols/aave_v1_collateral_rate_by_token",
          "method": "GET",
          "summary": "Aave V1: Collateral Rate by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v1_collateral_rate_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v1_count_by_action",
          "path": "/v1/metrics/protocols/aave_v1_count_by_action",
          "method": "GET",
          "summary": "Aave V1: Count by Action Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v1_count_by_action",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v1_stable_borrow_rate_by_token",
          "path": "/v1/metrics/protocols/aave_v1_stable_borrow_rate_by_token",
          "method": "GET",
          "summary": "Aave V1: Fixed Borrow Rate by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v1_stable_borrow_rate_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v1_variable_borrow_rate_by_token",
          "path": "/v1/metrics/protocols/aave_v1_variable_borrow_rate_by_token",
          "method": "GET",
          "summary": "Aave V1: Variable Borrow Rate by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v1_variable_borrow_rate_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v1_volume_sum_by_action",
          "path": "/v1/metrics/protocols/aave_v1_volume_sum_by_action",
          "method": "GET",
          "summary": "Aave V1: Volume by Action Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v1_volume_sum_by_action",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_available_liquidity_perc_by_token",
          "path": "/v1/metrics/protocols/aave_v2_available_liquidity_perc_by_token",
          "method": "GET",
          "summary": "Aave V2: Available Liquidity Percentage Share by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_available_liquidity_perc_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_available_liquidity_sum_by_token",
          "path": "/v1/metrics/protocols/aave_v2_available_liquidity_sum_by_token",
          "method": "GET",
          "summary": "Aave V2: Available Liquidity Volume by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_available_liquidity_sum_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_borrows_perc_by_token",
          "path": "/v1/metrics/protocols/aave_v2_borrows_perc_by_token",
          "method": "GET",
          "summary": "Aave V2: Borrow Volume Share Percentage by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_borrows_perc_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_borrows_sum_by_token",
          "path": "/v1/metrics/protocols/aave_v2_borrows_sum_by_token",
          "method": "GET",
          "summary": "Aave V2: Borrow Volume by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_borrows_sum_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_collateral_rate_by_token",
          "path": "/v1/metrics/protocols/aave_v2_collateral_rate_by_token",
          "method": "GET",
          "summary": "Aave V2: Collateral Rate by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_collateral_rate_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_count_by_action",
          "path": "/v1/metrics/protocols/aave_v2_count_by_action",
          "method": "GET",
          "summary": "Aave V2: Count by Action Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_count_by_action",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_stable_borrow_rate_by_token",
          "path": "/v1/metrics/protocols/aave_v2_stable_borrow_rate_by_token",
          "method": "GET",
          "summary": "Aave V2: Fixed Borrow Rate by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_stable_borrow_rate_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_total_value_locked_perc",
          "path": "/v1/metrics/protocols/aave_v2_total_value_locked_perc",
          "method": "GET",
          "summary": "Aave V2: Activity-Based Total Value Locked (TVL) Percentage Share",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_total_value_locked_perc",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_total_value_locked_sum",
          "path": "/v1/metrics/protocols/aave_v2_total_value_locked_sum",
          "method": "GET",
          "summary": "Aave V2: Activity-Based Total Value Locked (TVL)",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_total_value_locked_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_variable_borrow_rate_by_token",
          "path": "/v1/metrics/protocols/aave_v2_variable_borrow_rate_by_token",
          "method": "GET",
          "summary": "Aave V2: Variable Borrow Rate by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_variable_borrow_rate_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v2_volume_sum_by_action",
          "path": "/v1/metrics/protocols/aave_v2_volume_sum_by_action",
          "method": "GET",
          "summary": "Aave V2: Volume by Action Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v2_volume_sum_by_action",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_available_liquidity_perc_by_token",
          "path": "/v1/metrics/protocols/aave_v3_available_liquidity_perc_by_token",
          "method": "GET",
          "summary": "Aave V3: Available Liquidity Percentage Share by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_available_liquidity_perc_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_available_liquidity_sum_by_token",
          "path": "/v1/metrics/protocols/aave_v3_available_liquidity_sum_by_token",
          "method": "GET",
          "summary": "Aave V3: Available Liquidity Volume by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_available_liquidity_sum_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_borrows_perc_by_token",
          "path": "/v1/metrics/protocols/aave_v3_borrows_perc_by_token",
          "method": "GET",
          "summary": "Aave V3: Borrow Volume Share Percentage by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_borrows_perc_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_borrows_sum_by_token",
          "path": "/v1/metrics/protocols/aave_v3_borrows_sum_by_token",
          "method": "GET",
          "summary": "Aave V3: Borrow Volume by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_borrows_sum_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_collateral_rate_by_token",
          "path": "/v1/metrics/protocols/aave_v3_collateral_rate_by_token",
          "method": "GET",
          "summary": "Aave V3: Collateral Rate by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_collateral_rate_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_count_by_action",
          "path": "/v1/metrics/protocols/aave_v3_count_by_action",
          "method": "GET",
          "summary": "Aave V3: Count by Action Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_count_by_action",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_stable_borrow_rate_by_token",
          "path": "/v1/metrics/protocols/aave_v3_stable_borrow_rate_by_token",
          "method": "GET",
          "summary": "Aave V3: Stable Borrow Rate by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_stable_borrow_rate_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_total_value_locked_perc",
          "path": "/v1/metrics/protocols/aave_v3_total_value_locked_perc",
          "method": "GET",
          "summary": "Aave V3: Activity-Based Total Value Locked (TVL) Percentage Share",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_total_value_locked_perc",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_total_value_locked_sum",
          "path": "/v1/metrics/protocols/aave_v3_total_value_locked_sum",
          "method": "GET",
          "summary": "Aave V3: Activity-Based Total Value Locked (TVL)",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_total_value_locked_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_variable_borrow_rate_by_token",
          "path": "/v1/metrics/protocols/aave_v3_variable_borrow_rate_by_token",
          "method": "GET",
          "summary": "Aave V3: Variable Borrow Rate by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_variable_borrow_rate_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "aave_v3_volume_sum_by_action",
          "path": "/v1/metrics/protocols/aave_v3_volume_sum_by_action",
          "method": "GET",
          "summary": "Aave V3: Volume by Action Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/aave_v3_volume_sum_by_action",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "compound_count_by_action",
          "path": "/v1/metrics/protocols/compound_count_by_action",
          "method": "GET",
          "summary": "Compound: User Interaction Count by Action Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/compound_count_by_action",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "compound_deposit_flow",
          "path": "/v1/metrics/protocols/compound_deposit_flow",
          "method": "GET",
          "summary": "Compound: Deposit Inflows and Outflows",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/compound_deposit_flow",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "compound_loan_flow",
          "path": "/v1/metrics/protocols/compound_loan_flow",
          "method": "GET",
          "summary": "Compound: Loan Inflows and Outflows",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/compound_loan_flow",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "compound_total_value_locked",
          "path": "/v1/metrics/protocols/compound_total_value_locked",
          "method": "GET",
          "summary": "Compound: Total Value Locked",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/compound_total_value_locked",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "compound_utilization_ratio",
          "path": "/v1/metrics/protocols/compound_utilization_ratio",
          "method": "GET",
          "summary": "Compound: Utilization Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/compound_utilization_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "compound_volume_by_action",
          "path": "/v1/metrics/protocols/compound_volume_by_action",
          "method": "GET",
          "summary": "Compound: User Interaction Volume by Action Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/compound_volume_by_action",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "lido_deposits_volume_sum",
          "path": "/v1/metrics/protocols/lido_deposits_volume_sum",
          "method": "GET",
          "summary": "Lido Deposits Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/lido_deposits_volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "lido_total_value_locked",
          "path": "/v1/metrics/protocols/lido_total_value_locked",
          "method": "GET",
          "summary": "Lido Total Value Locked",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/lido_total_value_locked",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "lido_volume_net",
          "path": "/v1/metrics/protocols/lido_volume_net",
          "method": "GET",
          "summary": "Lido Net Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/lido_volume_net",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "lido_withdrawn_volume_sum",
          "path": "/v1/metrics/protocols/lido_withdrawn_volume_sum",
          "method": "GET",
          "summary": "Lido Withdrawn Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/lido_withdrawn_volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "maker_event_count_by_type",
          "path": "/v1/metrics/protocols/maker_event_count_by_type",
          "method": "GET",
          "summary": "Maker: Event Count by Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/maker_event_count_by_type",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "maker_event_volume_usd_by_type",
          "path": "/v1/metrics/protocols/maker_event_volume_usd_by_type",
          "method": "GET",
          "summary": "Maker: Event Volume (USD) by Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/maker_event_volume_usd_by_type",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "maker_new_vaults_created_count",
          "path": "/v1/metrics/protocols/maker_new_vaults_created_count",
          "method": "GET",
          "summary": "Maker: Number of New Vaults Created",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/maker_new_vaults_created_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "maker_psm_balance_sum",
          "path": "/v1/metrics/protocols/maker_psm_balance_sum",
          "method": "GET",
          "summary": "Maker: Peg Stability Module (PSM) Balance",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/maker_psm_balance_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "maker_total_value_locked_sum",
          "path": "/v1/metrics/protocols/maker_total_value_locked_sum",
          "method": "GET",
          "summary": "Maker: Total Value Locked (TVL)",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/maker_total_value_locked_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "maker_total_value_locked_sum_by_token",
          "path": "/v1/metrics/protocols/maker_total_value_locked_sum_by_token",
          "method": "GET",
          "summary": "Maker: Total Value Locked (TVL) by Token",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/maker_total_value_locked_sum_by_token",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "maker_total_vaults_created_cum",
          "path": "/v1/metrics/protocols/maker_total_vaults_created_cum",
          "method": "GET",
          "summary": "Maker: Total Vaults Created",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/maker_total_vaults_created_cum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_fees_sum",
          "path": "/v1/metrics/protocols/uniswap_fees_sum",
          "method": "GET",
          "summary": "Uniswap Fees",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_fees_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_pools_created_count",
          "path": "/v1/metrics/protocols/uniswap_pools_created_count",
          "method": "GET",
          "summary": "Uniswap Pools Created",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_pools_created_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_total_value_locked",
          "path": "/v1/metrics/protocols/uniswap_total_value_locked",
          "method": "GET",
          "summary": "Uniswap: Total Value Locked",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_total_value_locked",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_total_value_locked_by_fee_tier",
          "path": "/v1/metrics/protocols/uniswap_total_value_locked_by_fee_tier",
          "method": "GET",
          "summary": "Uniswap TVL per Fee Tier",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_total_value_locked_by_fee_tier",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_trades_count",
          "path": "/v1/metrics/protocols/uniswap_trades_count",
          "method": "GET",
          "summary": "Uniswap Trade Count",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_trades_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_v3_avl_by_fee_tier_mean",
          "path": "/v1/metrics/protocols/uniswap_v3_avl_by_fee_tier_mean",
          "method": "GET",
          "summary": "Uniswap Mean AVL per Fee Tier",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_v3_avl_by_fee_tier_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_v3_avl_mean",
          "path": "/v1/metrics/protocols/uniswap_v3_avl_mean",
          "method": "GET",
          "summary": "Uniswap Mean AVL",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_v3_avl_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_v3_fees_sum_by_fee_tier",
          "path": "/v1/metrics/protocols/uniswap_v3_fees_sum_by_fee_tier",
          "method": "GET",
          "summary": "Uniswap Fees per Fee Tier",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_v3_fees_sum_by_fee_tier",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_v3_pools_created_by_fee_tier_count",
          "path": "/v1/metrics/protocols/uniswap_v3_pools_created_by_fee_tier_count",
          "method": "GET",
          "summary": "Uniswap Pools Created per Fee Tier",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_v3_pools_created_by_fee_tier_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_volume_by_size_cohort",
          "path": "/v1/metrics/protocols/uniswap_volume_by_size_cohort",
          "method": "GET",
          "summary": "Uniswap Trade Volume per Trade Size",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_volume_by_size_cohort",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_volume_by_token_type",
          "path": "/v1/metrics/protocols/uniswap_volume_by_token_type",
          "method": "GET",
          "summary": "Uniswap Trade Volume per Token Type",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_volume_by_token_type",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "uniswap_volume_traded_sum",
          "path": "/v1/metrics/protocols/uniswap_volume_traded_sum",
          "method": "GET",
          "summary": "Uniswap Trade Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/protocols/uniswap_volume_traded_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "signals": {
      "name": "Signals",
      "endpoint_count": 14,
      "endpoints": [
        {
          "metric": "altcoin_index",
          "path": "/v1/metrics/signals/altcoin_index",
          "method": "GET",
          "summary": "Altcoin Cycle Signal",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/altcoin_index",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_bss_goldilocks",
          "path": "/v1/metrics/signals/btc_bss_goldilocks",
          "method": "GET",
          "summary": "BSS Goldilocks Signal",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_bss_goldilocks",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_bss_goldilocks_short",
          "path": "/v1/metrics/signals/btc_bss_goldilocks_short",
          "method": "GET",
          "summary": "BSS Goldilocks Short Signal",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_bss_goldilocks_short",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_bss_indicator_1",
          "path": "/v1/metrics/signals/btc_bss_indicator_1",
          "method": "GET",
          "summary": "Bitcoin Sharpe Signal - Indicator I",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_bss_indicator_1",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_bss_indicator_2",
          "path": "/v1/metrics/signals/btc_bss_indicator_2",
          "method": "GET",
          "summary": "Bitcoin Sharpe Signal - Indicator II",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_bss_indicator_2",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_bss_indicator_3",
          "path": "/v1/metrics/signals/btc_bss_indicator_3",
          "method": "GET",
          "summary": "Bitcoin Sharpe Signal - Indicator III",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_bss_indicator_3",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_bss_indicator_4",
          "path": "/v1/metrics/signals/btc_bss_indicator_4",
          "method": "GET",
          "summary": "Bitcoin Sharpe Signal - Indicator IV",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_bss_indicator_4",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_bss_short",
          "path": "/v1/metrics/signals/btc_bss_short",
          "method": "GET",
          "summary": "Bitcoin Sharpe Signal Short",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_bss_short",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_bss_v2",
          "path": "/v1/metrics/signals/btc_bss_v2",
          "method": "GET",
          "summary": "Intraday Bitcoin Sharpe Signal",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_bss_v2",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_risk_index",
          "path": "/v1/metrics/signals/btc_risk_index",
          "method": "GET",
          "summary": "Bitcoin Risk Signal",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_risk_index",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "btc_sharpe_signal",
          "path": "/v1/metrics/signals/btc_sharpe_signal",
          "method": "GET",
          "summary": "Bitcoin Sharpe Signal",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/btc_sharpe_signal",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "ecosystem_momentum_index",
          "path": "/v1/metrics/signals/ecosystem_momentum_index",
          "method": "GET",
          "summary": "Ecosystem Momentum Signal",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/ecosystem_momentum_index",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "l1_native_tokens_returns_vs_btc",
          "path": "/v1/metrics/signals/l1_native_tokens_returns_vs_btc",
          "method": "GET",
          "summary": "Token returns vs BTC",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/l1_native_tokens_returns_vs_btc",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "mcap_returns_vs_btc",
          "path": "/v1/metrics/signals/mcap_returns_vs_btc",
          "method": "GET",
          "summary": "Marketcap returns vs BTC",
          "full_url": "https://api.glassnode.com/v1/metrics/signals/mcap_returns_vs_btc",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    },
    "supply": {
      "name": "Supply",
      "endpoint_count": 61,
      "endpoints": [
        {
          "metric": "active_1d_1w",
          "path": "/v1/metrics/supply/active_1d_1w",
          "method": "GET",
          "summary": "Supply Last Active 1d-1w",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_1d_1w",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_1m_3m",
          "path": "/v1/metrics/supply/active_1m_3m",
          "method": "GET",
          "summary": "Supply Last Active 1m-3m",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_1m_3m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_1w_1m",
          "path": "/v1/metrics/supply/active_1w_1m",
          "method": "GET",
          "summary": "Supply Last Active 1w-1m",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_1w_1m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_1y_2y",
          "path": "/v1/metrics/supply/active_1y_2y",
          "method": "GET",
          "summary": "Supply Last Active 1y-2y",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_1y_2y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_24h",
          "path": "/v1/metrics/supply/active_24h",
          "method": "GET",
          "summary": "Supply Last Active < 24h",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_24h",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_2y_3y",
          "path": "/v1/metrics/supply/active_2y_3y",
          "method": "GET",
          "summary": "Supply Last Active 2y-3y",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_2y_3y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_3m_6m",
          "path": "/v1/metrics/supply/active_3m_6m",
          "method": "GET",
          "summary": "Supply Last Active 3m-6m",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_3m_6m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_3y_5y",
          "path": "/v1/metrics/supply/active_3y_5y",
          "method": "GET",
          "summary": "Supply Last Active 3y-5y",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_3y_5y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_5y_7y",
          "path": "/v1/metrics/supply/active_5y_7y",
          "method": "GET",
          "summary": "Supply Last Active 5y-7y",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_5y_7y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_6m_12m",
          "path": "/v1/metrics/supply/active_6m_12m",
          "method": "GET",
          "summary": "Supply Last Active 6m-12m",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_6m_12m",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_7y_10y",
          "path": "/v1/metrics/supply/active_7y_10y",
          "method": "GET",
          "summary": "Supply Last Active 7y-10y",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_7y_10y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_more_10y",
          "path": "/v1/metrics/supply/active_more_10y",
          "method": "GET",
          "summary": "Supply Last Active >10y",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_more_10y",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "active_more_1y_percent",
          "path": "/v1/metrics/supply/active_more_1y_percent",
          "method": "GET",
          "summary": "Supply Last Active 1+ Years Ago",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_more_1y_percent",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "active_more_2y_percent",
          "path": "/v1/metrics/supply/active_more_2y_percent",
          "method": "GET",
          "summary": "Supply Last Active 2+ Years Ago",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_more_2y_percent",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "active_more_3y_percent",
          "path": "/v1/metrics/supply/active_more_3y_percent",
          "method": "GET",
          "summary": "Supply Last Active 3+ Years Ago",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_more_3y_percent",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "active_more_5y_percent",
          "path": "/v1/metrics/supply/active_more_5y_percent",
          "method": "GET",
          "summary": "Supply Last Active 5+ Years Ago",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/active_more_5y_percent",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "activity_retention",
          "path": "/v1/metrics/supply/activity_retention",
          "method": "GET",
          "summary": "MoM Activity Retention Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/activity_retention",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "amer_1y_supply_change",
          "path": "/v1/metrics/supply/amer_1y_supply_change",
          "method": "GET",
          "summary": "US Year-over-Year Supply Change",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/amer_1y_supply_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "apac_1y_supply_change",
          "path": "/v1/metrics/supply/apac_1y_supply_change",
          "method": "GET",
          "summary": "Asia Year-over-Year Supply Change",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/apac_1y_supply_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "burn_rate",
          "path": "/v1/metrics/supply/burn_rate",
          "method": "GET",
          "summary": "Burn Rate (Base Fee)",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/burn_rate",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "burned",
          "path": "/v1/metrics/supply/burned",
          "method": "GET",
          "summary": "Burned Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/burned",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "current",
          "path": "/v1/metrics/supply/current",
          "method": "GET",
          "summary": "Circulating Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/current",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "current_adjusted",
          "path": "/v1/metrics/supply/current_adjusted",
          "method": "GET",
          "summary": "Adjusted Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/current_adjusted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "emea_1y_supply_change",
          "path": "/v1/metrics/supply/emea_1y_supply_change",
          "method": "GET",
          "summary": "EU Year-over-Year Supply Change",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/emea_1y_supply_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "highly_liquid_sum",
          "path": "/v1/metrics/supply/highly_liquid_sum",
          "method": "GET",
          "summary": "Highly Liquid Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/highly_liquid_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "hodl_waves",
          "path": "/v1/metrics/supply/hodl_waves",
          "method": "GET",
          "summary": "HODL Waves",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/hodl_waves",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "holder_retention",
          "path": "/v1/metrics/supply/holder_retention",
          "method": "GET",
          "summary": "MoM Holder Retention Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/holder_retention",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "illiquid_change",
          "path": "/v1/metrics/supply/illiquid_change",
          "method": "GET",
          "summary": "Illiquid Supply Change",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/illiquid_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "illiquid_sum",
          "path": "/v1/metrics/supply/illiquid_sum",
          "method": "GET",
          "summary": "Illiquid Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/illiquid_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "inflation_rate",
          "path": "/v1/metrics/supply/inflation_rate",
          "method": "GET",
          "summary": "Inflation Rate",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/inflation_rate",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "issued",
          "path": "/v1/metrics/supply/issued",
          "method": "GET",
          "summary": "Issuance",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/issued",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "liquid_change",
          "path": "/v1/metrics/supply/liquid_change",
          "method": "GET",
          "summary": "Liquid Supply Change",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/liquid_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "liquid_illiquid_sum",
          "path": "/v1/metrics/supply/liquid_illiquid_sum",
          "method": "GET",
          "summary": "Liquid and Illiquid Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/liquid_illiquid_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "liquid_sum",
          "path": "/v1/metrics/supply/liquid_sum",
          "method": "GET",
          "summary": "Liquid Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/liquid_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "loss_sum",
          "path": "/v1/metrics/supply/loss_sum",
          "method": "GET",
          "summary": "Supply in Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/loss_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "lth_loss_sum",
          "path": "/v1/metrics/supply/lth_loss_sum",
          "method": "GET",
          "summary": "Long-Term Holder Supply in Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/lth_loss_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "lth_net_change",
          "path": "/v1/metrics/supply/lth_net_change",
          "method": "GET",
          "summary": "Long-Term Holder Position Change",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/lth_net_change",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "lth_profit_sum",
          "path": "/v1/metrics/supply/lth_profit_sum",
          "method": "GET",
          "summary": "Long-Term Holder Supply in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/lth_profit_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "lth_sth_profit_loss_relative",
          "path": "/v1/metrics/supply/lth_sth_profit_loss_relative",
          "method": "GET",
          "summary": "Relative Long/Short-Term Holder Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/lth_sth_profit_loss_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "lth_sum",
          "path": "/v1/metrics/supply/lth_sum",
          "method": "GET",
          "summary": "Long-Term Holder Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/lth_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "minted",
          "path": "/v1/metrics/supply/minted",
          "method": "GET",
          "summary": "Minted Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/minted",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "probably_lost",
          "path": "/v1/metrics/supply/probably_lost",
          "method": "GET",
          "summary": "Probably Lost Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/probably_lost",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "profit_relative",
          "path": "/v1/metrics/supply/profit_relative",
          "method": "GET",
          "summary": "Percent Supply in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/profit_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "profit_sum",
          "path": "/v1/metrics/supply/profit_sum",
          "method": "GET",
          "summary": "Supply in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/profit_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "provably_lost",
          "path": "/v1/metrics/supply/provably_lost",
          "method": "GET",
          "summary": "Provably Lost Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/provably_lost",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "rcap_by_date_bands",
          "path": "/v1/metrics/supply/rcap_by_date_bands",
          "method": "GET",
          "summary": "Realized Cap by Date Bands",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/rcap_by_date_bands",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "rcap_by_date_bands_relative",
          "path": "/v1/metrics/supply/rcap_by_date_bands_relative",
          "method": "GET",
          "summary": "Relative Realized Cap by Date Bands",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/rcap_by_date_bands_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "rcap_hodl_waves",
          "path": "/v1/metrics/supply/rcap_hodl_waves",
          "method": "GET",
          "summary": "Realized Cap HODL Waves",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/rcap_hodl_waves",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "revived_more_1y_sum",
          "path": "/v1/metrics/supply/revived_more_1y_sum",
          "method": "GET",
          "summary": "Revived Supply 1+ Years",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/revived_more_1y_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "revived_more_2y_sum",
          "path": "/v1/metrics/supply/revived_more_2y_sum",
          "method": "GET",
          "summary": "Revived Supply 2+ Years",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/revived_more_2y_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "revived_more_3y_sum",
          "path": "/v1/metrics/supply/revived_more_3y_sum",
          "method": "GET",
          "summary": "Revived Supply 3+ Years",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/revived_more_3y_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "revived_more_5y_sum",
          "path": "/v1/metrics/supply/revived_more_5y_sum",
          "method": "GET",
          "summary": "Revived Supply 5+ Years",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/revived_more_5y_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "sth_loss_sum",
          "path": "/v1/metrics/supply/sth_loss_sum",
          "method": "GET",
          "summary": "Short-Term Holder Supply in Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/sth_loss_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "sth_lth_realized_value_ratio",
          "path": "/v1/metrics/supply/sth_lth_realized_value_ratio",
          "method": "GET",
          "summary": "SLRV Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/sth_lth_realized_value_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sth_profit_loss_ratio",
          "path": "/v1/metrics/supply/sth_profit_loss_ratio",
          "method": "GET",
          "summary": "Short-Term Holder Profit/Loss Ratio",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/sth_profit_loss_ratio",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "sth_profit_sum",
          "path": "/v1/metrics/supply/sth_profit_sum",
          "method": "GET",
          "summary": "Short-Term Holder Supply in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/sth_profit_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "sth_sum",
          "path": "/v1/metrics/supply/sth_sum",
          "method": "GET",
          "summary": "Short-Term Holder Supply",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/sth_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_by_date_bands",
          "path": "/v1/metrics/supply/supply_by_date_bands",
          "method": "GET",
          "summary": "Supply by Date Bands",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/supply_by_date_bands",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "supply_by_date_bands_relative",
          "path": "/v1/metrics/supply/supply_by_date_bands_relative",
          "method": "GET",
          "summary": "Relative Supply by Date Bands",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/supply_by_date_bands_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "supply_by_txout_type",
          "path": "/v1/metrics/supply/supply_by_txout_type",
          "method": "GET",
          "summary": "Supply by TxOut Type",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/supply_by_txout_type",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "tips",
          "path": "/v1/metrics/supply/tips",
          "method": "GET",
          "summary": "Tips (Priority Fee)",
          "full_url": "https://api.glassnode.com/v1/metrics/supply/tips",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        }
      ]
    },
    "transactions": {
      "name": "Transactions",
      "endpoint_count": 94,
      "endpoints": [
        {
          "metric": "contract_calls_external_count",
          "path": "/v1/metrics/transactions/contract_calls_external_count",
          "method": "GET",
          "summary": "Contract Calls (External)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/contract_calls_external_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "contract_calls_internal_count",
          "path": "/v1/metrics/transactions/contract_calls_internal_count",
          "method": "GET",
          "summary": "Contract Calls (Internal)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/contract_calls_internal_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "count",
          "path": "/v1/metrics/transactions/count",
          "method": "GET",
          "summary": "Transaction Count",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "entity_adjusted_count",
          "path": "/v1/metrics/transactions/entity_adjusted_count",
          "method": "GET",
          "summary": "Entity-Adjusted Transaction Count",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/entity_adjusted_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "inscriptions_count",
          "path": "/v1/metrics/transactions/inscriptions_count",
          "method": "GET",
          "summary": "Inscriptions Transaction Count",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/inscriptions_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "inscriptions_count_share",
          "path": "/v1/metrics/transactions/inscriptions_count_share",
          "method": "GET",
          "summary": "Inscriptions Transaction Count Share",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/inscriptions_count_share",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "inscriptions_count_sum",
          "path": "/v1/metrics/transactions/inscriptions_count_sum",
          "method": "GET",
          "summary": "Inscriptions Total Count",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/inscriptions_count_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "inscriptions_fee",
          "path": "/v1/metrics/transactions/inscriptions_fee",
          "method": "GET",
          "summary": "Inscriptions Fees",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/inscriptions_fee",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "inscriptions_fee_share",
          "path": "/v1/metrics/transactions/inscriptions_fee_share",
          "method": "GET",
          "summary": "Inscriptions Fee Share",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/inscriptions_fee_share",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "inscriptions_size_share",
          "path": "/v1/metrics/transactions/inscriptions_size_share",
          "method": "GET",
          "summary": "Inscriptions Block Size Share",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/inscriptions_size_share",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "inscriptions_size_sum",
          "path": "/v1/metrics/transactions/inscriptions_size_sum",
          "method": "GET",
          "summary": "Inscriptions Total Block Size",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/inscriptions_size_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "rate",
          "path": "/v1/metrics/transactions/rate",
          "method": "GET",
          "summary": "Transaction Rate",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/rate",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "runes_count",
          "path": "/v1/metrics/transactions/runes_count",
          "method": "GET",
          "summary": "Runes Count",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/runes_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "runes_count_share",
          "path": "/v1/metrics/transactions/runes_count_share",
          "method": "GET",
          "summary": "Runes Count Share",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/runes_count_share",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "runes_count_sum",
          "path": "/v1/metrics/transactions/runes_count_sum",
          "method": "GET",
          "summary": "Runes Total Count",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/runes_count_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "runes_fee",
          "path": "/v1/metrics/transactions/runes_fee",
          "method": "GET",
          "summary": "Runes Fees",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/runes_fee",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "runes_fee_share",
          "path": "/v1/metrics/transactions/runes_fee_share",
          "method": "GET",
          "summary": "Runes Fee Share",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/runes_fee_share",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "segwit_adoption",
          "path": "/v1/metrics/transactions/segwit_adoption",
          "method": "GET",
          "summary": "SegWit Adoption",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/segwit_adoption",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "size_mean",
          "path": "/v1/metrics/transactions/size_mean",
          "method": "GET",
          "summary": "Transaction Size (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/size_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "size_sum",
          "path": "/v1/metrics/transactions/size_sum",
          "method": "GET",
          "summary": "Transaction Size (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/size_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "spent_output_types_share",
          "path": "/v1/metrics/transactions/spent_output_types_share",
          "method": "GET",
          "summary": "Spent Output Types",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/spent_output_types_share",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "taproot_adoption",
          "path": "/v1/metrics/transactions/taproot_adoption",
          "method": "GET",
          "summary": "Taproot Adoption",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/taproot_adoption",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_between_exchanges_count",
          "path": "/v1/metrics/transactions/transfers_between_exchanges_count",
          "method": "GET",
          "summary": "Inter-Exchange Transfers",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_between_exchanges_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "from_exchange"
          ]
        },
        {
          "metric": "transfers_count",
          "path": "/v1/metrics/transactions/transfers_count",
          "method": "GET",
          "summary": "Transfer Count",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_bridges",
          "path": "/v1/metrics/transactions/transfers_count_bridges",
          "method": "GET",
          "summary": "Bridges Transactions (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_bridges",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_bridges_relative",
          "path": "/v1/metrics/transactions/transfers_count_bridges_relative",
          "method": "GET",
          "summary": "Bridges Transactions (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_bridges_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_defi",
          "path": "/v1/metrics/transactions/transfers_count_defi",
          "method": "GET",
          "summary": "DeFi Transactions (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_defi",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_defi_relative",
          "path": "/v1/metrics/transactions/transfers_count_defi_relative",
          "method": "GET",
          "summary": "DeFi Transactions (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_defi_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_erc20",
          "path": "/v1/metrics/transactions/transfers_count_erc20",
          "method": "GET",
          "summary": "ERC-20 Transactions (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_erc20",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_erc20_relative",
          "path": "/v1/metrics/transactions/transfers_count_erc20_relative",
          "method": "GET",
          "summary": "ERC-20 Transactions (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_erc20_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_nfts",
          "path": "/v1/metrics/transactions/transfers_count_nfts",
          "method": "GET",
          "summary": "NFTs Transactions (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_nfts",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_nfts_relative",
          "path": "/v1/metrics/transactions/transfers_count_nfts_relative",
          "method": "GET",
          "summary": "NFTs Transactions (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_nfts_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_stablecoins",
          "path": "/v1/metrics/transactions/transfers_count_stablecoins",
          "method": "GET",
          "summary": "Stablecoins Transactions (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_stablecoins",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_stablecoins_relative",
          "path": "/v1/metrics/transactions/transfers_count_stablecoins_relative",
          "method": "GET",
          "summary": "Stablecoins Transactions (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_stablecoins_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_vanilla",
          "path": "/v1/metrics/transactions/transfers_count_vanilla",
          "method": "GET",
          "summary": "Vanilla Transactions (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_vanilla",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_count_vanilla_relative",
          "path": "/v1/metrics/transactions/transfers_count_vanilla_relative",
          "method": "GET",
          "summary": "Vanilla Transactions (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_count_vanilla_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_exchanges_to_whales_count",
          "path": "/v1/metrics/transactions/transfers_exchanges_to_whales_count",
          "method": "GET",
          "summary": "Whale Withdrawals from Exchanges (Counts)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_exchanges_to_whales_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "transfers_from_coinjoins_count",
          "path": "/v1/metrics/transactions/transfers_from_coinjoins_count",
          "method": "GET",
          "summary": "Coinjoin Output Count",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_from_coinjoins_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_from_exchanges_count",
          "path": "/v1/metrics/transactions/transfers_from_exchanges_count",
          "method": "GET",
          "summary": "Exchange Withdrawals",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_from_exchanges_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "transfers_from_miners_count",
          "path": "/v1/metrics/transactions/transfers_from_miners_count",
          "method": "GET",
          "summary": "Miner Outgoing Transfers",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_from_miners_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "miner"
          ]
        },
        {
          "metric": "transfers_from_otc_desks_count",
          "path": "/v1/metrics/transactions/transfers_from_otc_desks_count",
          "method": "GET",
          "summary": "OTC Desks Outgoing Transactions",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_from_otc_desks_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_rate",
          "path": "/v1/metrics/transactions/transfers_rate",
          "method": "GET",
          "summary": "Transfer Rate",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_rate",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_to_exchanges_count",
          "path": "/v1/metrics/transactions/transfers_to_exchanges_count",
          "method": "GET",
          "summary": "Exchange Deposits",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_to_exchanges_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "transfers_to_miners_count",
          "path": "/v1/metrics/transactions/transfers_to_miners_count",
          "method": "GET",
          "summary": "Miner Incoming Transfers",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_to_miners_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "miner"
          ]
        },
        {
          "metric": "transfers_to_otc_desks_count",
          "path": "/v1/metrics/transactions/transfers_to_otc_desks_count",
          "method": "GET",
          "summary": "OTC Desks Incoming Transactions",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_to_otc_desks_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_volume_adjusted_mean",
          "path": "/v1/metrics/transactions/transfers_volume_adjusted_mean",
          "method": "GET",
          "summary": "Change-Adjusted Volume (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_adjusted_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_adjusted_median",
          "path": "/v1/metrics/transactions/transfers_volume_adjusted_median",
          "method": "GET",
          "summary": "Change-Adjusted Volume (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_adjusted_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_adjusted_sum",
          "path": "/v1/metrics/transactions/transfers_volume_adjusted_sum",
          "method": "GET",
          "summary": "Change-Adjusted Volume (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_adjusted_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_between_exchanges_sum",
          "path": "/v1/metrics/transactions/transfers_volume_between_exchanges_sum",
          "method": "GET",
          "summary": "Inter-Exchange Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_between_exchanges_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_by_size_entity_adjusted_relative",
          "path": "/v1/metrics/transactions/transfers_volume_by_size_entity_adjusted_relative",
          "method": "GET",
          "summary": "Relative Transfer Volume by Size (Entity-Adjusted)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_by_size_entity_adjusted_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_volume_by_size_entity_adjusted_sum",
          "path": "/v1/metrics/transactions/transfers_volume_by_size_entity_adjusted_sum",
          "method": "GET",
          "summary": "Total Transfer Volume by Size (Entity-Adjusted)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_by_size_entity_adjusted_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_from_lth_loss_sum",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_loss_sum",
          "method": "GET",
          "summary": "Entity-Adjusted LTH Transfer Volume in Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_loss_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_from_lth_profit_sum",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_profit_sum",
          "method": "GET",
          "summary": "Entity-Adjusted LTH Transfer Volume in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_profit_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_from_lth_sth_profit_loss_relative",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_sth_profit_loss_relative",
          "method": "GET",
          "summary": "Entity-Adjusted LTH/STH Transfer Volume in Profit/Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_sth_profit_loss_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_from_lth_sum",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_sum",
          "method": "GET",
          "summary": "Entity-Adjusted LTH Transfer Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_from_lth_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_from_sth_loss_sum",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_sth_loss_sum",
          "method": "GET",
          "summary": "Entity-Adjusted STH Transfer Volume in Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_from_sth_loss_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_from_sth_profit_sum",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_sth_profit_sum",
          "method": "GET",
          "summary": "Entity-Adjusted STH Transfer Volume in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_from_sth_profit_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_from_sth_sum",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_from_sth_sum",
          "method": "GET",
          "summary": "Entity-Adjusted STH Transfer Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_from_sth_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_mean",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_mean",
          "method": "GET",
          "summary": "Entity-Adjusted Volume (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_median",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_median",
          "method": "GET",
          "summary": "Entity-Adjusted Volume (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_entity_adjusted_sum",
          "path": "/v1/metrics/transactions/transfers_volume_entity_adjusted_sum",
          "method": "GET",
          "summary": "Entity-Adjusted Volume (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_entity_adjusted_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_exchanges_net",
          "path": "/v1/metrics/transactions/transfers_volume_exchanges_net",
          "method": "GET",
          "summary": "Exchange Netflow Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_exchanges_net",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_exchanges_net_by_size",
          "path": "/v1/metrics/transactions/transfers_volume_exchanges_net_by_size",
          "method": "GET",
          "summary": "Exchange Netflow Volume by Size",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_exchanges_net_by_size",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_exchanges_to_whales_sum",
          "path": "/v1/metrics/transactions/transfers_volume_exchanges_to_whales_sum",
          "method": "GET",
          "summary": "Whale Withdrawals from Exchanges (Volume)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_exchanges_to_whales_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_from_coinjoins_sum",
          "path": "/v1/metrics/transactions/transfers_volume_from_coinjoins_sum",
          "method": "GET",
          "summary": "Coinjoin Output Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_from_coinjoins_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_from_exchanges_mean",
          "path": "/v1/metrics/transactions/transfers_volume_from_exchanges_mean",
          "method": "GET",
          "summary": "Exchange Outflow Volume (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_from_exchanges_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_from_exchanges_sum",
          "path": "/v1/metrics/transactions/transfers_volume_from_exchanges_sum",
          "method": "GET",
          "summary": "Exchange Outflow Volume (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_from_exchanges_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_from_miners_sum",
          "path": "/v1/metrics/transactions/transfers_volume_from_miners_sum",
          "method": "GET",
          "summary": "Miner Outflow Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_from_miners_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_from_otc_desks_sum",
          "path": "/v1/metrics/transactions/transfers_volume_from_otc_desks_sum",
          "method": "GET",
          "summary": "OTC Desks Outflows",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_from_otc_desks_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_loss_sum",
          "path": "/v1/metrics/transactions/transfers_volume_loss_sum",
          "method": "GET",
          "summary": "Transfer Volume in Loss",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_loss_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_lth_sth_to_exchanges_profit_loss_relative",
          "path": "/v1/metrics/transactions/transfers_volume_lth_sth_to_exchanges_profit_loss_relative",
          "method": "GET",
          "summary": "LTH/STH Transfer Volume in Profit/Loss to Exchanges",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_lth_sth_to_exchanges_profit_loss_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "transfers_volume_lth_to_exchanges_loss_sum",
          "path": "/v1/metrics/transactions/transfers_volume_lth_to_exchanges_loss_sum",
          "method": "GET",
          "summary": "Long-Term Holder in Loss to Exchanges (Volume)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_lth_to_exchanges_loss_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_lth_to_exchanges_profit_sum",
          "path": "/v1/metrics/transactions/transfers_volume_lth_to_exchanges_profit_sum",
          "method": "GET",
          "summary": "Long-Term Holder in Profit to Exchanges (Volume)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_lth_to_exchanges_profit_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_lth_to_exchanges_sum",
          "path": "/v1/metrics/transactions/transfers_volume_lth_to_exchanges_sum",
          "method": "GET",
          "summary": "Long-Term Holder to Exchanges (Volume)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_lth_to_exchanges_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_mean",
          "path": "/v1/metrics/transactions/transfers_volume_mean",
          "method": "GET",
          "summary": "Transfer Volume (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_median",
          "path": "/v1/metrics/transactions/transfers_volume_median",
          "method": "GET",
          "summary": "Transfer Volume (Median)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_median",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_miners_net",
          "path": "/v1/metrics/transactions/transfers_volume_miners_net",
          "method": "GET",
          "summary": "Miner Netflow Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_miners_net",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_miners_to_exchanges",
          "path": "/v1/metrics/transactions/transfers_volume_miners_to_exchanges",
          "method": "GET",
          "summary": "Miners to Exchanges",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_miners_to_exchanges",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_miners_to_exchanges_all",
          "path": "/v1/metrics/transactions/transfers_volume_miners_to_exchanges_all",
          "method": "GET",
          "summary": "Miners to Exchanges (Stacked)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_miners_to_exchanges_all",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_profit_relative",
          "path": "/v1/metrics/transactions/transfers_volume_profit_relative",
          "method": "GET",
          "summary": "Percent Volume in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_profit_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "transfers_volume_profit_sum",
          "path": "/v1/metrics/transactions/transfers_volume_profit_sum",
          "method": "GET",
          "summary": "Transfer Volume in Profit",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_profit_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_sth_to_exchanges_loss_sum",
          "path": "/v1/metrics/transactions/transfers_volume_sth_to_exchanges_loss_sum",
          "method": "GET",
          "summary": "Short-Term Holder in Loss to Exchanges (Volume)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_sth_to_exchanges_loss_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_sth_to_exchanges_profit_sum",
          "path": "/v1/metrics/transactions/transfers_volume_sth_to_exchanges_profit_sum",
          "method": "GET",
          "summary": "Short-Term Holder in Profit to Exchanges (Volume)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_sth_to_exchanges_profit_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_sth_to_exchanges_sum",
          "path": "/v1/metrics/transactions/transfers_volume_sth_to_exchanges_sum",
          "method": "GET",
          "summary": "Short-Term Holder to Exchanges (Volume)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_sth_to_exchanges_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_sum",
          "path": "/v1/metrics/transactions/transfers_volume_sum",
          "method": "GET",
          "summary": "Transfer Volume (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_to_exchanges_mean",
          "path": "/v1/metrics/transactions/transfers_volume_to_exchanges_mean",
          "method": "GET",
          "summary": "Exchange Inflow Volume (Mean)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_to_exchanges_mean",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_to_exchanges_sum",
          "path": "/v1/metrics/transactions/transfers_volume_to_exchanges_sum",
          "method": "GET",
          "summary": "Exchange Inflow Volume (Total)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_to_exchanges_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_to_miners_sum",
          "path": "/v1/metrics/transactions/transfers_volume_to_miners_sum",
          "method": "GET",
          "summary": "Miner Inflow Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_to_miners_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_to_otc_desks_sum",
          "path": "/v1/metrics/transactions/transfers_volume_to_otc_desks_sum",
          "method": "GET",
          "summary": "OTC Desks Inflows",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_to_otc_desks_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_whales_to_exchanges_sum",
          "path": "/v1/metrics/transactions/transfers_volume_whales_to_exchanges_sum",
          "method": "GET",
          "summary": "Whale Deposits to Exchanges (Volume)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_whales_to_exchanges_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_volume_within_exchanges_sum",
          "path": "/v1/metrics/transactions/transfers_volume_within_exchanges_sum",
          "method": "GET",
          "summary": "In-House Exchange Volume",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_volume_within_exchanges_sum",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "c"
          ]
        },
        {
          "metric": "transfers_whales_to_exchanges_count",
          "path": "/v1/metrics/transactions/transfers_whales_to_exchanges_count",
          "method": "GET",
          "summary": "Whale Deposits to Exchanges (Counts)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/transfers_whales_to_exchanges_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "e"
          ]
        },
        {
          "metric": "tx_types_breakdown_count",
          "path": "/v1/metrics/transactions/tx_types_breakdown_count",
          "method": "GET",
          "summary": "Transaction Type Breakdown (Absolute)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/tx_types_breakdown_count",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        },
        {
          "metric": "tx_types_breakdown_relative",
          "path": "/v1/metrics/transactions/tx_types_breakdown_relative",
          "method": "GET",
          "summary": "Transaction Type Breakdown (Relative)",
          "full_url": "https://api.glassnode.com/v1/metrics/transactions/tx_types_breakdown_relative",
          "required_params": [
            "a"
          ],
          "optional_params": [
            "s",
            "u",
            "i",
            "f",
            "timestamp_format"
          ]
        }
      ]
    }
  },
  "summary": {
    "total_categories": 20,
    "total_endpoints": 734,
    "extraction_date": "2025-09-18",
    "source": "OpenAPI specifications from Glassnode documentation"
  }
}